* keep track of each package's action times and process the longest ones first next time?

* autowidth help display columns?

* reduce file download checksum error to filename only. Path is not needed.

* include result and duration of IPKs and PIPs install/upgrade in session results.
    [/share/Public] # ./sherpa.manager.source install trans start stopped
    sherpa <?today?>-<?branch?> • a mini-package-manager for QNAP NAS

    done: downloaded 2 QPKGs
    done: installed no standalone QPKGs
        └─ skipped: Entware
    done: installed 1 addon IPK
        └─ skipped: Entware
    proc: installing addon PIPs      └─ skipped: Entware
    done: installed 1 dependent QPKG
        └─ skipped: Entware
    done: started 2 dependent QPKGs

    • These package actions completed OK:
        download OTransmission in 1 second
        download Entware in 1 second
        install addon in 5 seconds
        install OTransmission in 9 seconds
        start NZBGet in 2 seconds
        start SABnzbd in 17 seconds

    • These package actions were skipped:
        install Entware
            Reason: already installed

* user should be able to specify "debug to disk" and/or "debug to screen". 'debug-screen' should also enable 'debug-disk'.

* BASH completion?

* include new integrated help screens for all actions like:
    `sherpa paste help`, `sherpa install help`, `sherpa reassign help`

* add checks to all service scripts to examine $EUID.
    Maybe a way can be found to run each service script without superuser access?

* after removing entware, 'sed' and 'grep' commands fail for the remainder of that session. Must ensure changeover to QTS binaries works correctly.

* ensure each service script 'venv' upgrades its own 'pip'.

* ensure each action fork is actually being killed after it issues an 'exit' into the message pipe.

* add mini rolling CPU utilitisation graph to progress display while installing QPKGs?
    while true; do top -b -n 2 -d 0.2 -p 1621 | tail -1 | awk '{print $9}'; done
    while true; do /usr/bin/top -b -n2 -d1 | grep 20744 | tail -1 | awk '{print $7}'; done

* remove hint to 'enable' QPKG when attempting to 'stop' it while in a disabled state:
    [~] # /etc/init.d/clamav.sh stop; echo $?
    The 'ClamAV' QPKG is disabled. Please enable it first with: qpkg_service enable ClamAV
    1
