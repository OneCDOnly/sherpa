PACKAGES_VER='<?build_date?>'
#* <?dont_edit?>
BASE_QPKG_CONFLICTS_WITH='TarMT'
BASE_QPKG_WARNINGS='Qboost'
ESSENTIAL_IPKS='ca-certificates coreutils-sleep coreutils-sort coreutils-stty coreutils-timeout findutils gcc git git-http grep less nano sed sqlite3-cli'
ESSENTIAL_PIPS='pip virtualenv'		# 'pip' is listed here to ensure an upgrade to the the 'python3-pip' IPKG from Entware.
MIN_PYTHON_VER=3114					# keep this up-to-date with Entware Python3 version, so IPK upgrade notifier will work.
MIN_PERL_VER=5281					# keep this up-to-date with Entware Perl version, so IPK upgrade notifier will work.

# use pseudo-alpha-sorted QPKG name order (i.e. disregard character-case and leading 'O').
# indent QPKGs with same name but different arch.

# supported package details - parallel arrays.
QPKG_NAME=()						# internal QPKG name.
QPKG_ARCH=()						# QPKG supports this architecture. Use 'all' if every arch is supported. Use 'none' to disable installation.
QPKG_VERSION=() 					# QPKG version.
QPKG_HASH=() 						# MD5 checksum.
QPKG_URL=() 						# remote URL.
# entering (default) for any of the following properties will use the same value as described in the first package with the same name and property (AKA the default).
QPKG_MIN_RAM_KB=()					# QPKG requires at-least this much RAM installed in kiB. Use 'none' if no minimum.
QPKG_MIN_OS_VERSION=()				# the minimum QTS/QuTS version supported by this QPKG.
QPKG_MAX_OS_VERSION=()				# the maximum QTS/QuTS version supported by this QPKG.
QPKG_AUTHOR=()						# name of the person or group maintaining this QPKG.
QPKG_AUTHOR_EMAIL=()				# email address of the package maintainer.
QPKG_APPLICATION_AUTHOR=()			# name of the person or group maintaining the internal application.
QPKG_APPLICATION_AUTHOR_EMAIL=()	# email address for the internal application developer.
QPKG_DESC=()						# QPKG description.
QPKG_NOTE=()						# an additional note to be prominently displayed.
QPKG_ABBRVS=()						# if set, this package is user-installable, and these abbreviations may be used to specify app.
QPKG_CONFLICTS_WITH=()				# abort if these QPKGs are installed.
QPKG_DEPENDS_ON=()					# require these QPKGs to be installed first. Use '' if package is standalone. Separate alternatives with '|'.
QPKG_REQUIRES_IPKS=()				# require these IPKs to be installed first.
QPKG_CAN_BACKUP=()					# true/false: this QPKG service-script supports configuration 'backup' and 'restore' operations.
QPKG_CAN_RESTART_TO_UPDATE=()		# true/false: the internal appplication can be updated by restarting the QPKG.
QPKG_CAN_CLEAN=()					# true/false: the internal appplication can be cleaned and re-downloaded.
QPKG_CAN_LOG_SERVICE_OPERATIONS=()	# true/false: the service script logs operation results in a format compatible with sherpa.
QPKG_TEST_FOR_ACTIVE=()				# one-or-more tests to determine if this QPKG is active or inactive. Use '' if QPKG has its own status tests.

QPKG_NAME+=(ClamAV)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(1572864)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('too many to mention')
QPKG_APPLICATION_AUTHOR_EMAIL+=(various)
QPKG_DESC+=('replacement for the QTS built-in ClamAV')
QPKG_NOTE+=('Requires minimum 1.5GiB installed RAM')
QPKG_ABBRVS+=('av clam clamscan freshclam clamav')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('clamav freshclam')
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(Deluge-server)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("Calum Lind & Andrew Resch")
QPKG_APPLICATION_AUTHOR_EMAIL+=(various)
QPKG_DESC+=('Deluge BitTorrent daemon')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('dl deluge del-server deluge-server')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('deluge jq python3-cryptography python3-pillow python3-pip')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(Deluge-web)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("Calum Lind & Andrew Resch")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('web UI to access multiple Deluge BitTorrent daemons')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('dw del-web deluge-web')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=('Entware Deluge-server')
QPKG_REQUIRES_IPKS+=('deluge-ui-web jq python3-cryptography python3-pillow python3-pip')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(duf)
QPKG_ARCH+=(a64)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('Christian Muehlhaeuser')
QPKG_APPLICATION_AUTHOR_EMAIL+=("muesli@gmail.com")
QPKG_DESC+=("nice CLI disk-usage/free-space utility from @muesli")
QPKG_NOTE+=("arm64, x31, x41, x86 & x86-64 NAS architectures-only")
QPKG_ABBRVS+=('df duf')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=('command -v duf &>/dev/null')

	QPKG_NAME+=(duf)
	QPKG_ARCH+=(a31)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(duf)
	QPKG_ARCH+=(a41)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(duf)
	QPKG_ARCH+=(i86)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(duf)
	QPKG_ARCH+=(i64)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

QPKG_NAME+=(Entware)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(http://bin.entware.net/other/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('Andrey Sechin (zyxmon on GitHub)')
QPKG_AUTHOR_EMAIL+=("zyxmon@gmail.com")
QPKG_APPLICATION_AUTHOR+=('Andrey Sechin (zyxmon on GitHub)')
QPKG_APPLICATION_AUTHOR_EMAIL+=("zyxmon@gmail.com")
QPKG_DESC+=("provides over 2800 very useful packages via 'opkg'")
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('ew ent opkg entware')
QPKG_CONFLICTS_WITH+=('Optware Optware-NG')
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(false)
QPKG_TEST_FOR_ACTIVE+=("[[ -L /opt && -L /opt/etc/passwd ]] && $GREP_CMD -q '/opt/etc/profile' /root/.profile")

QPKG_NAME+=(Glances)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('Nicolas Hennion')
QPKG_APPLICATION_AUTHOR_EMAIL+=("nicolashennion@gmail.com")
QPKG_DESC+=('an open-source system cross-platform monitoring tool')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('gl glan glance glances')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('python3-dateutil python3-defusedxml python3-cffi python3-cryptography python3-dev python3-packaging python3-pip python3-psutil python3-requests python3-six')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(gpt-engineer)
QPKG_ARCH+=(none)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("AntonOsika@GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('Specify what you want it to build, the AI asks for clarification, and then builds it')
QPKG_NOTE+=('Not installable (for-now), still a few dependencies to resolve')
QPKG_ABBRVS+=('gp gpt gpt-engineer')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=(python3-pip)
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(Headphones)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("rembo10@GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('automated music finder for NZBs and Torrents')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('hp hp3 head phones hphones headphones3 headphones')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('python3-dev python3-pip python3-requests')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(HideThatBanner)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_APPLICATION_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_DESC+=('hide the annoying rotating banner at the top of QTS App Center pages')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('hb htb hide banner hidebanner hidethatbanner')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(IncreaseTimeouts)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(430)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_APPLICATION_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_DESC+=("increase timeouts for the 'qpkg_service' utility from 3 minutes (default) to 30 minutes")
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('in increase increasetimeouts')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(inxi)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("smxi@GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('a full featured CLI system information tool')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('in xi inxi')
QPKG_CONFLICTS_WITH+=('Perl QPerl')
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('lm-sensors perl perlbase-base perlbase-data perlbase-file perlbase-getopt')
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(LazyLibrarian)
QPKG_ARCH+=(a64)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('Phil Borman')
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('follow authors and grab metadata for all your digital reading needs')
QPKG_NOTE+=("arm64, x86 & x86-64 NAS architectures-only")
QPKG_ABBRVS+=('ll lazy lazylibrarian')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('python3-certifi python3-cffi python3-cryptography python3-dev python3-mako python3-pillow python3-pip python3-pyopenssl python3-requests python3-yaml')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

	QPKG_NAME+=(LazyLibrarian)
	QPKG_ARCH+=(i86)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(LazyLibrarian)
	QPKG_ARCH+=(i64)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

QPKG_NAME+=(OMedusa)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("fernandog, pOpsicles, medariox & labrys @GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('another SickBeard fork: manage and search for TV shows')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('om med omed medusa omedusa')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('mediainfo python3-dev python3-pip')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(Mylar3)
QPKG_ARCH+=(a64)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("evilhero & barbequesauce @GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('automated Comic Book (cbr/cbz) downloader program for use with NZB and torrents')
QPKG_NOTE+=("arm64, x86 & x86-64 NAS architectures-only")
QPKG_ABBRVS+=('my myl mylar mylar3')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('python3-dev python3-pillow python3-pip python3-requests')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

	QPKG_NAME+=(Mylar3)
	QPKG_ARCH+=(i86)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(Mylar3)
	QPKG_ARCH+=(i64)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

QPKG_NAME+=(NZBGet)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("hugbug@GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('lite-and-fast NZB download manager with a simple web UI')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('ng nzb nzbg nget nzbget')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=(nzbget)
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(NZBHydra2)
QPKG_ARCH+=(a64)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("theotherp@GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('meta search for newznab indexers and torznab trackers')
QPKG_NOTE+=("arm64 & x86-64 NAS architectures-only")
QPKG_ABBRVS+=('nh hy nzbh hydra hydra2 nzbhydra nzbhydra2')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=(python3-pip)
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

	QPKG_NAME+=(NZBHydra2)
	QPKG_ARCH+=(i64)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

QPKG_NAME+=(nzbToMedia)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('Clinton Hall')
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('provides NZB and Torrent postprocessing for multiple services')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('n2 nt nzb2 nzb2m nzbto nzbtom nzbtomedia')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=(python3-pip)
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(OliveTin)
QPKG_ARCH+=(a64)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("jamesread@GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('safe and simple access to predefined shell commands from a web interface')
QPKG_NOTE+=('arm64, x19, x31, x41 & x86-64 NAS architectures-only')
QPKG_ABBRVS+=('ot otin olive olivet olivetin')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

	QPKG_NAME+=(OliveTin)
	QPKG_ARCH+=(a19)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(OliveTin)
	QPKG_ARCH+=(a31)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(OliveTin)
	QPKG_ARCH+=(a41)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(OliveTin)
	QPKG_ARCH+=(i64)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

QPKG_NAME+=(Par2)
QPKG_ARCH+=(i86)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(425)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('Stephane Guerithault (Qoolbox)')
QPKG_AUTHOR_EMAIL+=("qoolbox@gmail.com")
QPKG_APPLICATION_AUTHOR+=("BlackIkeEagle@GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('create and use PAR2 files to detect damage in data files and repair them if necessary')
QPKG_NOTE+=('x19 & x86 NAS architectures-only')
QPKG_ABBRVS+=('pr par par2')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(false)
QPKG_TEST_FOR_ACTIVE+=('[[ $(/usr/bin/readlink /usr/bin/par2) = $(/sbin/getcfg Par2 install_path -f /etc/config/qpkg.conf)/bin/par2 ]]')

	QPKG_NAME+=(Par2)
	QPKG_ARCH+=(a19)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

QPKG_NAME+=(Par2turbo)
QPKG_ARCH+=(a64)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(425)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('Stephane Guerithault (Qoolbox)')
QPKG_AUTHOR_EMAIL+=("qoolbox@gmail.com")
QPKG_APPLICATION_AUTHOR+=("animetosho@GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=("This is a simple fork of par2cmdline which replaces core computation routines with ParPar’s processing backend, improving par2cmdline’s performance on x86/ARM platforms")
QPKG_NOTE+=('arm64, x31, x41 & x86-64 NAS architectures-only')
QPKG_ABBRVS+=('prt part par2t parturbo par2turbo')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(false)
QPKG_TEST_FOR_ACTIVE+=('[[ $(/usr/bin/readlink /usr/bin/par2) = $(/sbin/getcfg Par2turbo install_path -f /etc/config/qpkg.conf)/par2 ]]')

	QPKG_NAME+=(Par2turbo)
	QPKG_ARCH+=(a31)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(Par2turbo)
	QPKG_ARCH+=(a41)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(Par2turbo)
	QPKG_ARCH+=(i64)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

QPKG_NAME+=(pyLoad)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("vuolter, GammaC0de & RaNaN @GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('download manager designed to be extremely lightweight, easily extensible and fully web manageable')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('py load pyload')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('python3-cryptography python3-curl python3-dev python3-pip python3-six tesseract')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(OqBittorrent)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("Chocobo1 & sledgehammer999 @GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('open-source software alternative to µTorrent')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('qb oqb qbit bitorrent bittorrent qbittorrent oqbittorrent')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=(qbittorrent)
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(QDK)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_qnap_dev_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('Cheng-Yuan Hong (edhongcy on GitHub)')
QPKG_AUTHOR_EMAIL+=('edhongcy@gmail.com')
QPKG_APPLICATION_AUTHOR+=('Cheng-Yuan Hong (edhongcy on GitHub)')
QPKG_APPLICATION_AUTHOR_EMAIL+=('edhongcy@gmail.com')
QPKG_DESC+=("provides the 'qbuild' command to build and manage your own QPKGs")
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('qd qbuild qdk')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(false)
QPKG_TEST_FOR_ACTIVE+=('command -v qbuild &>/dev/null')

QPKG_NAME+=(RunLast)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_APPLICATION_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_DESC+=('run user scripts and commands after all installed QPKGs have completed startup')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('rl run runlast')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=('true')

QPKG_NAME+=(SABnzbd)
QPKG_ARCH+=(a64)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("Safihre & shypike @GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('full-featured NZB download manager with a nice web UI')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('sb sb3 sab sab3 sabnzbd3 sabnzbd')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=('Entware Par2turbo|Par2 Unrar')
QPKG_REQUIRES_IPKS+=('coreutils-nice ffprobe ionice python3-cffi python3-cryptography python3-dev python3-pip p7zip')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

	QPKG_NAME+=(SABnzbd)
	QPKG_ARCH+=(i64)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(SABnzbd)
	QPKG_ARCH+=(a41)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(SABnzbd)
	QPKG_ARCH+=(a19)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=('Entware Par2turbo|Par2')
	QPKG_REQUIRES_IPKS+=('coreutils-nice ffprobe ionice python3-cffi python3-cryptography python3-dev python3-pip p7zip unrar')
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(SABnzbd)
	QPKG_ARCH+=(a31)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=('Entware Par2turbo|Par2')
	QPKG_REQUIRES_IPKS+=('coreutils-nice ffprobe ionice python3-cffi python3-cryptography python3-dev python3-pip p7zip unrar')
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(SABnzbd)
	QPKG_ARCH+=(i86)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=('Entware Par2turbo|Par2')
	QPKG_REQUIRES_IPKS+=('coreutils-nice ffprobe ionice python3-cffi python3-cryptography python3-dev python3-pip p7zip unrar')
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

QPKG_NAME+=(sha3sum)
QPKG_ARCH+=(i86)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("maandree@Codeberg")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=("the 'sha3sum' and keccak utilities from Mattias Andrée")
QPKG_NOTE+=("x86 & x86-64 NAS architectures-only")
QPKG_ABBRVS+=('s3 sha sha3 sha3sum')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(false)
QPKG_TEST_FOR_ACTIVE+=(none)

	QPKG_NAME+=(sha3sum)
	QPKG_ARCH+=(i64)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

QPKG_NAME+=(sherpa)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_APPLICATION_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_DESC+=("mini-package-manager for QNAP NAS")
QPKG_NOTE+=(none)
QPKG_ABBRVS+=("sh self sherpa")
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(OSickGear)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("JackDandy@GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('very stable SickBeard fork: manage and search for TV shows')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('sg os osg sick gear sickg ogear osickg sickgear osickgear')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('python3-cffi python3-cryptography python3-dev python3-pip python3-lxml')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(SortMyQPKGs)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_other_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_APPLICATION_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_DESC+=('ensure your installed QPKGs start in a compatible sequence during NAS bootup')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('sm smq smqs sort sortmy sortmine sortpackages sortmypackages sortmyqpkgs')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(OTransmission)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('Charles Kerr')
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=('lite BitTorrent download manager with a simple web UI')
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('tm tr ot trans otrans tmission transmission otransmission')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('transmission-web jq')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(Unrar)
QPKG_ARCH+=(a64)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(433)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('Stephane Guerithault (Qoolbox)')
QPKG_AUTHOR_EMAIL+=("qoolbox@gmail.com")
QPKG_APPLICATION_AUTHOR+=('Alexander Roshal')
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=("The 'unrar' utility, for unpacking RAR files")
QPKG_NOTE+=('arm64, x41 & x86-64 NAS architectures-only')
QPKG_ABBRVS+=('un unr unrar')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(none)
QPKG_REQUIRES_IPKS+=(none)
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(false)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(false)
QPKG_TEST_FOR_ACTIVE+=('[[ $(/usr/bin/readlink /usr/bin/unrar) = $(/sbin/getcfg Unrar install_path -f /etc/config/qpkg.conf)/unrar ]]')

	QPKG_NAME+=(Unrar)
	QPKG_ARCH+=(a41)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(Unrar)
	QPKG_ARCH+=(i64)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

QPKG_NAME+=(OWatcher3)
QPKG_ARCH+=(all)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=("nosmokingbandit, barbequesauce & labrys @GitHub")
QPKG_APPLICATION_AUTHOR_EMAIL+=(none)
QPKG_DESC+=("automated movie NZB & Torrent searcher and snatcher")
QPKG_NOTE+=(none)
QPKG_ABBRVS+=('wt wat owat watch watcher watcher3 owatcher3')
QPKG_CONFLICTS_WITH+=('Python3 QPython3 QPython39 QPython310 QPython311')
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('python3-dev python3-pip jq')
QPKG_CAN_BACKUP+=(true)
QPKG_CAN_RESTART_TO_UPDATE+=(true)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

QPKG_NAME+=(WebSSH)
QPKG_ARCH+=(a64)
QPKG_VERSION+=(<?version?>)
QPKG_HASH+=(<?hash?>)
QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
QPKG_MIN_RAM_KB+=(none)
QPKG_MIN_OS_VERSION+=(400)
QPKG_MAX_OS_VERSION+=(none)
QPKG_AUTHOR+=('OneCD (OneCDOnly on GitHub)')
QPKG_AUTHOR_EMAIL+=("onecdonly@gmail.com")
QPKG_APPLICATION_AUTHOR+=('Shengdun Hua')
QPKG_APPLICATION_AUTHOR_EMAIL+=("webmaster0115@gmail.com")
QPKG_DESC+=('simple web application to be used as an SSH client to connect to your SSH servers')
QPKG_NOTE+=("arm64, x86 & x86-64 NAS architectures-only")
QPKG_ABBRVS+=('ws ssh web wssh webssh')
QPKG_CONFLICTS_WITH+=(none)
QPKG_DEPENDS_ON+=(Entware)
QPKG_REQUIRES_IPKS+=('python3-bcrypt python3-cryptography python3-cffi python3-pip python3-six')
QPKG_CAN_BACKUP+=(false)
QPKG_CAN_RESTART_TO_UPDATE+=(false)
QPKG_CAN_CLEAN+=(true)
QPKG_CAN_LOG_SERVICE_OPERATIONS+=(true)
QPKG_TEST_FOR_ACTIVE+=(none)

	QPKG_NAME+=(WebSSH)
	QPKG_ARCH+=(i86)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)

	QPKG_NAME+=(WebSSH)
	QPKG_ARCH+=(i64)
	QPKG_VERSION+=(<?version?>)
	QPKG_HASH+=(<?hash?>)
	QPKG_URL+=(<?cdn_sherpa_packages_url?>/<?qpkg_filename?>)
	QPKG_MIN_RAM_KB+=(default)
	QPKG_MIN_OS_VERSION+=(default)
	QPKG_MAX_OS_VERSION+=(default)
	QPKG_AUTHOR+=(default)
	QPKG_AUTHOR_EMAIL+=(default)
	QPKG_APPLICATION_AUTHOR+=(default)
	QPKG_APPLICATION_AUTHOR_EMAIL+=(default)
	QPKG_DESC+=(default)
	QPKG_NOTE+=(default)
	QPKG_ABBRVS+=(default)
	QPKG_CONFLICTS_WITH+=(default)
	QPKG_DEPENDS_ON+=(default)
	QPKG_REQUIRES_IPKS+=(default)
	QPKG_CAN_BACKUP+=(default)
	QPKG_CAN_RESTART_TO_UPDATE+=(default)
	QPKG_CAN_CLEAN+=(default)
	QPKG_CAN_LOG_SERVICE_OPERATIONS+=(default)
	QPKG_TEST_FOR_ACTIVE+=(default)
