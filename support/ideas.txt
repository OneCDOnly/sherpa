* include elapsed time when writing DisplayRunAndLog() results to debug log.

* add mini rolling CPU utilitisation graph to progress display while installing QPKGs?
    while true; do top -b -n 2 -d 0.2 -p 1621 | tail -1 | awk '{print $9}'; done
    while true; do /usr/bin/top -b -n2 -d1 | grep 20744 | tail -1 | awk '{print $7}'; done

* create a troubleshooting page for the wiki?
    This should include explanations of various ops like clean and check, so users will have a better idea which op to run when things go wrong.

* update IPKs automatically?
    Store a local checksum of the Entware package list. If this changes, assume it's been updated and all IPKs should be checked for upgrade status and upgraded. No-need to prompt user - just upgrade automatically.

* see if *arr package can be supported?

* make Entware check for package updates early-on in background?

* download QPKG updates in background when running sherpa for any reason?

* keep track of each package's action times and process the longest ones first next time?
	- add a new "launch policy" setting: 'none', 'longest', 'shortest', 'balanced'.
		- 'none': QPKGs are processed in the same order they appear in 'packages'.
		- 'longest': QPKGs that take a long time to execute are processed first, in-order, down to the shortest time to execute.
		- 'shortest': QPKGs that take a short time to execute are processed first, in-order, up to the longest time to execute.
		- 'balanced': QPKGs are processed as a mix of longest, then shortest, then next longest, then next shortest, and so-on.

* autowidth display columns?

* BASH completion?

* include new integrated help screens for all actions like:
    `sherpa paste help`, `sherpa install help`, `sherpa reassign help`

* add checks to all service scripts to examine $EUID.
    Maybe a way can be found to run each service script without superuser access?

* include result and duration of IPKs and PIPs install/upgrade in session results.
