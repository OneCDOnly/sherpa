Session.Display.Clean.Clear()
    {
    [[ $_obj_session_display_clean_flag_ != 'true' ]] && return
    _obj_session_display_clean_flag_=false
    [[ $_obj_session_display_clean_changes_flag_ = 'true' ]] && DebugVar _obj_session_display_clean_flag_
    }
Session.Display.Clean.Disable()
    {
    [[ $_obj_session_display_clean_enable_ != 'true' ]] && return
    _obj_session_display_clean_enable_=false
    [[ $_obj_session_display_clean_changes_flag_ = 'true' ]] && DebugVar _obj_session_display_clean_enable_
    }
Session.Display.Clean.DontLogChanges()
    {
    [[ $_obj_session_display_clean_changes_flag_ != 'true' ]] && return
    _obj_session_display_clean_changes_flag_=false
    }
Session.Display.Clean.Enable()
    {
    [[ $_obj_session_display_clean_enable_ = 'true' ]] && return
    _obj_session_display_clean_enable_=true
    [[ $_obj_session_display_clean_changes_flag_ = 'true' ]] && DebugVar _obj_session_display_clean_enable_
    }
Session.Display.Clean.Init()
    {
    _obj_session_display_clean_text_=''
    _obj_session_display_clean_flag_=false
    _obj_session_display_clean_changes_flag_=true
    _obj_session_display_clean_enable_=false
    }
Session.Display.Clean.IsDisabled()
    {
    [[ $_obj_session_display_clean_enable_ != 'true' ]]
    }
Session.Display.Clean.IsEnabled()
    {
    [[ $_obj_session_display_clean_enable_ = 'true' ]]
    }
Session.Display.Clean.IsNt()
    {
    [[ $_obj_session_display_clean_flag_ != 'true' ]]
    }
Session.Display.Clean.IsSet()
    {
    [[ $_obj_session_display_clean_flag_ = 'true' ]]
    }
Session.Display.Clean.LogChanges()
    {
    [[ $_obj_session_display_clean_changes_flag_ = 'true' ]] && return
    _obj_session_display_clean_changes_flag_=true
    }
Session.Display.Clean.Set()
    {
    [[ $_obj_session_display_clean_flag_ = 'true' ]] && return
    _obj_session_display_clean_flag_=true
    [[ $_obj_session_display_clean_changes_flag_ = 'true' ]] && DebugVar _obj_session_display_clean_flag_
    }
Session.Display.Clean.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_session_display_clean_text_=$2
    else
        echo -n "$_obj_session_display_clean_text_"
    fi
    }
Session.Display.Clean.Init

Session.LineSpace.Clear()
    {
    [[ $_obj_session_linespace_flag_ != 'true' ]] && return
    _obj_session_linespace_flag_=false
    [[ $_obj_session_linespace_changes_flag_ = 'true' ]] && DebugVar _obj_session_linespace_flag_
    }
Session.LineSpace.Disable()
    {
    [[ $_obj_session_linespace_enable_ != 'true' ]] && return
    _obj_session_linespace_enable_=false
    [[ $_obj_session_linespace_changes_flag_ = 'true' ]] && DebugVar _obj_session_linespace_enable_
    }
Session.LineSpace.DontLogChanges()
    {
    [[ $_obj_session_linespace_changes_flag_ != 'true' ]] && return
    _obj_session_linespace_changes_flag_=false
    }
Session.LineSpace.Enable()
    {
    [[ $_obj_session_linespace_enable_ = 'true' ]] && return
    _obj_session_linespace_enable_=true
    [[ $_obj_session_linespace_changes_flag_ = 'true' ]] && DebugVar _obj_session_linespace_enable_
    }
Session.LineSpace.Init()
    {
    _obj_session_linespace_text_=''
    _obj_session_linespace_flag_=false
    _obj_session_linespace_changes_flag_=true
    _obj_session_linespace_enable_=false
    }
Session.LineSpace.IsDisabled()
    {
    [[ $_obj_session_linespace_enable_ != 'true' ]]
    }
Session.LineSpace.IsEnabled()
    {
    [[ $_obj_session_linespace_enable_ = 'true' ]]
    }
Session.LineSpace.IsNt()
    {
    [[ $_obj_session_linespace_flag_ != 'true' ]]
    }
Session.LineSpace.IsSet()
    {
    [[ $_obj_session_linespace_flag_ = 'true' ]]
    }
Session.LineSpace.LogChanges()
    {
    [[ $_obj_session_linespace_changes_flag_ = 'true' ]] && return
    _obj_session_linespace_changes_flag_=true
    }
Session.LineSpace.Set()
    {
    [[ $_obj_session_linespace_flag_ = 'true' ]] && return
    _obj_session_linespace_flag_=true
    [[ $_obj_session_linespace_changes_flag_ = 'true' ]] && DebugVar _obj_session_linespace_flag_
    }
Session.LineSpace.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_session_linespace_text_=$2
    else
        echo -n "$_obj_session_linespace_text_"
    fi
    }
Session.LineSpace.Init

Session.ShowBackupLocation.Clear()
    {
    [[ $_obj_session_showbackuplocation_flag_ != 'true' ]] && return
    _obj_session_showbackuplocation_flag_=false
    [[ $_obj_session_showbackuplocation_changes_flag_ = 'true' ]] && DebugVar _obj_session_showbackuplocation_flag_
    }
Session.ShowBackupLocation.Disable()
    {
    [[ $_obj_session_showbackuplocation_enable_ != 'true' ]] && return
    _obj_session_showbackuplocation_enable_=false
    [[ $_obj_session_showbackuplocation_changes_flag_ = 'true' ]] && DebugVar _obj_session_showbackuplocation_enable_
    }
Session.ShowBackupLocation.DontLogChanges()
    {
    [[ $_obj_session_showbackuplocation_changes_flag_ != 'true' ]] && return
    _obj_session_showbackuplocation_changes_flag_=false
    }
Session.ShowBackupLocation.Enable()
    {
    [[ $_obj_session_showbackuplocation_enable_ = 'true' ]] && return
    _obj_session_showbackuplocation_enable_=true
    [[ $_obj_session_showbackuplocation_changes_flag_ = 'true' ]] && DebugVar _obj_session_showbackuplocation_enable_
    }
Session.ShowBackupLocation.Init()
    {
    _obj_session_showbackuplocation_text_=''
    _obj_session_showbackuplocation_flag_=false
    _obj_session_showbackuplocation_changes_flag_=true
    _obj_session_showbackuplocation_enable_=false
    }
Session.ShowBackupLocation.IsDisabled()
    {
    [[ $_obj_session_showbackuplocation_enable_ != 'true' ]]
    }
Session.ShowBackupLocation.IsEnabled()
    {
    [[ $_obj_session_showbackuplocation_enable_ = 'true' ]]
    }
Session.ShowBackupLocation.IsNt()
    {
    [[ $_obj_session_showbackuplocation_flag_ != 'true' ]]
    }
Session.ShowBackupLocation.IsSet()
    {
    [[ $_obj_session_showbackuplocation_flag_ = 'true' ]]
    }
Session.ShowBackupLocation.LogChanges()
    {
    [[ $_obj_session_showbackuplocation_changes_flag_ = 'true' ]] && return
    _obj_session_showbackuplocation_changes_flag_=true
    }
Session.ShowBackupLocation.Set()
    {
    [[ $_obj_session_showbackuplocation_flag_ = 'true' ]] && return
    _obj_session_showbackuplocation_flag_=true
    [[ $_obj_session_showbackuplocation_changes_flag_ = 'true' ]] && DebugVar _obj_session_showbackuplocation_flag_
    }
Session.ShowBackupLocation.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_session_showbackuplocation_text_=$2
    else
        echo -n "$_obj_session_showbackuplocation_text_"
    fi
    }
Session.ShowBackupLocation.Init

Session.SuggestIssue.Clear()
    {
    [[ $_obj_session_suggestissue_flag_ != 'true' ]] && return
    _obj_session_suggestissue_flag_=false
    [[ $_obj_session_suggestissue_changes_flag_ = 'true' ]] && DebugVar _obj_session_suggestissue_flag_
    }
Session.SuggestIssue.Disable()
    {
    [[ $_obj_session_suggestissue_enable_ != 'true' ]] && return
    _obj_session_suggestissue_enable_=false
    [[ $_obj_session_suggestissue_changes_flag_ = 'true' ]] && DebugVar _obj_session_suggestissue_enable_
    }
Session.SuggestIssue.DontLogChanges()
    {
    [[ $_obj_session_suggestissue_changes_flag_ != 'true' ]] && return
    _obj_session_suggestissue_changes_flag_=false
    }
Session.SuggestIssue.Enable()
    {
    [[ $_obj_session_suggestissue_enable_ = 'true' ]] && return
    _obj_session_suggestissue_enable_=true
    [[ $_obj_session_suggestissue_changes_flag_ = 'true' ]] && DebugVar _obj_session_suggestissue_enable_
    }
Session.SuggestIssue.Init()
    {
    _obj_session_suggestissue_text_=''
    _obj_session_suggestissue_flag_=false
    _obj_session_suggestissue_changes_flag_=true
    _obj_session_suggestissue_enable_=false
    }
Session.SuggestIssue.IsDisabled()
    {
    [[ $_obj_session_suggestissue_enable_ != 'true' ]]
    }
Session.SuggestIssue.IsEnabled()
    {
    [[ $_obj_session_suggestissue_enable_ = 'true' ]]
    }
Session.SuggestIssue.IsNt()
    {
    [[ $_obj_session_suggestissue_flag_ != 'true' ]]
    }
Session.SuggestIssue.IsSet()
    {
    [[ $_obj_session_suggestissue_flag_ = 'true' ]]
    }
Session.SuggestIssue.LogChanges()
    {
    [[ $_obj_session_suggestissue_changes_flag_ = 'true' ]] && return
    _obj_session_suggestissue_changes_flag_=true
    }
Session.SuggestIssue.Set()
    {
    [[ $_obj_session_suggestissue_flag_ = 'true' ]] && return
    _obj_session_suggestissue_flag_=true
    [[ $_obj_session_suggestissue_changes_flag_ = 'true' ]] && DebugVar _obj_session_suggestissue_flag_
    }
Session.SuggestIssue.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_session_suggestissue_text_=$2
    else
        echo -n "$_obj_session_suggestissue_text_"
    fi
    }
Session.SuggestIssue.Init

Session.Summary.Clear()
    {
    [[ $_obj_session_summary_flag_ != 'true' ]] && return
    _obj_session_summary_flag_=false
    [[ $_obj_session_summary_changes_flag_ = 'true' ]] && DebugVar _obj_session_summary_flag_
    }
Session.Summary.Disable()
    {
    [[ $_obj_session_summary_enable_ != 'true' ]] && return
    _obj_session_summary_enable_=false
    [[ $_obj_session_summary_changes_flag_ = 'true' ]] && DebugVar _obj_session_summary_enable_
    }
Session.Summary.DontLogChanges()
    {
    [[ $_obj_session_summary_changes_flag_ != 'true' ]] && return
    _obj_session_summary_changes_flag_=false
    }
Session.Summary.Enable()
    {
    [[ $_obj_session_summary_enable_ = 'true' ]] && return
    _obj_session_summary_enable_=true
    [[ $_obj_session_summary_changes_flag_ = 'true' ]] && DebugVar _obj_session_summary_enable_
    }
Session.Summary.Init()
    {
    _obj_session_summary_text_=''
    _obj_session_summary_flag_=false
    _obj_session_summary_changes_flag_=true
    _obj_session_summary_enable_=false
    }
Session.Summary.IsDisabled()
    {
    [[ $_obj_session_summary_enable_ != 'true' ]]
    }
Session.Summary.IsEnabled()
    {
    [[ $_obj_session_summary_enable_ = 'true' ]]
    }
Session.Summary.IsNt()
    {
    [[ $_obj_session_summary_flag_ != 'true' ]]
    }
Session.Summary.IsSet()
    {
    [[ $_obj_session_summary_flag_ = 'true' ]]
    }
Session.Summary.LogChanges()
    {
    [[ $_obj_session_summary_changes_flag_ = 'true' ]] && return
    _obj_session_summary_changes_flag_=true
    }
Session.Summary.Set()
    {
    [[ $_obj_session_summary_flag_ = 'true' ]] && return
    _obj_session_summary_flag_=true
    [[ $_obj_session_summary_changes_flag_ = 'true' ]] && DebugVar _obj_session_summary_flag_
    }
Session.Summary.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_session_summary_text_=$2
    else
        echo -n "$_obj_session_summary_text_"
    fi
    }
Session.Summary.Init

Session.Debug.ToArchive.Clear()
    {
    [[ $_obj_session_debug_toarchive_flag_ != 'true' ]] && return
    _obj_session_debug_toarchive_flag_=false
    [[ $_obj_session_debug_toarchive_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_toarchive_flag_
    }
Session.Debug.ToArchive.Disable()
    {
    [[ $_obj_session_debug_toarchive_enable_ != 'true' ]] && return
    _obj_session_debug_toarchive_enable_=false
    [[ $_obj_session_debug_toarchive_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_toarchive_enable_
    }
Session.Debug.ToArchive.DontLogChanges()
    {
    [[ $_obj_session_debug_toarchive_changes_flag_ != 'true' ]] && return
    _obj_session_debug_toarchive_changes_flag_=false
    }
Session.Debug.ToArchive.Enable()
    {
    [[ $_obj_session_debug_toarchive_enable_ = 'true' ]] && return
    _obj_session_debug_toarchive_enable_=true
    [[ $_obj_session_debug_toarchive_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_toarchive_enable_
    }
Session.Debug.ToArchive.Init()
    {
    _obj_session_debug_toarchive_text_=''
    _obj_session_debug_toarchive_flag_=false
    _obj_session_debug_toarchive_changes_flag_=true
    _obj_session_debug_toarchive_enable_=false
    }
Session.Debug.ToArchive.IsDisabled()
    {
    [[ $_obj_session_debug_toarchive_enable_ != 'true' ]]
    }
Session.Debug.ToArchive.IsEnabled()
    {
    [[ $_obj_session_debug_toarchive_enable_ = 'true' ]]
    }
Session.Debug.ToArchive.IsNt()
    {
    [[ $_obj_session_debug_toarchive_flag_ != 'true' ]]
    }
Session.Debug.ToArchive.IsSet()
    {
    [[ $_obj_session_debug_toarchive_flag_ = 'true' ]]
    }
Session.Debug.ToArchive.LogChanges()
    {
    [[ $_obj_session_debug_toarchive_changes_flag_ = 'true' ]] && return
    _obj_session_debug_toarchive_changes_flag_=true
    }
Session.Debug.ToArchive.Set()
    {
    [[ $_obj_session_debug_toarchive_flag_ = 'true' ]] && return
    _obj_session_debug_toarchive_flag_=true
    [[ $_obj_session_debug_toarchive_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_toarchive_flag_
    }
Session.Debug.ToArchive.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_session_debug_toarchive_text_=$2
    else
        echo -n "$_obj_session_debug_toarchive_text_"
    fi
    }
Session.Debug.ToArchive.Init

Session.Debug.ToFile.Clear()
    {
    [[ $_obj_session_debug_tofile_flag_ != 'true' ]] && return
    _obj_session_debug_tofile_flag_=false
    [[ $_obj_session_debug_tofile_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_tofile_flag_
    }
Session.Debug.ToFile.Disable()
    {
    [[ $_obj_session_debug_tofile_enable_ != 'true' ]] && return
    _obj_session_debug_tofile_enable_=false
    [[ $_obj_session_debug_tofile_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_tofile_enable_
    }
Session.Debug.ToFile.DontLogChanges()
    {
    [[ $_obj_session_debug_tofile_changes_flag_ != 'true' ]] && return
    _obj_session_debug_tofile_changes_flag_=false
    }
Session.Debug.ToFile.Enable()
    {
    [[ $_obj_session_debug_tofile_enable_ = 'true' ]] && return
    _obj_session_debug_tofile_enable_=true
    [[ $_obj_session_debug_tofile_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_tofile_enable_
    }
Session.Debug.ToFile.Init()
    {
    _obj_session_debug_tofile_text_=''
    _obj_session_debug_tofile_flag_=false
    _obj_session_debug_tofile_changes_flag_=true
    _obj_session_debug_tofile_enable_=false
    }
Session.Debug.ToFile.IsDisabled()
    {
    [[ $_obj_session_debug_tofile_enable_ != 'true' ]]
    }
Session.Debug.ToFile.IsEnabled()
    {
    [[ $_obj_session_debug_tofile_enable_ = 'true' ]]
    }
Session.Debug.ToFile.IsNt()
    {
    [[ $_obj_session_debug_tofile_flag_ != 'true' ]]
    }
Session.Debug.ToFile.IsSet()
    {
    [[ $_obj_session_debug_tofile_flag_ = 'true' ]]
    }
Session.Debug.ToFile.LogChanges()
    {
    [[ $_obj_session_debug_tofile_changes_flag_ = 'true' ]] && return
    _obj_session_debug_tofile_changes_flag_=true
    }
Session.Debug.ToFile.Set()
    {
    [[ $_obj_session_debug_tofile_flag_ = 'true' ]] && return
    _obj_session_debug_tofile_flag_=true
    [[ $_obj_session_debug_tofile_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_tofile_flag_
    }
Session.Debug.ToFile.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_session_debug_tofile_text_=$2
    else
        echo -n "$_obj_session_debug_tofile_text_"
    fi
    }
Session.Debug.ToFile.Init

Session.Debug.ToScreen.Clear()
    {
    [[ $_obj_session_debug_toscreen_flag_ != 'true' ]] && return
    _obj_session_debug_toscreen_flag_=false
    [[ $_obj_session_debug_toscreen_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_toscreen_flag_
    }
Session.Debug.ToScreen.Disable()
    {
    [[ $_obj_session_debug_toscreen_enable_ != 'true' ]] && return
    _obj_session_debug_toscreen_enable_=false
    [[ $_obj_session_debug_toscreen_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_toscreen_enable_
    }
Session.Debug.ToScreen.DontLogChanges()
    {
    [[ $_obj_session_debug_toscreen_changes_flag_ != 'true' ]] && return
    _obj_session_debug_toscreen_changes_flag_=false
    }
Session.Debug.ToScreen.Enable()
    {
    [[ $_obj_session_debug_toscreen_enable_ = 'true' ]] && return
    _obj_session_debug_toscreen_enable_=true
    [[ $_obj_session_debug_toscreen_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_toscreen_enable_
    }
Session.Debug.ToScreen.Init()
    {
    _obj_session_debug_toscreen_text_=''
    _obj_session_debug_toscreen_flag_=false
    _obj_session_debug_toscreen_changes_flag_=true
    _obj_session_debug_toscreen_enable_=false
    }
Session.Debug.ToScreen.IsDisabled()
    {
    [[ $_obj_session_debug_toscreen_enable_ != 'true' ]]
    }
Session.Debug.ToScreen.IsEnabled()
    {
    [[ $_obj_session_debug_toscreen_enable_ = 'true' ]]
    }
Session.Debug.ToScreen.IsNt()
    {
    [[ $_obj_session_debug_toscreen_flag_ != 'true' ]]
    }
Session.Debug.ToScreen.IsSet()
    {
    [[ $_obj_session_debug_toscreen_flag_ = 'true' ]]
    }
Session.Debug.ToScreen.LogChanges()
    {
    [[ $_obj_session_debug_toscreen_changes_flag_ = 'true' ]] && return
    _obj_session_debug_toscreen_changes_flag_=true
    }
Session.Debug.ToScreen.Set()
    {
    [[ $_obj_session_debug_toscreen_flag_ = 'true' ]] && return
    _obj_session_debug_toscreen_flag_=true
    [[ $_obj_session_debug_toscreen_changes_flag_ = 'true' ]] && DebugVar _obj_session_debug_toscreen_flag_
    }
Session.Debug.ToScreen.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_session_debug_toscreen_text_=$2
    else
        echo -n "$_obj_session_debug_toscreen_text_"
    fi
    }
Session.Debug.ToScreen.Init

QPKGs.States.Built.Clear()
    {
    [[ $_obj_qpkgs_states_built_flag_ != 'true' ]] && return
    _obj_qpkgs_states_built_flag_=false
    [[ $_obj_qpkgs_states_built_changes_flag_ = 'true' ]] && DebugVar _obj_qpkgs_states_built_flag_
    }
QPKGs.States.Built.Disable()
    {
    [[ $_obj_qpkgs_states_built_enable_ != 'true' ]] && return
    _obj_qpkgs_states_built_enable_=false
    [[ $_obj_qpkgs_states_built_changes_flag_ = 'true' ]] && DebugVar _obj_qpkgs_states_built_enable_
    }
QPKGs.States.Built.DontLogChanges()
    {
    [[ $_obj_qpkgs_states_built_changes_flag_ != 'true' ]] && return
    _obj_qpkgs_states_built_changes_flag_=false
    }
QPKGs.States.Built.Enable()
    {
    [[ $_obj_qpkgs_states_built_enable_ = 'true' ]] && return
    _obj_qpkgs_states_built_enable_=true
    [[ $_obj_qpkgs_states_built_changes_flag_ = 'true' ]] && DebugVar _obj_qpkgs_states_built_enable_
    }
QPKGs.States.Built.Init()
    {
    _obj_qpkgs_states_built_text_=''
    _obj_qpkgs_states_built_flag_=false
    _obj_qpkgs_states_built_changes_flag_=true
    _obj_qpkgs_states_built_enable_=false
    }
QPKGs.States.Built.IsDisabled()
    {
    [[ $_obj_qpkgs_states_built_enable_ != 'true' ]]
    }
QPKGs.States.Built.IsEnabled()
    {
    [[ $_obj_qpkgs_states_built_enable_ = 'true' ]]
    }
QPKGs.States.Built.IsNt()
    {
    [[ $_obj_qpkgs_states_built_flag_ != 'true' ]]
    }
QPKGs.States.Built.IsSet()
    {
    [[ $_obj_qpkgs_states_built_flag_ = 'true' ]]
    }
QPKGs.States.Built.LogChanges()
    {
    [[ $_obj_qpkgs_states_built_changes_flag_ = 'true' ]] && return
    _obj_qpkgs_states_built_changes_flag_=true
    }
QPKGs.States.Built.Set()
    {
    [[ $_obj_qpkgs_states_built_flag_ = 'true' ]] && return
    _obj_qpkgs_states_built_flag_=true
    [[ $_obj_qpkgs_states_built_changes_flag_ = 'true' ]] && DebugVar _obj_qpkgs_states_built_flag_
    }
QPKGs.States.Built.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_qpkgs_states_built_text_=$2
    else
        echo -n "$_obj_qpkgs_states_built_text_"
    fi
    }
QPKGs.States.Built.Init

QPKGs.SkipProcessing.Clear()
    {
    [[ $_obj_qpkgs_skipprocessing_flag_ != 'true' ]] && return
    _obj_qpkgs_skipprocessing_flag_=false
    [[ $_obj_qpkgs_skipprocessing_changes_flag_ = 'true' ]] && DebugVar _obj_qpkgs_skipprocessing_flag_
    }
QPKGs.SkipProcessing.Disable()
    {
    [[ $_obj_qpkgs_skipprocessing_enable_ != 'true' ]] && return
    _obj_qpkgs_skipprocessing_enable_=false
    [[ $_obj_qpkgs_skipprocessing_changes_flag_ = 'true' ]] && DebugVar _obj_qpkgs_skipprocessing_enable_
    }
QPKGs.SkipProcessing.DontLogChanges()
    {
    [[ $_obj_qpkgs_skipprocessing_changes_flag_ != 'true' ]] && return
    _obj_qpkgs_skipprocessing_changes_flag_=false
    }
QPKGs.SkipProcessing.Enable()
    {
    [[ $_obj_qpkgs_skipprocessing_enable_ = 'true' ]] && return
    _obj_qpkgs_skipprocessing_enable_=true
    [[ $_obj_qpkgs_skipprocessing_changes_flag_ = 'true' ]] && DebugVar _obj_qpkgs_skipprocessing_enable_
    }
QPKGs.SkipProcessing.Init()
    {
    _obj_qpkgs_skipprocessing_text_=''
    _obj_qpkgs_skipprocessing_flag_=false
    _obj_qpkgs_skipprocessing_changes_flag_=true
    _obj_qpkgs_skipprocessing_enable_=false
    }
QPKGs.SkipProcessing.IsDisabled()
    {
    [[ $_obj_qpkgs_skipprocessing_enable_ != 'true' ]]
    }
QPKGs.SkipProcessing.IsEnabled()
    {
    [[ $_obj_qpkgs_skipprocessing_enable_ = 'true' ]]
    }
QPKGs.SkipProcessing.IsNt()
    {
    [[ $_obj_qpkgs_skipprocessing_flag_ != 'true' ]]
    }
QPKGs.SkipProcessing.IsSet()
    {
    [[ $_obj_qpkgs_skipprocessing_flag_ = 'true' ]]
    }
QPKGs.SkipProcessing.LogChanges()
    {
    [[ $_obj_qpkgs_skipprocessing_changes_flag_ = 'true' ]] && return
    _obj_qpkgs_skipprocessing_changes_flag_=true
    }
QPKGs.SkipProcessing.Set()
    {
    [[ $_obj_qpkgs_skipprocessing_flag_ = 'true' ]] && return
    _obj_qpkgs_skipprocessing_flag_=true
    [[ $_obj_qpkgs_skipprocessing_changes_flag_ = 'true' ]] && DebugVar _obj_qpkgs_skipprocessing_flag_
    }
QPKGs.SkipProcessing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_qpkgs_skipprocessing_text_=$2
    else
        echo -n "$_obj_qpkgs_skipprocessing_text_"
    fi
    }
QPKGs.SkipProcessing.Init

IPKGs.Upgrade.Clear()
    {
    [[ $_obj_ipkgs_upgrade_flag_ != 'true' ]] && return
    _obj_ipkgs_upgrade_flag_=false
    [[ $_obj_ipkgs_upgrade_changes_flag_ = 'true' ]] && DebugVar _obj_ipkgs_upgrade_flag_
    }
IPKGs.Upgrade.Disable()
    {
    [[ $_obj_ipkgs_upgrade_enable_ != 'true' ]] && return
    _obj_ipkgs_upgrade_enable_=false
    [[ $_obj_ipkgs_upgrade_changes_flag_ = 'true' ]] && DebugVar _obj_ipkgs_upgrade_enable_
    }
IPKGs.Upgrade.DontLogChanges()
    {
    [[ $_obj_ipkgs_upgrade_changes_flag_ != 'true' ]] && return
    _obj_ipkgs_upgrade_changes_flag_=false
    }
IPKGs.Upgrade.Enable()
    {
    [[ $_obj_ipkgs_upgrade_enable_ = 'true' ]] && return
    _obj_ipkgs_upgrade_enable_=true
    [[ $_obj_ipkgs_upgrade_changes_flag_ = 'true' ]] && DebugVar _obj_ipkgs_upgrade_enable_
    }
IPKGs.Upgrade.Init()
    {
    _obj_ipkgs_upgrade_text_=''
    _obj_ipkgs_upgrade_flag_=false
    _obj_ipkgs_upgrade_changes_flag_=true
    _obj_ipkgs_upgrade_enable_=false
    }
IPKGs.Upgrade.IsDisabled()
    {
    [[ $_obj_ipkgs_upgrade_enable_ != 'true' ]]
    }
IPKGs.Upgrade.IsEnabled()
    {
    [[ $_obj_ipkgs_upgrade_enable_ = 'true' ]]
    }
IPKGs.Upgrade.IsNt()
    {
    [[ $_obj_ipkgs_upgrade_flag_ != 'true' ]]
    }
IPKGs.Upgrade.IsSet()
    {
    [[ $_obj_ipkgs_upgrade_flag_ = 'true' ]]
    }
IPKGs.Upgrade.LogChanges()
    {
    [[ $_obj_ipkgs_upgrade_changes_flag_ = 'true' ]] && return
    _obj_ipkgs_upgrade_changes_flag_=true
    }
IPKGs.Upgrade.Set()
    {
    [[ $_obj_ipkgs_upgrade_flag_ = 'true' ]] && return
    _obj_ipkgs_upgrade_flag_=true
    [[ $_obj_ipkgs_upgrade_changes_flag_ = 'true' ]] && DebugVar _obj_ipkgs_upgrade_flag_
    }
IPKGs.Upgrade.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_ipkgs_upgrade_text_=$2
    else
        echo -n "$_obj_ipkgs_upgrade_text_"
    fi
    }
IPKGs.Upgrade.Init

IPKGs.Install.Clear()
    {
    [[ $_obj_ipkgs_install_flag_ != 'true' ]] && return
    _obj_ipkgs_install_flag_=false
    [[ $_obj_ipkgs_install_changes_flag_ = 'true' ]] && DebugVar _obj_ipkgs_install_flag_
    }
IPKGs.Install.Disable()
    {
    [[ $_obj_ipkgs_install_enable_ != 'true' ]] && return
    _obj_ipkgs_install_enable_=false
    [[ $_obj_ipkgs_install_changes_flag_ = 'true' ]] && DebugVar _obj_ipkgs_install_enable_
    }
IPKGs.Install.DontLogChanges()
    {
    [[ $_obj_ipkgs_install_changes_flag_ != 'true' ]] && return
    _obj_ipkgs_install_changes_flag_=false
    }
IPKGs.Install.Enable()
    {
    [[ $_obj_ipkgs_install_enable_ = 'true' ]] && return
    _obj_ipkgs_install_enable_=true
    [[ $_obj_ipkgs_install_changes_flag_ = 'true' ]] && DebugVar _obj_ipkgs_install_enable_
    }
IPKGs.Install.Init()
    {
    _obj_ipkgs_install_text_=''
    _obj_ipkgs_install_flag_=false
    _obj_ipkgs_install_changes_flag_=true
    _obj_ipkgs_install_enable_=false
    }
IPKGs.Install.IsDisabled()
    {
    [[ $_obj_ipkgs_install_enable_ != 'true' ]]
    }
IPKGs.Install.IsEnabled()
    {
    [[ $_obj_ipkgs_install_enable_ = 'true' ]]
    }
IPKGs.Install.IsNt()
    {
    [[ $_obj_ipkgs_install_flag_ != 'true' ]]
    }
IPKGs.Install.IsSet()
    {
    [[ $_obj_ipkgs_install_flag_ = 'true' ]]
    }
IPKGs.Install.LogChanges()
    {
    [[ $_obj_ipkgs_install_changes_flag_ = 'true' ]] && return
    _obj_ipkgs_install_changes_flag_=true
    }
IPKGs.Install.Set()
    {
    [[ $_obj_ipkgs_install_flag_ = 'true' ]] && return
    _obj_ipkgs_install_flag_=true
    [[ $_obj_ipkgs_install_changes_flag_ = 'true' ]] && DebugVar _obj_ipkgs_install_flag_
    }
IPKGs.Install.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_ipkgs_install_text_=$2
    else
        echo -n "$_obj_ipkgs_install_text_"
    fi
    }
IPKGs.Install.Init

PIPs.Install.Clear()
    {
    [[ $_obj_pips_install_flag_ != 'true' ]] && return
    _obj_pips_install_flag_=false
    [[ $_obj_pips_install_changes_flag_ = 'true' ]] && DebugVar _obj_pips_install_flag_
    }
PIPs.Install.Disable()
    {
    [[ $_obj_pips_install_enable_ != 'true' ]] && return
    _obj_pips_install_enable_=false
    [[ $_obj_pips_install_changes_flag_ = 'true' ]] && DebugVar _obj_pips_install_enable_
    }
PIPs.Install.DontLogChanges()
    {
    [[ $_obj_pips_install_changes_flag_ != 'true' ]] && return
    _obj_pips_install_changes_flag_=false
    }
PIPs.Install.Enable()
    {
    [[ $_obj_pips_install_enable_ = 'true' ]] && return
    _obj_pips_install_enable_=true
    [[ $_obj_pips_install_changes_flag_ = 'true' ]] && DebugVar _obj_pips_install_enable_
    }
PIPs.Install.Init()
    {
    _obj_pips_install_text_=''
    _obj_pips_install_flag_=false
    _obj_pips_install_changes_flag_=true
    _obj_pips_install_enable_=false
    }
PIPs.Install.IsDisabled()
    {
    [[ $_obj_pips_install_enable_ != 'true' ]]
    }
PIPs.Install.IsEnabled()
    {
    [[ $_obj_pips_install_enable_ = 'true' ]]
    }
PIPs.Install.IsNt()
    {
    [[ $_obj_pips_install_flag_ != 'true' ]]
    }
PIPs.Install.IsSet()
    {
    [[ $_obj_pips_install_flag_ = 'true' ]]
    }
PIPs.Install.LogChanges()
    {
    [[ $_obj_pips_install_changes_flag_ = 'true' ]] && return
    _obj_pips_install_changes_flag_=true
    }
PIPs.Install.Set()
    {
    [[ $_obj_pips_install_flag_ = 'true' ]] && return
    _obj_pips_install_flag_=true
    [[ $_obj_pips_install_changes_flag_ = 'true' ]] && DebugVar _obj_pips_install_flag_
    }
PIPs.Install.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_pips_install_text_=$2
    else
        echo -n "$_obj_pips_install_text_"
    fi
    }
PIPs.Install.Init

Opts.Dependencies.Check.Clear()
    {
    [[ $_obj_opts_dependencies_check_flag_ != 'true' ]] && return
    _obj_opts_dependencies_check_flag_=false
    [[ $_obj_opts_dependencies_check_changes_flag_ = 'true' ]] && DebugVar _obj_opts_dependencies_check_flag_
    }
Opts.Dependencies.Check.Disable()
    {
    [[ $_obj_opts_dependencies_check_enable_ != 'true' ]] && return
    _obj_opts_dependencies_check_enable_=false
    [[ $_obj_opts_dependencies_check_changes_flag_ = 'true' ]] && DebugVar _obj_opts_dependencies_check_enable_
    }
Opts.Dependencies.Check.DontLogChanges()
    {
    [[ $_obj_opts_dependencies_check_changes_flag_ != 'true' ]] && return
    _obj_opts_dependencies_check_changes_flag_=false
    }
Opts.Dependencies.Check.Enable()
    {
    [[ $_obj_opts_dependencies_check_enable_ = 'true' ]] && return
    _obj_opts_dependencies_check_enable_=true
    [[ $_obj_opts_dependencies_check_changes_flag_ = 'true' ]] && DebugVar _obj_opts_dependencies_check_enable_
    }
Opts.Dependencies.Check.Init()
    {
    _obj_opts_dependencies_check_text_=''
    _obj_opts_dependencies_check_flag_=false
    _obj_opts_dependencies_check_changes_flag_=true
    _obj_opts_dependencies_check_enable_=false
    }
Opts.Dependencies.Check.IsDisabled()
    {
    [[ $_obj_opts_dependencies_check_enable_ != 'true' ]]
    }
Opts.Dependencies.Check.IsEnabled()
    {
    [[ $_obj_opts_dependencies_check_enable_ = 'true' ]]
    }
Opts.Dependencies.Check.IsNt()
    {
    [[ $_obj_opts_dependencies_check_flag_ != 'true' ]]
    }
Opts.Dependencies.Check.IsSet()
    {
    [[ $_obj_opts_dependencies_check_flag_ = 'true' ]]
    }
Opts.Dependencies.Check.LogChanges()
    {
    [[ $_obj_opts_dependencies_check_changes_flag_ = 'true' ]] && return
    _obj_opts_dependencies_check_changes_flag_=true
    }
Opts.Dependencies.Check.Set()
    {
    [[ $_obj_opts_dependencies_check_flag_ = 'true' ]] && return
    _obj_opts_dependencies_check_flag_=true
    [[ $_obj_opts_dependencies_check_changes_flag_ = 'true' ]] && DebugVar _obj_opts_dependencies_check_flag_
    }
Opts.Dependencies.Check.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_dependencies_check_text_=$2
    else
        echo -n "$_obj_opts_dependencies_check_text_"
    fi
    }
Opts.Dependencies.Check.Init

Opts.IgnoreFreeSpace.Clear()
    {
    [[ $_obj_opts_ignorefreespace_flag_ != 'true' ]] && return
    _obj_opts_ignorefreespace_flag_=false
    [[ $_obj_opts_ignorefreespace_changes_flag_ = 'true' ]] && DebugVar _obj_opts_ignorefreespace_flag_
    }
Opts.IgnoreFreeSpace.Disable()
    {
    [[ $_obj_opts_ignorefreespace_enable_ != 'true' ]] && return
    _obj_opts_ignorefreespace_enable_=false
    [[ $_obj_opts_ignorefreespace_changes_flag_ = 'true' ]] && DebugVar _obj_opts_ignorefreespace_enable_
    }
Opts.IgnoreFreeSpace.DontLogChanges()
    {
    [[ $_obj_opts_ignorefreespace_changes_flag_ != 'true' ]] && return
    _obj_opts_ignorefreespace_changes_flag_=false
    }
Opts.IgnoreFreeSpace.Enable()
    {
    [[ $_obj_opts_ignorefreespace_enable_ = 'true' ]] && return
    _obj_opts_ignorefreespace_enable_=true
    [[ $_obj_opts_ignorefreespace_changes_flag_ = 'true' ]] && DebugVar _obj_opts_ignorefreespace_enable_
    }
Opts.IgnoreFreeSpace.Init()
    {
    _obj_opts_ignorefreespace_text_=''
    _obj_opts_ignorefreespace_flag_=false
    _obj_opts_ignorefreespace_changes_flag_=true
    _obj_opts_ignorefreespace_enable_=false
    }
Opts.IgnoreFreeSpace.IsDisabled()
    {
    [[ $_obj_opts_ignorefreespace_enable_ != 'true' ]]
    }
Opts.IgnoreFreeSpace.IsEnabled()
    {
    [[ $_obj_opts_ignorefreespace_enable_ = 'true' ]]
    }
Opts.IgnoreFreeSpace.IsNt()
    {
    [[ $_obj_opts_ignorefreespace_flag_ != 'true' ]]
    }
Opts.IgnoreFreeSpace.IsSet()
    {
    [[ $_obj_opts_ignorefreespace_flag_ = 'true' ]]
    }
Opts.IgnoreFreeSpace.LogChanges()
    {
    [[ $_obj_opts_ignorefreespace_changes_flag_ = 'true' ]] && return
    _obj_opts_ignorefreespace_changes_flag_=true
    }
Opts.IgnoreFreeSpace.Set()
    {
    [[ $_obj_opts_ignorefreespace_flag_ = 'true' ]] && return
    _obj_opts_ignorefreespace_flag_=true
    [[ $_obj_opts_ignorefreespace_changes_flag_ = 'true' ]] && DebugVar _obj_opts_ignorefreespace_flag_
    }
Opts.IgnoreFreeSpace.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_ignorefreespace_text_=$2
    else
        echo -n "$_obj_opts_ignorefreespace_text_"
    fi
    }
Opts.IgnoreFreeSpace.Init

Opts.Versions.View.Clear()
    {
    [[ $_obj_opts_versions_view_flag_ != 'true' ]] && return
    _obj_opts_versions_view_flag_=false
    [[ $_obj_opts_versions_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_versions_view_flag_
    }
Opts.Versions.View.Disable()
    {
    [[ $_obj_opts_versions_view_enable_ != 'true' ]] && return
    _obj_opts_versions_view_enable_=false
    [[ $_obj_opts_versions_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_versions_view_enable_
    }
Opts.Versions.View.DontLogChanges()
    {
    [[ $_obj_opts_versions_view_changes_flag_ != 'true' ]] && return
    _obj_opts_versions_view_changes_flag_=false
    }
Opts.Versions.View.Enable()
    {
    [[ $_obj_opts_versions_view_enable_ = 'true' ]] && return
    _obj_opts_versions_view_enable_=true
    [[ $_obj_opts_versions_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_versions_view_enable_
    }
Opts.Versions.View.Init()
    {
    _obj_opts_versions_view_text_=''
    _obj_opts_versions_view_flag_=false
    _obj_opts_versions_view_changes_flag_=true
    _obj_opts_versions_view_enable_=false
    }
Opts.Versions.View.IsDisabled()
    {
    [[ $_obj_opts_versions_view_enable_ != 'true' ]]
    }
Opts.Versions.View.IsEnabled()
    {
    [[ $_obj_opts_versions_view_enable_ = 'true' ]]
    }
Opts.Versions.View.IsNt()
    {
    [[ $_obj_opts_versions_view_flag_ != 'true' ]]
    }
Opts.Versions.View.IsSet()
    {
    [[ $_obj_opts_versions_view_flag_ = 'true' ]]
    }
Opts.Versions.View.LogChanges()
    {
    [[ $_obj_opts_versions_view_changes_flag_ = 'true' ]] && return
    _obj_opts_versions_view_changes_flag_=true
    }
Opts.Versions.View.Set()
    {
    [[ $_obj_opts_versions_view_flag_ = 'true' ]] && return
    _obj_opts_versions_view_flag_=true
    [[ $_obj_opts_versions_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_versions_view_flag_
    }
Opts.Versions.View.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_versions_view_text_=$2
    else
        echo -n "$_obj_opts_versions_view_text_"
    fi
    }
Opts.Versions.View.Init

Opts.Help.Abbreviations.Clear()
    {
    [[ $_obj_opts_help_abbreviations_flag_ != 'true' ]] && return
    _obj_opts_help_abbreviations_flag_=false
    [[ $_obj_opts_help_abbreviations_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_abbreviations_flag_
    }
Opts.Help.Abbreviations.Disable()
    {
    [[ $_obj_opts_help_abbreviations_enable_ != 'true' ]] && return
    _obj_opts_help_abbreviations_enable_=false
    [[ $_obj_opts_help_abbreviations_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_abbreviations_enable_
    }
Opts.Help.Abbreviations.DontLogChanges()
    {
    [[ $_obj_opts_help_abbreviations_changes_flag_ != 'true' ]] && return
    _obj_opts_help_abbreviations_changes_flag_=false
    }
Opts.Help.Abbreviations.Enable()
    {
    [[ $_obj_opts_help_abbreviations_enable_ = 'true' ]] && return
    _obj_opts_help_abbreviations_enable_=true
    [[ $_obj_opts_help_abbreviations_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_abbreviations_enable_
    }
Opts.Help.Abbreviations.Init()
    {
    _obj_opts_help_abbreviations_text_=''
    _obj_opts_help_abbreviations_flag_=false
    _obj_opts_help_abbreviations_changes_flag_=true
    _obj_opts_help_abbreviations_enable_=false
    }
Opts.Help.Abbreviations.IsDisabled()
    {
    [[ $_obj_opts_help_abbreviations_enable_ != 'true' ]]
    }
Opts.Help.Abbreviations.IsEnabled()
    {
    [[ $_obj_opts_help_abbreviations_enable_ = 'true' ]]
    }
Opts.Help.Abbreviations.IsNt()
    {
    [[ $_obj_opts_help_abbreviations_flag_ != 'true' ]]
    }
Opts.Help.Abbreviations.IsSet()
    {
    [[ $_obj_opts_help_abbreviations_flag_ = 'true' ]]
    }
Opts.Help.Abbreviations.LogChanges()
    {
    [[ $_obj_opts_help_abbreviations_changes_flag_ = 'true' ]] && return
    _obj_opts_help_abbreviations_changes_flag_=true
    }
Opts.Help.Abbreviations.Set()
    {
    [[ $_obj_opts_help_abbreviations_flag_ = 'true' ]] && return
    _obj_opts_help_abbreviations_flag_=true
    [[ $_obj_opts_help_abbreviations_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_abbreviations_flag_
    }
Opts.Help.Abbreviations.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_help_abbreviations_text_=$2
    else
        echo -n "$_obj_opts_help_abbreviations_text_"
    fi
    }
Opts.Help.Abbreviations.Init

Opts.Help.Actions.Clear()
    {
    [[ $_obj_opts_help_actions_flag_ != 'true' ]] && return
    _obj_opts_help_actions_flag_=false
    [[ $_obj_opts_help_actions_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_actions_flag_
    }
Opts.Help.Actions.Disable()
    {
    [[ $_obj_opts_help_actions_enable_ != 'true' ]] && return
    _obj_opts_help_actions_enable_=false
    [[ $_obj_opts_help_actions_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_actions_enable_
    }
Opts.Help.Actions.DontLogChanges()
    {
    [[ $_obj_opts_help_actions_changes_flag_ != 'true' ]] && return
    _obj_opts_help_actions_changes_flag_=false
    }
Opts.Help.Actions.Enable()
    {
    [[ $_obj_opts_help_actions_enable_ = 'true' ]] && return
    _obj_opts_help_actions_enable_=true
    [[ $_obj_opts_help_actions_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_actions_enable_
    }
Opts.Help.Actions.Init()
    {
    _obj_opts_help_actions_text_=''
    _obj_opts_help_actions_flag_=false
    _obj_opts_help_actions_changes_flag_=true
    _obj_opts_help_actions_enable_=false
    }
Opts.Help.Actions.IsDisabled()
    {
    [[ $_obj_opts_help_actions_enable_ != 'true' ]]
    }
Opts.Help.Actions.IsEnabled()
    {
    [[ $_obj_opts_help_actions_enable_ = 'true' ]]
    }
Opts.Help.Actions.IsNt()
    {
    [[ $_obj_opts_help_actions_flag_ != 'true' ]]
    }
Opts.Help.Actions.IsSet()
    {
    [[ $_obj_opts_help_actions_flag_ = 'true' ]]
    }
Opts.Help.Actions.LogChanges()
    {
    [[ $_obj_opts_help_actions_changes_flag_ = 'true' ]] && return
    _obj_opts_help_actions_changes_flag_=true
    }
Opts.Help.Actions.Set()
    {
    [[ $_obj_opts_help_actions_flag_ = 'true' ]] && return
    _obj_opts_help_actions_flag_=true
    [[ $_obj_opts_help_actions_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_actions_flag_
    }
Opts.Help.Actions.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_help_actions_text_=$2
    else
        echo -n "$_obj_opts_help_actions_text_"
    fi
    }
Opts.Help.Actions.Init

Opts.Help.ActionsAll.Clear()
    {
    [[ $_obj_opts_help_actionsall_flag_ != 'true' ]] && return
    _obj_opts_help_actionsall_flag_=false
    [[ $_obj_opts_help_actionsall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_actionsall_flag_
    }
Opts.Help.ActionsAll.Disable()
    {
    [[ $_obj_opts_help_actionsall_enable_ != 'true' ]] && return
    _obj_opts_help_actionsall_enable_=false
    [[ $_obj_opts_help_actionsall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_actionsall_enable_
    }
Opts.Help.ActionsAll.DontLogChanges()
    {
    [[ $_obj_opts_help_actionsall_changes_flag_ != 'true' ]] && return
    _obj_opts_help_actionsall_changes_flag_=false
    }
Opts.Help.ActionsAll.Enable()
    {
    [[ $_obj_opts_help_actionsall_enable_ = 'true' ]] && return
    _obj_opts_help_actionsall_enable_=true
    [[ $_obj_opts_help_actionsall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_actionsall_enable_
    }
Opts.Help.ActionsAll.Init()
    {
    _obj_opts_help_actionsall_text_=''
    _obj_opts_help_actionsall_flag_=false
    _obj_opts_help_actionsall_changes_flag_=true
    _obj_opts_help_actionsall_enable_=false
    }
Opts.Help.ActionsAll.IsDisabled()
    {
    [[ $_obj_opts_help_actionsall_enable_ != 'true' ]]
    }
Opts.Help.ActionsAll.IsEnabled()
    {
    [[ $_obj_opts_help_actionsall_enable_ = 'true' ]]
    }
Opts.Help.ActionsAll.IsNt()
    {
    [[ $_obj_opts_help_actionsall_flag_ != 'true' ]]
    }
Opts.Help.ActionsAll.IsSet()
    {
    [[ $_obj_opts_help_actionsall_flag_ = 'true' ]]
    }
Opts.Help.ActionsAll.LogChanges()
    {
    [[ $_obj_opts_help_actionsall_changes_flag_ = 'true' ]] && return
    _obj_opts_help_actionsall_changes_flag_=true
    }
Opts.Help.ActionsAll.Set()
    {
    [[ $_obj_opts_help_actionsall_flag_ = 'true' ]] && return
    _obj_opts_help_actionsall_flag_=true
    [[ $_obj_opts_help_actionsall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_actionsall_flag_
    }
Opts.Help.ActionsAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_help_actionsall_text_=$2
    else
        echo -n "$_obj_opts_help_actionsall_text_"
    fi
    }
Opts.Help.ActionsAll.Init

Opts.Help.Backups.Clear()
    {
    [[ $_obj_opts_help_backups_flag_ != 'true' ]] && return
    _obj_opts_help_backups_flag_=false
    [[ $_obj_opts_help_backups_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_backups_flag_
    }
Opts.Help.Backups.Disable()
    {
    [[ $_obj_opts_help_backups_enable_ != 'true' ]] && return
    _obj_opts_help_backups_enable_=false
    [[ $_obj_opts_help_backups_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_backups_enable_
    }
Opts.Help.Backups.DontLogChanges()
    {
    [[ $_obj_opts_help_backups_changes_flag_ != 'true' ]] && return
    _obj_opts_help_backups_changes_flag_=false
    }
Opts.Help.Backups.Enable()
    {
    [[ $_obj_opts_help_backups_enable_ = 'true' ]] && return
    _obj_opts_help_backups_enable_=true
    [[ $_obj_opts_help_backups_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_backups_enable_
    }
Opts.Help.Backups.Init()
    {
    _obj_opts_help_backups_text_=''
    _obj_opts_help_backups_flag_=false
    _obj_opts_help_backups_changes_flag_=true
    _obj_opts_help_backups_enable_=false
    }
Opts.Help.Backups.IsDisabled()
    {
    [[ $_obj_opts_help_backups_enable_ != 'true' ]]
    }
Opts.Help.Backups.IsEnabled()
    {
    [[ $_obj_opts_help_backups_enable_ = 'true' ]]
    }
Opts.Help.Backups.IsNt()
    {
    [[ $_obj_opts_help_backups_flag_ != 'true' ]]
    }
Opts.Help.Backups.IsSet()
    {
    [[ $_obj_opts_help_backups_flag_ = 'true' ]]
    }
Opts.Help.Backups.LogChanges()
    {
    [[ $_obj_opts_help_backups_changes_flag_ = 'true' ]] && return
    _obj_opts_help_backups_changes_flag_=true
    }
Opts.Help.Backups.Set()
    {
    [[ $_obj_opts_help_backups_flag_ = 'true' ]] && return
    _obj_opts_help_backups_flag_=true
    [[ $_obj_opts_help_backups_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_backups_flag_
    }
Opts.Help.Backups.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_help_backups_text_=$2
    else
        echo -n "$_obj_opts_help_backups_text_"
    fi
    }
Opts.Help.Backups.Init

Opts.Help.Basic.Clear()
    {
    [[ $_obj_opts_help_basic_flag_ != 'true' ]] && return
    _obj_opts_help_basic_flag_=false
    [[ $_obj_opts_help_basic_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_basic_flag_
    }
Opts.Help.Basic.Disable()
    {
    [[ $_obj_opts_help_basic_enable_ != 'true' ]] && return
    _obj_opts_help_basic_enable_=false
    [[ $_obj_opts_help_basic_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_basic_enable_
    }
Opts.Help.Basic.DontLogChanges()
    {
    [[ $_obj_opts_help_basic_changes_flag_ != 'true' ]] && return
    _obj_opts_help_basic_changes_flag_=false
    }
Opts.Help.Basic.Enable()
    {
    [[ $_obj_opts_help_basic_enable_ = 'true' ]] && return
    _obj_opts_help_basic_enable_=true
    [[ $_obj_opts_help_basic_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_basic_enable_
    }
Opts.Help.Basic.Init()
    {
    _obj_opts_help_basic_text_=''
    _obj_opts_help_basic_flag_=false
    _obj_opts_help_basic_changes_flag_=true
    _obj_opts_help_basic_enable_=false
    }
Opts.Help.Basic.IsDisabled()
    {
    [[ $_obj_opts_help_basic_enable_ != 'true' ]]
    }
Opts.Help.Basic.IsEnabled()
    {
    [[ $_obj_opts_help_basic_enable_ = 'true' ]]
    }
Opts.Help.Basic.IsNt()
    {
    [[ $_obj_opts_help_basic_flag_ != 'true' ]]
    }
Opts.Help.Basic.IsSet()
    {
    [[ $_obj_opts_help_basic_flag_ = 'true' ]]
    }
Opts.Help.Basic.LogChanges()
    {
    [[ $_obj_opts_help_basic_changes_flag_ = 'true' ]] && return
    _obj_opts_help_basic_changes_flag_=true
    }
Opts.Help.Basic.Set()
    {
    [[ $_obj_opts_help_basic_flag_ = 'true' ]] && return
    _obj_opts_help_basic_flag_=true
    [[ $_obj_opts_help_basic_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_basic_flag_
    }
Opts.Help.Basic.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_help_basic_text_=$2
    else
        echo -n "$_obj_opts_help_basic_text_"
    fi
    }
Opts.Help.Basic.Init

Opts.Help.Options.Clear()
    {
    [[ $_obj_opts_help_options_flag_ != 'true' ]] && return
    _obj_opts_help_options_flag_=false
    [[ $_obj_opts_help_options_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_options_flag_
    }
Opts.Help.Options.Disable()
    {
    [[ $_obj_opts_help_options_enable_ != 'true' ]] && return
    _obj_opts_help_options_enable_=false
    [[ $_obj_opts_help_options_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_options_enable_
    }
Opts.Help.Options.DontLogChanges()
    {
    [[ $_obj_opts_help_options_changes_flag_ != 'true' ]] && return
    _obj_opts_help_options_changes_flag_=false
    }
Opts.Help.Options.Enable()
    {
    [[ $_obj_opts_help_options_enable_ = 'true' ]] && return
    _obj_opts_help_options_enable_=true
    [[ $_obj_opts_help_options_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_options_enable_
    }
Opts.Help.Options.Init()
    {
    _obj_opts_help_options_text_=''
    _obj_opts_help_options_flag_=false
    _obj_opts_help_options_changes_flag_=true
    _obj_opts_help_options_enable_=false
    }
Opts.Help.Options.IsDisabled()
    {
    [[ $_obj_opts_help_options_enable_ != 'true' ]]
    }
Opts.Help.Options.IsEnabled()
    {
    [[ $_obj_opts_help_options_enable_ = 'true' ]]
    }
Opts.Help.Options.IsNt()
    {
    [[ $_obj_opts_help_options_flag_ != 'true' ]]
    }
Opts.Help.Options.IsSet()
    {
    [[ $_obj_opts_help_options_flag_ = 'true' ]]
    }
Opts.Help.Options.LogChanges()
    {
    [[ $_obj_opts_help_options_changes_flag_ = 'true' ]] && return
    _obj_opts_help_options_changes_flag_=true
    }
Opts.Help.Options.Set()
    {
    [[ $_obj_opts_help_options_flag_ = 'true' ]] && return
    _obj_opts_help_options_flag_=true
    [[ $_obj_opts_help_options_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_options_flag_
    }
Opts.Help.Options.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_help_options_text_=$2
    else
        echo -n "$_obj_opts_help_options_text_"
    fi
    }
Opts.Help.Options.Init

Opts.Help.Packages.Clear()
    {
    [[ $_obj_opts_help_packages_flag_ != 'true' ]] && return
    _obj_opts_help_packages_flag_=false
    [[ $_obj_opts_help_packages_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_packages_flag_
    }
Opts.Help.Packages.Disable()
    {
    [[ $_obj_opts_help_packages_enable_ != 'true' ]] && return
    _obj_opts_help_packages_enable_=false
    [[ $_obj_opts_help_packages_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_packages_enable_
    }
Opts.Help.Packages.DontLogChanges()
    {
    [[ $_obj_opts_help_packages_changes_flag_ != 'true' ]] && return
    _obj_opts_help_packages_changes_flag_=false
    }
Opts.Help.Packages.Enable()
    {
    [[ $_obj_opts_help_packages_enable_ = 'true' ]] && return
    _obj_opts_help_packages_enable_=true
    [[ $_obj_opts_help_packages_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_packages_enable_
    }
Opts.Help.Packages.Init()
    {
    _obj_opts_help_packages_text_=''
    _obj_opts_help_packages_flag_=false
    _obj_opts_help_packages_changes_flag_=true
    _obj_opts_help_packages_enable_=false
    }
Opts.Help.Packages.IsDisabled()
    {
    [[ $_obj_opts_help_packages_enable_ != 'true' ]]
    }
Opts.Help.Packages.IsEnabled()
    {
    [[ $_obj_opts_help_packages_enable_ = 'true' ]]
    }
Opts.Help.Packages.IsNt()
    {
    [[ $_obj_opts_help_packages_flag_ != 'true' ]]
    }
Opts.Help.Packages.IsSet()
    {
    [[ $_obj_opts_help_packages_flag_ = 'true' ]]
    }
Opts.Help.Packages.LogChanges()
    {
    [[ $_obj_opts_help_packages_changes_flag_ = 'true' ]] && return
    _obj_opts_help_packages_changes_flag_=true
    }
Opts.Help.Packages.Set()
    {
    [[ $_obj_opts_help_packages_flag_ = 'true' ]] && return
    _obj_opts_help_packages_flag_=true
    [[ $_obj_opts_help_packages_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_packages_flag_
    }
Opts.Help.Packages.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_help_packages_text_=$2
    else
        echo -n "$_obj_opts_help_packages_text_"
    fi
    }
Opts.Help.Packages.Init

Opts.Help.Problems.Clear()
    {
    [[ $_obj_opts_help_problems_flag_ != 'true' ]] && return
    _obj_opts_help_problems_flag_=false
    [[ $_obj_opts_help_problems_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_problems_flag_
    }
Opts.Help.Problems.Disable()
    {
    [[ $_obj_opts_help_problems_enable_ != 'true' ]] && return
    _obj_opts_help_problems_enable_=false
    [[ $_obj_opts_help_problems_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_problems_enable_
    }
Opts.Help.Problems.DontLogChanges()
    {
    [[ $_obj_opts_help_problems_changes_flag_ != 'true' ]] && return
    _obj_opts_help_problems_changes_flag_=false
    }
Opts.Help.Problems.Enable()
    {
    [[ $_obj_opts_help_problems_enable_ = 'true' ]] && return
    _obj_opts_help_problems_enable_=true
    [[ $_obj_opts_help_problems_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_problems_enable_
    }
Opts.Help.Problems.Init()
    {
    _obj_opts_help_problems_text_=''
    _obj_opts_help_problems_flag_=false
    _obj_opts_help_problems_changes_flag_=true
    _obj_opts_help_problems_enable_=false
    }
Opts.Help.Problems.IsDisabled()
    {
    [[ $_obj_opts_help_problems_enable_ != 'true' ]]
    }
Opts.Help.Problems.IsEnabled()
    {
    [[ $_obj_opts_help_problems_enable_ = 'true' ]]
    }
Opts.Help.Problems.IsNt()
    {
    [[ $_obj_opts_help_problems_flag_ != 'true' ]]
    }
Opts.Help.Problems.IsSet()
    {
    [[ $_obj_opts_help_problems_flag_ = 'true' ]]
    }
Opts.Help.Problems.LogChanges()
    {
    [[ $_obj_opts_help_problems_changes_flag_ = 'true' ]] && return
    _obj_opts_help_problems_changes_flag_=true
    }
Opts.Help.Problems.Set()
    {
    [[ $_obj_opts_help_problems_flag_ = 'true' ]] && return
    _obj_opts_help_problems_flag_=true
    [[ $_obj_opts_help_problems_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_problems_flag_
    }
Opts.Help.Problems.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_help_problems_text_=$2
    else
        echo -n "$_obj_opts_help_problems_text_"
    fi
    }
Opts.Help.Problems.Init

Opts.Help.Status.Clear()
    {
    [[ $_obj_opts_help_status_flag_ != 'true' ]] && return
    _obj_opts_help_status_flag_=false
    [[ $_obj_opts_help_status_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_status_flag_
    }
Opts.Help.Status.Disable()
    {
    [[ $_obj_opts_help_status_enable_ != 'true' ]] && return
    _obj_opts_help_status_enable_=false
    [[ $_obj_opts_help_status_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_status_enable_
    }
Opts.Help.Status.DontLogChanges()
    {
    [[ $_obj_opts_help_status_changes_flag_ != 'true' ]] && return
    _obj_opts_help_status_changes_flag_=false
    }
Opts.Help.Status.Enable()
    {
    [[ $_obj_opts_help_status_enable_ = 'true' ]] && return
    _obj_opts_help_status_enable_=true
    [[ $_obj_opts_help_status_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_status_enable_
    }
Opts.Help.Status.Init()
    {
    _obj_opts_help_status_text_=''
    _obj_opts_help_status_flag_=false
    _obj_opts_help_status_changes_flag_=true
    _obj_opts_help_status_enable_=false
    }
Opts.Help.Status.IsDisabled()
    {
    [[ $_obj_opts_help_status_enable_ != 'true' ]]
    }
Opts.Help.Status.IsEnabled()
    {
    [[ $_obj_opts_help_status_enable_ = 'true' ]]
    }
Opts.Help.Status.IsNt()
    {
    [[ $_obj_opts_help_status_flag_ != 'true' ]]
    }
Opts.Help.Status.IsSet()
    {
    [[ $_obj_opts_help_status_flag_ = 'true' ]]
    }
Opts.Help.Status.LogChanges()
    {
    [[ $_obj_opts_help_status_changes_flag_ = 'true' ]] && return
    _obj_opts_help_status_changes_flag_=true
    }
Opts.Help.Status.Set()
    {
    [[ $_obj_opts_help_status_flag_ = 'true' ]] && return
    _obj_opts_help_status_flag_=true
    [[ $_obj_opts_help_status_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_status_flag_
    }
Opts.Help.Status.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_help_status_text_=$2
    else
        echo -n "$_obj_opts_help_status_text_"
    fi
    }
Opts.Help.Status.Init

Opts.Help.Tips.Clear()
    {
    [[ $_obj_opts_help_tips_flag_ != 'true' ]] && return
    _obj_opts_help_tips_flag_=false
    [[ $_obj_opts_help_tips_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_tips_flag_
    }
Opts.Help.Tips.Disable()
    {
    [[ $_obj_opts_help_tips_enable_ != 'true' ]] && return
    _obj_opts_help_tips_enable_=false
    [[ $_obj_opts_help_tips_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_tips_enable_
    }
Opts.Help.Tips.DontLogChanges()
    {
    [[ $_obj_opts_help_tips_changes_flag_ != 'true' ]] && return
    _obj_opts_help_tips_changes_flag_=false
    }
Opts.Help.Tips.Enable()
    {
    [[ $_obj_opts_help_tips_enable_ = 'true' ]] && return
    _obj_opts_help_tips_enable_=true
    [[ $_obj_opts_help_tips_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_tips_enable_
    }
Opts.Help.Tips.Init()
    {
    _obj_opts_help_tips_text_=''
    _obj_opts_help_tips_flag_=false
    _obj_opts_help_tips_changes_flag_=true
    _obj_opts_help_tips_enable_=false
    }
Opts.Help.Tips.IsDisabled()
    {
    [[ $_obj_opts_help_tips_enable_ != 'true' ]]
    }
Opts.Help.Tips.IsEnabled()
    {
    [[ $_obj_opts_help_tips_enable_ = 'true' ]]
    }
Opts.Help.Tips.IsNt()
    {
    [[ $_obj_opts_help_tips_flag_ != 'true' ]]
    }
Opts.Help.Tips.IsSet()
    {
    [[ $_obj_opts_help_tips_flag_ = 'true' ]]
    }
Opts.Help.Tips.LogChanges()
    {
    [[ $_obj_opts_help_tips_changes_flag_ = 'true' ]] && return
    _obj_opts_help_tips_changes_flag_=true
    }
Opts.Help.Tips.Set()
    {
    [[ $_obj_opts_help_tips_flag_ = 'true' ]] && return
    _obj_opts_help_tips_flag_=true
    [[ $_obj_opts_help_tips_changes_flag_ = 'true' ]] && DebugVar _obj_opts_help_tips_flag_
    }
Opts.Help.Tips.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_help_tips_text_=$2
    else
        echo -n "$_obj_opts_help_tips_text_"
    fi
    }
Opts.Help.Tips.Init

Opts.Log.All.Paste.Clear()
    {
    [[ $_obj_opts_log_all_paste_flag_ != 'true' ]] && return
    _obj_opts_log_all_paste_flag_=false
    [[ $_obj_opts_log_all_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_all_paste_flag_
    }
Opts.Log.All.Paste.Disable()
    {
    [[ $_obj_opts_log_all_paste_enable_ != 'true' ]] && return
    _obj_opts_log_all_paste_enable_=false
    [[ $_obj_opts_log_all_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_all_paste_enable_
    }
Opts.Log.All.Paste.DontLogChanges()
    {
    [[ $_obj_opts_log_all_paste_changes_flag_ != 'true' ]] && return
    _obj_opts_log_all_paste_changes_flag_=false
    }
Opts.Log.All.Paste.Enable()
    {
    [[ $_obj_opts_log_all_paste_enable_ = 'true' ]] && return
    _obj_opts_log_all_paste_enable_=true
    [[ $_obj_opts_log_all_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_all_paste_enable_
    }
Opts.Log.All.Paste.Init()
    {
    _obj_opts_log_all_paste_text_=''
    _obj_opts_log_all_paste_flag_=false
    _obj_opts_log_all_paste_changes_flag_=true
    _obj_opts_log_all_paste_enable_=false
    }
Opts.Log.All.Paste.IsDisabled()
    {
    [[ $_obj_opts_log_all_paste_enable_ != 'true' ]]
    }
Opts.Log.All.Paste.IsEnabled()
    {
    [[ $_obj_opts_log_all_paste_enable_ = 'true' ]]
    }
Opts.Log.All.Paste.IsNt()
    {
    [[ $_obj_opts_log_all_paste_flag_ != 'true' ]]
    }
Opts.Log.All.Paste.IsSet()
    {
    [[ $_obj_opts_log_all_paste_flag_ = 'true' ]]
    }
Opts.Log.All.Paste.LogChanges()
    {
    [[ $_obj_opts_log_all_paste_changes_flag_ = 'true' ]] && return
    _obj_opts_log_all_paste_changes_flag_=true
    }
Opts.Log.All.Paste.Set()
    {
    [[ $_obj_opts_log_all_paste_flag_ = 'true' ]] && return
    _obj_opts_log_all_paste_flag_=true
    [[ $_obj_opts_log_all_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_all_paste_flag_
    }
Opts.Log.All.Paste.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_log_all_paste_text_=$2
    else
        echo -n "$_obj_opts_log_all_paste_text_"
    fi
    }
Opts.Log.All.Paste.Init

Opts.Log.All.View.Clear()
    {
    [[ $_obj_opts_log_all_view_flag_ != 'true' ]] && return
    _obj_opts_log_all_view_flag_=false
    [[ $_obj_opts_log_all_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_all_view_flag_
    }
Opts.Log.All.View.Disable()
    {
    [[ $_obj_opts_log_all_view_enable_ != 'true' ]] && return
    _obj_opts_log_all_view_enable_=false
    [[ $_obj_opts_log_all_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_all_view_enable_
    }
Opts.Log.All.View.DontLogChanges()
    {
    [[ $_obj_opts_log_all_view_changes_flag_ != 'true' ]] && return
    _obj_opts_log_all_view_changes_flag_=false
    }
Opts.Log.All.View.Enable()
    {
    [[ $_obj_opts_log_all_view_enable_ = 'true' ]] && return
    _obj_opts_log_all_view_enable_=true
    [[ $_obj_opts_log_all_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_all_view_enable_
    }
Opts.Log.All.View.Init()
    {
    _obj_opts_log_all_view_text_=''
    _obj_opts_log_all_view_flag_=false
    _obj_opts_log_all_view_changes_flag_=true
    _obj_opts_log_all_view_enable_=false
    }
Opts.Log.All.View.IsDisabled()
    {
    [[ $_obj_opts_log_all_view_enable_ != 'true' ]]
    }
Opts.Log.All.View.IsEnabled()
    {
    [[ $_obj_opts_log_all_view_enable_ = 'true' ]]
    }
Opts.Log.All.View.IsNt()
    {
    [[ $_obj_opts_log_all_view_flag_ != 'true' ]]
    }
Opts.Log.All.View.IsSet()
    {
    [[ $_obj_opts_log_all_view_flag_ = 'true' ]]
    }
Opts.Log.All.View.LogChanges()
    {
    [[ $_obj_opts_log_all_view_changes_flag_ = 'true' ]] && return
    _obj_opts_log_all_view_changes_flag_=true
    }
Opts.Log.All.View.Set()
    {
    [[ $_obj_opts_log_all_view_flag_ = 'true' ]] && return
    _obj_opts_log_all_view_flag_=true
    [[ $_obj_opts_log_all_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_all_view_flag_
    }
Opts.Log.All.View.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_log_all_view_text_=$2
    else
        echo -n "$_obj_opts_log_all_view_text_"
    fi
    }
Opts.Log.All.View.Init

Opts.Log.Last.Paste.Clear()
    {
    [[ $_obj_opts_log_last_paste_flag_ != 'true' ]] && return
    _obj_opts_log_last_paste_flag_=false
    [[ $_obj_opts_log_last_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_last_paste_flag_
    }
Opts.Log.Last.Paste.Disable()
    {
    [[ $_obj_opts_log_last_paste_enable_ != 'true' ]] && return
    _obj_opts_log_last_paste_enable_=false
    [[ $_obj_opts_log_last_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_last_paste_enable_
    }
Opts.Log.Last.Paste.DontLogChanges()
    {
    [[ $_obj_opts_log_last_paste_changes_flag_ != 'true' ]] && return
    _obj_opts_log_last_paste_changes_flag_=false
    }
Opts.Log.Last.Paste.Enable()
    {
    [[ $_obj_opts_log_last_paste_enable_ = 'true' ]] && return
    _obj_opts_log_last_paste_enable_=true
    [[ $_obj_opts_log_last_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_last_paste_enable_
    }
Opts.Log.Last.Paste.Init()
    {
    _obj_opts_log_last_paste_text_=''
    _obj_opts_log_last_paste_flag_=false
    _obj_opts_log_last_paste_changes_flag_=true
    _obj_opts_log_last_paste_enable_=false
    }
Opts.Log.Last.Paste.IsDisabled()
    {
    [[ $_obj_opts_log_last_paste_enable_ != 'true' ]]
    }
Opts.Log.Last.Paste.IsEnabled()
    {
    [[ $_obj_opts_log_last_paste_enable_ = 'true' ]]
    }
Opts.Log.Last.Paste.IsNt()
    {
    [[ $_obj_opts_log_last_paste_flag_ != 'true' ]]
    }
Opts.Log.Last.Paste.IsSet()
    {
    [[ $_obj_opts_log_last_paste_flag_ = 'true' ]]
    }
Opts.Log.Last.Paste.LogChanges()
    {
    [[ $_obj_opts_log_last_paste_changes_flag_ = 'true' ]] && return
    _obj_opts_log_last_paste_changes_flag_=true
    }
Opts.Log.Last.Paste.Set()
    {
    [[ $_obj_opts_log_last_paste_flag_ = 'true' ]] && return
    _obj_opts_log_last_paste_flag_=true
    [[ $_obj_opts_log_last_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_last_paste_flag_
    }
Opts.Log.Last.Paste.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_log_last_paste_text_=$2
    else
        echo -n "$_obj_opts_log_last_paste_text_"
    fi
    }
Opts.Log.Last.Paste.Init

Opts.Log.Last.View.Clear()
    {
    [[ $_obj_opts_log_last_view_flag_ != 'true' ]] && return
    _obj_opts_log_last_view_flag_=false
    [[ $_obj_opts_log_last_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_last_view_flag_
    }
Opts.Log.Last.View.Disable()
    {
    [[ $_obj_opts_log_last_view_enable_ != 'true' ]] && return
    _obj_opts_log_last_view_enable_=false
    [[ $_obj_opts_log_last_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_last_view_enable_
    }
Opts.Log.Last.View.DontLogChanges()
    {
    [[ $_obj_opts_log_last_view_changes_flag_ != 'true' ]] && return
    _obj_opts_log_last_view_changes_flag_=false
    }
Opts.Log.Last.View.Enable()
    {
    [[ $_obj_opts_log_last_view_enable_ = 'true' ]] && return
    _obj_opts_log_last_view_enable_=true
    [[ $_obj_opts_log_last_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_last_view_enable_
    }
Opts.Log.Last.View.Init()
    {
    _obj_opts_log_last_view_text_=''
    _obj_opts_log_last_view_flag_=false
    _obj_opts_log_last_view_changes_flag_=true
    _obj_opts_log_last_view_enable_=false
    }
Opts.Log.Last.View.IsDisabled()
    {
    [[ $_obj_opts_log_last_view_enable_ != 'true' ]]
    }
Opts.Log.Last.View.IsEnabled()
    {
    [[ $_obj_opts_log_last_view_enable_ = 'true' ]]
    }
Opts.Log.Last.View.IsNt()
    {
    [[ $_obj_opts_log_last_view_flag_ != 'true' ]]
    }
Opts.Log.Last.View.IsSet()
    {
    [[ $_obj_opts_log_last_view_flag_ = 'true' ]]
    }
Opts.Log.Last.View.LogChanges()
    {
    [[ $_obj_opts_log_last_view_changes_flag_ = 'true' ]] && return
    _obj_opts_log_last_view_changes_flag_=true
    }
Opts.Log.Last.View.Set()
    {
    [[ $_obj_opts_log_last_view_flag_ = 'true' ]] && return
    _obj_opts_log_last_view_flag_=true
    [[ $_obj_opts_log_last_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_last_view_flag_
    }
Opts.Log.Last.View.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_log_last_view_text_=$2
    else
        echo -n "$_obj_opts_log_last_view_text_"
    fi
    }
Opts.Log.Last.View.Init

Opts.Log.Tail.Paste.Clear()
    {
    [[ $_obj_opts_log_tail_paste_flag_ != 'true' ]] && return
    _obj_opts_log_tail_paste_flag_=false
    [[ $_obj_opts_log_tail_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_tail_paste_flag_
    }
Opts.Log.Tail.Paste.Disable()
    {
    [[ $_obj_opts_log_tail_paste_enable_ != 'true' ]] && return
    _obj_opts_log_tail_paste_enable_=false
    [[ $_obj_opts_log_tail_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_tail_paste_enable_
    }
Opts.Log.Tail.Paste.DontLogChanges()
    {
    [[ $_obj_opts_log_tail_paste_changes_flag_ != 'true' ]] && return
    _obj_opts_log_tail_paste_changes_flag_=false
    }
Opts.Log.Tail.Paste.Enable()
    {
    [[ $_obj_opts_log_tail_paste_enable_ = 'true' ]] && return
    _obj_opts_log_tail_paste_enable_=true
    [[ $_obj_opts_log_tail_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_tail_paste_enable_
    }
Opts.Log.Tail.Paste.Init()
    {
    _obj_opts_log_tail_paste_text_=''
    _obj_opts_log_tail_paste_flag_=false
    _obj_opts_log_tail_paste_changes_flag_=true
    _obj_opts_log_tail_paste_enable_=false
    }
Opts.Log.Tail.Paste.IsDisabled()
    {
    [[ $_obj_opts_log_tail_paste_enable_ != 'true' ]]
    }
Opts.Log.Tail.Paste.IsEnabled()
    {
    [[ $_obj_opts_log_tail_paste_enable_ = 'true' ]]
    }
Opts.Log.Tail.Paste.IsNt()
    {
    [[ $_obj_opts_log_tail_paste_flag_ != 'true' ]]
    }
Opts.Log.Tail.Paste.IsSet()
    {
    [[ $_obj_opts_log_tail_paste_flag_ = 'true' ]]
    }
Opts.Log.Tail.Paste.LogChanges()
    {
    [[ $_obj_opts_log_tail_paste_changes_flag_ = 'true' ]] && return
    _obj_opts_log_tail_paste_changes_flag_=true
    }
Opts.Log.Tail.Paste.Set()
    {
    [[ $_obj_opts_log_tail_paste_flag_ = 'true' ]] && return
    _obj_opts_log_tail_paste_flag_=true
    [[ $_obj_opts_log_tail_paste_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_tail_paste_flag_
    }
Opts.Log.Tail.Paste.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_log_tail_paste_text_=$2
    else
        echo -n "$_obj_opts_log_tail_paste_text_"
    fi
    }
Opts.Log.Tail.Paste.Init

Opts.Log.Tail.View.Clear()
    {
    [[ $_obj_opts_log_tail_view_flag_ != 'true' ]] && return
    _obj_opts_log_tail_view_flag_=false
    [[ $_obj_opts_log_tail_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_tail_view_flag_
    }
Opts.Log.Tail.View.Disable()
    {
    [[ $_obj_opts_log_tail_view_enable_ != 'true' ]] && return
    _obj_opts_log_tail_view_enable_=false
    [[ $_obj_opts_log_tail_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_tail_view_enable_
    }
Opts.Log.Tail.View.DontLogChanges()
    {
    [[ $_obj_opts_log_tail_view_changes_flag_ != 'true' ]] && return
    _obj_opts_log_tail_view_changes_flag_=false
    }
Opts.Log.Tail.View.Enable()
    {
    [[ $_obj_opts_log_tail_view_enable_ = 'true' ]] && return
    _obj_opts_log_tail_view_enable_=true
    [[ $_obj_opts_log_tail_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_tail_view_enable_
    }
Opts.Log.Tail.View.Init()
    {
    _obj_opts_log_tail_view_text_=''
    _obj_opts_log_tail_view_flag_=false
    _obj_opts_log_tail_view_changes_flag_=true
    _obj_opts_log_tail_view_enable_=false
    }
Opts.Log.Tail.View.IsDisabled()
    {
    [[ $_obj_opts_log_tail_view_enable_ != 'true' ]]
    }
Opts.Log.Tail.View.IsEnabled()
    {
    [[ $_obj_opts_log_tail_view_enable_ = 'true' ]]
    }
Opts.Log.Tail.View.IsNt()
    {
    [[ $_obj_opts_log_tail_view_flag_ != 'true' ]]
    }
Opts.Log.Tail.View.IsSet()
    {
    [[ $_obj_opts_log_tail_view_flag_ = 'true' ]]
    }
Opts.Log.Tail.View.LogChanges()
    {
    [[ $_obj_opts_log_tail_view_changes_flag_ = 'true' ]] && return
    _obj_opts_log_tail_view_changes_flag_=true
    }
Opts.Log.Tail.View.Set()
    {
    [[ $_obj_opts_log_tail_view_flag_ = 'true' ]] && return
    _obj_opts_log_tail_view_flag_=true
    [[ $_obj_opts_log_tail_view_changes_flag_ = 'true' ]] && DebugVar _obj_opts_log_tail_view_flag_
    }
Opts.Log.Tail.View.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_log_tail_view_text_=$2
    else
        echo -n "$_obj_opts_log_tail_view_text_"
    fi
    }
Opts.Log.Tail.View.Init

Opts.Apps.List.ScAll.Clear()
    {
    [[ $_obj_opts_apps_list_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scall_flag_=false
    [[ $_obj_opts_apps_list_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scall_flag_
    }
Opts.Apps.List.ScAll.Disable()
    {
    [[ $_obj_opts_apps_list_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scall_enable_=false
    [[ $_obj_opts_apps_list_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scall_enable_
    }
Opts.Apps.List.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scall_changes_flag_=false
    }
Opts.Apps.List.ScAll.Enable()
    {
    [[ $_obj_opts_apps_list_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scall_enable_=true
    [[ $_obj_opts_apps_list_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scall_enable_
    }
Opts.Apps.List.ScAll.Init()
    {
    _obj_opts_apps_list_scall_text_=''
    _obj_opts_apps_list_scall_flag_=false
    _obj_opts_apps_list_scall_changes_flag_=true
    _obj_opts_apps_list_scall_enable_=false
    }
Opts.Apps.List.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scall_enable_ != 'true' ]]
    }
Opts.Apps.List.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scall_enable_ = 'true' ]]
    }
Opts.Apps.List.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_list_scall_flag_ != 'true' ]]
    }
Opts.Apps.List.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_list_scall_flag_ = 'true' ]]
    }
Opts.Apps.List.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_list_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scall_changes_flag_=true
    }
Opts.Apps.List.ScAll.Set()
    {
    [[ $_obj_opts_apps_list_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scall_flag_=true
    [[ $_obj_opts_apps_list_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scall_flag_
    }
Opts.Apps.List.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scall_text_"
    fi
    }
Opts.Apps.List.ScAll.Init

Opts.Apps.List.ScNtAll.Clear()
    {
    [[ $_obj_opts_apps_list_scntall_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntall_flag_=false
    [[ $_obj_opts_apps_list_scntall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntall_flag_
    }
Opts.Apps.List.ScNtAll.Disable()
    {
    [[ $_obj_opts_apps_list_scntall_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scntall_enable_=false
    [[ $_obj_opts_apps_list_scntall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntall_enable_
    }
Opts.Apps.List.ScNtAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scntall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntall_changes_flag_=false
    }
Opts.Apps.List.ScNtAll.Enable()
    {
    [[ $_obj_opts_apps_list_scntall_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scntall_enable_=true
    [[ $_obj_opts_apps_list_scntall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntall_enable_
    }
Opts.Apps.List.ScNtAll.Init()
    {
    _obj_opts_apps_list_scntall_text_=''
    _obj_opts_apps_list_scntall_flag_=false
    _obj_opts_apps_list_scntall_changes_flag_=true
    _obj_opts_apps_list_scntall_enable_=false
    }
Opts.Apps.List.ScNtAll.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scntall_enable_ != 'true' ]]
    }
Opts.Apps.List.ScNtAll.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scntall_enable_ = 'true' ]]
    }
Opts.Apps.List.ScNtAll.IsNt()
    {
    [[ $_obj_opts_apps_list_scntall_flag_ != 'true' ]]
    }
Opts.Apps.List.ScNtAll.IsSet()
    {
    [[ $_obj_opts_apps_list_scntall_flag_ = 'true' ]]
    }
Opts.Apps.List.ScNtAll.LogChanges()
    {
    [[ $_obj_opts_apps_list_scntall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntall_changes_flag_=true
    }
Opts.Apps.List.ScNtAll.Set()
    {
    [[ $_obj_opts_apps_list_scntall_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntall_flag_=true
    [[ $_obj_opts_apps_list_scntall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntall_flag_
    }
Opts.Apps.List.ScNtAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scntall_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scntall_text_"
    fi
    }
Opts.Apps.List.ScNtAll.Init

Opts.Apps.List.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_list_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scdependent_flag_=false
    [[ $_obj_opts_apps_list_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scdependent_flag_
    }
Opts.Apps.List.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_list_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scdependent_enable_=false
    [[ $_obj_opts_apps_list_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scdependent_enable_
    }
Opts.Apps.List.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scdependent_changes_flag_=false
    }
Opts.Apps.List.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_list_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scdependent_enable_=true
    [[ $_obj_opts_apps_list_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scdependent_enable_
    }
Opts.Apps.List.ScDependent.Init()
    {
    _obj_opts_apps_list_scdependent_text_=''
    _obj_opts_apps_list_scdependent_flag_=false
    _obj_opts_apps_list_scdependent_changes_flag_=true
    _obj_opts_apps_list_scdependent_enable_=false
    }
Opts.Apps.List.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.List.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.List.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_list_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.List.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_list_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.List.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_list_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scdependent_changes_flag_=true
    }
Opts.Apps.List.ScDependent.Set()
    {
    [[ $_obj_opts_apps_list_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scdependent_flag_=true
    [[ $_obj_opts_apps_list_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scdependent_flag_
    }
Opts.Apps.List.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scdependent_text_"
    fi
    }
Opts.Apps.List.ScDependent.Init

Opts.Apps.List.ScNtDependent.Clear()
    {
    [[ $_obj_opts_apps_list_scntdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntdependent_flag_=false
    [[ $_obj_opts_apps_list_scntdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntdependent_flag_
    }
Opts.Apps.List.ScNtDependent.Disable()
    {
    [[ $_obj_opts_apps_list_scntdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scntdependent_enable_=false
    [[ $_obj_opts_apps_list_scntdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntdependent_enable_
    }
Opts.Apps.List.ScNtDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scntdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntdependent_changes_flag_=false
    }
Opts.Apps.List.ScNtDependent.Enable()
    {
    [[ $_obj_opts_apps_list_scntdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scntdependent_enable_=true
    [[ $_obj_opts_apps_list_scntdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntdependent_enable_
    }
Opts.Apps.List.ScNtDependent.Init()
    {
    _obj_opts_apps_list_scntdependent_text_=''
    _obj_opts_apps_list_scntdependent_flag_=false
    _obj_opts_apps_list_scntdependent_changes_flag_=true
    _obj_opts_apps_list_scntdependent_enable_=false
    }
Opts.Apps.List.ScNtDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scntdependent_enable_ != 'true' ]]
    }
Opts.Apps.List.ScNtDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scntdependent_enable_ = 'true' ]]
    }
Opts.Apps.List.ScNtDependent.IsNt()
    {
    [[ $_obj_opts_apps_list_scntdependent_flag_ != 'true' ]]
    }
Opts.Apps.List.ScNtDependent.IsSet()
    {
    [[ $_obj_opts_apps_list_scntdependent_flag_ = 'true' ]]
    }
Opts.Apps.List.ScNtDependent.LogChanges()
    {
    [[ $_obj_opts_apps_list_scntdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntdependent_changes_flag_=true
    }
Opts.Apps.List.ScNtDependent.Set()
    {
    [[ $_obj_opts_apps_list_scntdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntdependent_flag_=true
    [[ $_obj_opts_apps_list_scntdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntdependent_flag_
    }
Opts.Apps.List.ScNtDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scntdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scntdependent_text_"
    fi
    }
Opts.Apps.List.ScNtDependent.Init

Opts.Apps.List.ScNames.Clear()
    {
    [[ $_obj_opts_apps_list_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scnames_flag_=false
    [[ $_obj_opts_apps_list_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scnames_flag_
    }
Opts.Apps.List.ScNames.Disable()
    {
    [[ $_obj_opts_apps_list_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scnames_enable_=false
    [[ $_obj_opts_apps_list_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scnames_enable_
    }
Opts.Apps.List.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scnames_changes_flag_=false
    }
Opts.Apps.List.ScNames.Enable()
    {
    [[ $_obj_opts_apps_list_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scnames_enable_=true
    [[ $_obj_opts_apps_list_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scnames_enable_
    }
Opts.Apps.List.ScNames.Init()
    {
    _obj_opts_apps_list_scnames_text_=''
    _obj_opts_apps_list_scnames_flag_=false
    _obj_opts_apps_list_scnames_changes_flag_=true
    _obj_opts_apps_list_scnames_enable_=false
    }
Opts.Apps.List.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scnames_enable_ != 'true' ]]
    }
Opts.Apps.List.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scnames_enable_ = 'true' ]]
    }
Opts.Apps.List.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_list_scnames_flag_ != 'true' ]]
    }
Opts.Apps.List.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_list_scnames_flag_ = 'true' ]]
    }
Opts.Apps.List.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_list_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scnames_changes_flag_=true
    }
Opts.Apps.List.ScNames.Set()
    {
    [[ $_obj_opts_apps_list_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scnames_flag_=true
    [[ $_obj_opts_apps_list_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scnames_flag_
    }
Opts.Apps.List.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scnames_text_"
    fi
    }
Opts.Apps.List.ScNames.Init

Opts.Apps.List.ScNtNames.Clear()
    {
    [[ $_obj_opts_apps_list_scntnames_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntnames_flag_=false
    [[ $_obj_opts_apps_list_scntnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntnames_flag_
    }
Opts.Apps.List.ScNtNames.Disable()
    {
    [[ $_obj_opts_apps_list_scntnames_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scntnames_enable_=false
    [[ $_obj_opts_apps_list_scntnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntnames_enable_
    }
Opts.Apps.List.ScNtNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scntnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntnames_changes_flag_=false
    }
Opts.Apps.List.ScNtNames.Enable()
    {
    [[ $_obj_opts_apps_list_scntnames_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scntnames_enable_=true
    [[ $_obj_opts_apps_list_scntnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntnames_enable_
    }
Opts.Apps.List.ScNtNames.Init()
    {
    _obj_opts_apps_list_scntnames_text_=''
    _obj_opts_apps_list_scntnames_flag_=false
    _obj_opts_apps_list_scntnames_changes_flag_=true
    _obj_opts_apps_list_scntnames_enable_=false
    }
Opts.Apps.List.ScNtNames.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scntnames_enable_ != 'true' ]]
    }
Opts.Apps.List.ScNtNames.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scntnames_enable_ = 'true' ]]
    }
Opts.Apps.List.ScNtNames.IsNt()
    {
    [[ $_obj_opts_apps_list_scntnames_flag_ != 'true' ]]
    }
Opts.Apps.List.ScNtNames.IsSet()
    {
    [[ $_obj_opts_apps_list_scntnames_flag_ = 'true' ]]
    }
Opts.Apps.List.ScNtNames.LogChanges()
    {
    [[ $_obj_opts_apps_list_scntnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntnames_changes_flag_=true
    }
Opts.Apps.List.ScNtNames.Set()
    {
    [[ $_obj_opts_apps_list_scntnames_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntnames_flag_=true
    [[ $_obj_opts_apps_list_scntnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntnames_flag_
    }
Opts.Apps.List.ScNtNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scntnames_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scntnames_text_"
    fi
    }
Opts.Apps.List.ScNtNames.Init

Opts.Apps.List.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_list_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scstandalone_flag_=false
    [[ $_obj_opts_apps_list_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scstandalone_flag_
    }
Opts.Apps.List.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_list_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scstandalone_enable_=false
    [[ $_obj_opts_apps_list_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scstandalone_enable_
    }
Opts.Apps.List.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scstandalone_changes_flag_=false
    }
Opts.Apps.List.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_list_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scstandalone_enable_=true
    [[ $_obj_opts_apps_list_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scstandalone_enable_
    }
Opts.Apps.List.ScStandalone.Init()
    {
    _obj_opts_apps_list_scstandalone_text_=''
    _obj_opts_apps_list_scstandalone_flag_=false
    _obj_opts_apps_list_scstandalone_changes_flag_=true
    _obj_opts_apps_list_scstandalone_enable_=false
    }
Opts.Apps.List.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.List.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.List.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_list_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.List.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_list_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.List.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_list_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scstandalone_changes_flag_=true
    }
Opts.Apps.List.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_list_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scstandalone_flag_=true
    [[ $_obj_opts_apps_list_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scstandalone_flag_
    }
Opts.Apps.List.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scstandalone_text_"
    fi
    }
Opts.Apps.List.ScStandalone.Init

Opts.Apps.List.ScNtStandalone.Clear()
    {
    [[ $_obj_opts_apps_list_scntstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntstandalone_flag_=false
    [[ $_obj_opts_apps_list_scntstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntstandalone_flag_
    }
Opts.Apps.List.ScNtStandalone.Disable()
    {
    [[ $_obj_opts_apps_list_scntstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scntstandalone_enable_=false
    [[ $_obj_opts_apps_list_scntstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntstandalone_enable_
    }
Opts.Apps.List.ScNtStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scntstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntstandalone_changes_flag_=false
    }
Opts.Apps.List.ScNtStandalone.Enable()
    {
    [[ $_obj_opts_apps_list_scntstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scntstandalone_enable_=true
    [[ $_obj_opts_apps_list_scntstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntstandalone_enable_
    }
Opts.Apps.List.ScNtStandalone.Init()
    {
    _obj_opts_apps_list_scntstandalone_text_=''
    _obj_opts_apps_list_scntstandalone_flag_=false
    _obj_opts_apps_list_scntstandalone_changes_flag_=true
    _obj_opts_apps_list_scntstandalone_enable_=false
    }
Opts.Apps.List.ScNtStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scntstandalone_enable_ != 'true' ]]
    }
Opts.Apps.List.ScNtStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scntstandalone_enable_ = 'true' ]]
    }
Opts.Apps.List.ScNtStandalone.IsNt()
    {
    [[ $_obj_opts_apps_list_scntstandalone_flag_ != 'true' ]]
    }
Opts.Apps.List.ScNtStandalone.IsSet()
    {
    [[ $_obj_opts_apps_list_scntstandalone_flag_ = 'true' ]]
    }
Opts.Apps.List.ScNtStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_list_scntstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntstandalone_changes_flag_=true
    }
Opts.Apps.List.ScNtStandalone.Set()
    {
    [[ $_obj_opts_apps_list_scntstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntstandalone_flag_=true
    [[ $_obj_opts_apps_list_scntstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntstandalone_flag_
    }
Opts.Apps.List.ScNtStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scntstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scntstandalone_text_"
    fi
    }
Opts.Apps.List.ScNtStandalone.Init

Opts.Apps.List.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_list_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_list_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scsupportbackup_flag_
    }
Opts.Apps.List.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_list_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_list_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scsupportbackup_enable_
    }
Opts.Apps.List.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scsupportbackup_changes_flag_=false
    }
Opts.Apps.List.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_list_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_list_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scsupportbackup_enable_
    }
Opts.Apps.List.ScSupportBackup.Init()
    {
    _obj_opts_apps_list_scsupportbackup_text_=''
    _obj_opts_apps_list_scsupportbackup_flag_=false
    _obj_opts_apps_list_scsupportbackup_changes_flag_=true
    _obj_opts_apps_list_scsupportbackup_enable_=false
    }
Opts.Apps.List.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.List.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.List.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_list_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.List.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_list_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.List.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_list_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scsupportbackup_changes_flag_=true
    }
Opts.Apps.List.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_list_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_list_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scsupportbackup_flag_
    }
Opts.Apps.List.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scsupportbackup_text_"
    fi
    }
Opts.Apps.List.ScSupportBackup.Init

Opts.Apps.List.ScNtSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_list_scntsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntsupportbackup_flag_=false
    [[ $_obj_opts_apps_list_scntsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntsupportbackup_flag_
    }
Opts.Apps.List.ScNtSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_list_scntsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scntsupportbackup_enable_=false
    [[ $_obj_opts_apps_list_scntsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntsupportbackup_enable_
    }
Opts.Apps.List.ScNtSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scntsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntsupportbackup_changes_flag_=false
    }
Opts.Apps.List.ScNtSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_list_scntsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scntsupportbackup_enable_=true
    [[ $_obj_opts_apps_list_scntsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntsupportbackup_enable_
    }
Opts.Apps.List.ScNtSupportBackup.Init()
    {
    _obj_opts_apps_list_scntsupportbackup_text_=''
    _obj_opts_apps_list_scntsupportbackup_flag_=false
    _obj_opts_apps_list_scntsupportbackup_changes_flag_=true
    _obj_opts_apps_list_scntsupportbackup_enable_=false
    }
Opts.Apps.List.ScNtSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scntsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.List.ScNtSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scntsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.List.ScNtSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_list_scntsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.List.ScNtSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_list_scntsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.List.ScNtSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_list_scntsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntsupportbackup_changes_flag_=true
    }
Opts.Apps.List.ScNtSupportBackup.Set()
    {
    [[ $_obj_opts_apps_list_scntsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntsupportbackup_flag_=true
    [[ $_obj_opts_apps_list_scntsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntsupportbackup_flag_
    }
Opts.Apps.List.ScNtSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scntsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scntsupportbackup_text_"
    fi
    }
Opts.Apps.List.ScNtSupportBackup.Init

Opts.Apps.List.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scsupportupdateonrestart_flag_
    }
Opts.Apps.List.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scsupportupdateonrestart_enable_
    }
Opts.Apps.List.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.List.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scsupportupdateonrestart_enable_
    }
Opts.Apps.List.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_list_scsupportupdateonrestart_text_=''
    _obj_opts_apps_list_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_list_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_list_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.List.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.List.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.List.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.List.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.List.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.List.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_list_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scsupportupdateonrestart_flag_
    }
Opts.Apps.List.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.List.ScSupportUpdateOnRestart.Init

Opts.Apps.List.ScNtSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntsupportupdateonrestart_flag_
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scntsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntsupportupdateonrestart_enable_
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scntsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntsupportupdateonrestart_enable_
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_list_scntsupportupdateonrestart_text_=''
    _obj_opts_apps_list_scntsupportupdateonrestart_flag_=false
    _obj_opts_apps_list_scntsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_list_scntsupportupdateonrestart_enable_=false
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_list_scntsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntsupportupdateonrestart_flag_
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scntsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scntsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.List.ScNtSupportUpdateOnRestart.Init

Opts.Apps.List.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_list_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scupgradable_flag_=false
    [[ $_obj_opts_apps_list_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scupgradable_flag_
    }
Opts.Apps.List.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_list_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scupgradable_enable_=false
    [[ $_obj_opts_apps_list_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scupgradable_enable_
    }
Opts.Apps.List.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scupgradable_changes_flag_=false
    }
Opts.Apps.List.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_list_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scupgradable_enable_=true
    [[ $_obj_opts_apps_list_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scupgradable_enable_
    }
Opts.Apps.List.ScUpgradable.Init()
    {
    _obj_opts_apps_list_scupgradable_text_=''
    _obj_opts_apps_list_scupgradable_flag_=false
    _obj_opts_apps_list_scupgradable_changes_flag_=true
    _obj_opts_apps_list_scupgradable_enable_=false
    }
Opts.Apps.List.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.List.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.List.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_list_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.List.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_list_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.List.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_list_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scupgradable_changes_flag_=true
    }
Opts.Apps.List.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_list_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scupgradable_flag_=true
    [[ $_obj_opts_apps_list_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scupgradable_flag_
    }
Opts.Apps.List.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scupgradable_text_"
    fi
    }
Opts.Apps.List.ScUpgradable.Init

Opts.Apps.List.ScNtUpgradable.Clear()
    {
    [[ $_obj_opts_apps_list_scntupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntupgradable_flag_=false
    [[ $_obj_opts_apps_list_scntupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntupgradable_flag_
    }
Opts.Apps.List.ScNtUpgradable.Disable()
    {
    [[ $_obj_opts_apps_list_scntupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_list_scntupgradable_enable_=false
    [[ $_obj_opts_apps_list_scntupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntupgradable_enable_
    }
Opts.Apps.List.ScNtUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_scntupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_scntupgradable_changes_flag_=false
    }
Opts.Apps.List.ScNtUpgradable.Enable()
    {
    [[ $_obj_opts_apps_list_scntupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_list_scntupgradable_enable_=true
    [[ $_obj_opts_apps_list_scntupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntupgradable_enable_
    }
Opts.Apps.List.ScNtUpgradable.Init()
    {
    _obj_opts_apps_list_scntupgradable_text_=''
    _obj_opts_apps_list_scntupgradable_flag_=false
    _obj_opts_apps_list_scntupgradable_changes_flag_=true
    _obj_opts_apps_list_scntupgradable_enable_=false
    }
Opts.Apps.List.ScNtUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_list_scntupgradable_enable_ != 'true' ]]
    }
Opts.Apps.List.ScNtUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_list_scntupgradable_enable_ = 'true' ]]
    }
Opts.Apps.List.ScNtUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_list_scntupgradable_flag_ != 'true' ]]
    }
Opts.Apps.List.ScNtUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_list_scntupgradable_flag_ = 'true' ]]
    }
Opts.Apps.List.ScNtUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_list_scntupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntupgradable_changes_flag_=true
    }
Opts.Apps.List.ScNtUpgradable.Set()
    {
    [[ $_obj_opts_apps_list_scntupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_list_scntupgradable_flag_=true
    [[ $_obj_opts_apps_list_scntupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_scntupgradable_flag_
    }
Opts.Apps.List.ScNtUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_scntupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_list_scntupgradable_text_"
    fi
    }
Opts.Apps.List.ScNtUpgradable.Init

Opts.Apps.List.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_list_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isbackedup_flag_=false
    [[ $_obj_opts_apps_list_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isbackedup_flag_
    }
Opts.Apps.List.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_list_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isbackedup_enable_=false
    [[ $_obj_opts_apps_list_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isbackedup_enable_
    }
Opts.Apps.List.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isbackedup_changes_flag_=false
    }
Opts.Apps.List.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_list_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isbackedup_enable_=true
    [[ $_obj_opts_apps_list_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isbackedup_enable_
    }
Opts.Apps.List.IsBackedUp.Init()
    {
    _obj_opts_apps_list_isbackedup_text_=''
    _obj_opts_apps_list_isbackedup_flag_=false
    _obj_opts_apps_list_isbackedup_changes_flag_=true
    _obj_opts_apps_list_isbackedup_enable_=false
    }
Opts.Apps.List.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.List.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.List.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_list_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.List.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_list_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.List.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_list_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isbackedup_changes_flag_=true
    }
Opts.Apps.List.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_list_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isbackedup_flag_=true
    [[ $_obj_opts_apps_list_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isbackedup_flag_
    }
Opts.Apps.List.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isbackedup_text_"
    fi
    }
Opts.Apps.List.IsBackedUp.Init

Opts.Apps.List.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_list_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntbackedup_flag_=false
    [[ $_obj_opts_apps_list_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntbackedup_flag_
    }
Opts.Apps.List.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_list_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isntbackedup_enable_=false
    [[ $_obj_opts_apps_list_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntbackedup_enable_
    }
Opts.Apps.List.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntbackedup_changes_flag_=false
    }
Opts.Apps.List.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_list_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isntbackedup_enable_=true
    [[ $_obj_opts_apps_list_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntbackedup_enable_
    }
Opts.Apps.List.IsNtBackedUp.Init()
    {
    _obj_opts_apps_list_isntbackedup_text_=''
    _obj_opts_apps_list_isntbackedup_flag_=false
    _obj_opts_apps_list_isntbackedup_changes_flag_=true
    _obj_opts_apps_list_isntbackedup_enable_=false
    }
Opts.Apps.List.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.List.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.List.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_list_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.List.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_list_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.List.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_list_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntbackedup_changes_flag_=true
    }
Opts.Apps.List.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_list_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntbackedup_flag_=true
    [[ $_obj_opts_apps_list_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntbackedup_flag_
    }
Opts.Apps.List.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isntbackedup_text_"
    fi
    }
Opts.Apps.List.IsNtBackedUp.Init

Opts.Apps.List.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_list_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isdownloaded_flag_=false
    [[ $_obj_opts_apps_list_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isdownloaded_flag_
    }
Opts.Apps.List.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_list_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isdownloaded_enable_=false
    [[ $_obj_opts_apps_list_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isdownloaded_enable_
    }
Opts.Apps.List.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isdownloaded_changes_flag_=false
    }
Opts.Apps.List.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_list_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isdownloaded_enable_=true
    [[ $_obj_opts_apps_list_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isdownloaded_enable_
    }
Opts.Apps.List.IsDownloaded.Init()
    {
    _obj_opts_apps_list_isdownloaded_text_=''
    _obj_opts_apps_list_isdownloaded_flag_=false
    _obj_opts_apps_list_isdownloaded_changes_flag_=true
    _obj_opts_apps_list_isdownloaded_enable_=false
    }
Opts.Apps.List.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.List.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.List.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_list_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.List.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_list_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.List.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_list_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isdownloaded_changes_flag_=true
    }
Opts.Apps.List.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_list_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isdownloaded_flag_=true
    [[ $_obj_opts_apps_list_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isdownloaded_flag_
    }
Opts.Apps.List.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isdownloaded_text_"
    fi
    }
Opts.Apps.List.IsDownloaded.Init

Opts.Apps.List.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_list_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_list_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntdownloaded_flag_
    }
Opts.Apps.List.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_list_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_list_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntdownloaded_enable_
    }
Opts.Apps.List.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntdownloaded_changes_flag_=false
    }
Opts.Apps.List.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_list_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_list_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntdownloaded_enable_
    }
Opts.Apps.List.IsNtDownloaded.Init()
    {
    _obj_opts_apps_list_isntdownloaded_text_=''
    _obj_opts_apps_list_isntdownloaded_flag_=false
    _obj_opts_apps_list_isntdownloaded_changes_flag_=true
    _obj_opts_apps_list_isntdownloaded_enable_=false
    }
Opts.Apps.List.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.List.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.List.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_list_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.List.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_list_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.List.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_list_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntdownloaded_changes_flag_=true
    }
Opts.Apps.List.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_list_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_list_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntdownloaded_flag_
    }
Opts.Apps.List.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isntdownloaded_text_"
    fi
    }
Opts.Apps.List.IsNtDownloaded.Init

Opts.Apps.List.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_list_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isinstalled_flag_=false
    [[ $_obj_opts_apps_list_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isinstalled_flag_
    }
Opts.Apps.List.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_list_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isinstalled_enable_=false
    [[ $_obj_opts_apps_list_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isinstalled_enable_
    }
Opts.Apps.List.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isinstalled_changes_flag_=false
    }
Opts.Apps.List.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_list_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isinstalled_enable_=true
    [[ $_obj_opts_apps_list_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isinstalled_enable_
    }
Opts.Apps.List.IsInstalled.Init()
    {
    _obj_opts_apps_list_isinstalled_text_=''
    _obj_opts_apps_list_isinstalled_flag_=false
    _obj_opts_apps_list_isinstalled_changes_flag_=true
    _obj_opts_apps_list_isinstalled_enable_=false
    }
Opts.Apps.List.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.List.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.List.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_list_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.List.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_list_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.List.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_list_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isinstalled_changes_flag_=true
    }
Opts.Apps.List.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_list_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isinstalled_flag_=true
    [[ $_obj_opts_apps_list_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isinstalled_flag_
    }
Opts.Apps.List.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isinstalled_text_"
    fi
    }
Opts.Apps.List.IsInstalled.Init

Opts.Apps.List.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_list_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntinstalled_flag_=false
    [[ $_obj_opts_apps_list_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntinstalled_flag_
    }
Opts.Apps.List.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_list_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isntinstalled_enable_=false
    [[ $_obj_opts_apps_list_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntinstalled_enable_
    }
Opts.Apps.List.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntinstalled_changes_flag_=false
    }
Opts.Apps.List.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_list_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isntinstalled_enable_=true
    [[ $_obj_opts_apps_list_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntinstalled_enable_
    }
Opts.Apps.List.IsNtInstalled.Init()
    {
    _obj_opts_apps_list_isntinstalled_text_=''
    _obj_opts_apps_list_isntinstalled_flag_=false
    _obj_opts_apps_list_isntinstalled_changes_flag_=true
    _obj_opts_apps_list_isntinstalled_enable_=false
    }
Opts.Apps.List.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.List.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.List.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_list_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.List.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_list_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.List.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_list_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntinstalled_changes_flag_=true
    }
Opts.Apps.List.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_list_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntinstalled_flag_=true
    [[ $_obj_opts_apps_list_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntinstalled_flag_
    }
Opts.Apps.List.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isntinstalled_text_"
    fi
    }
Opts.Apps.List.IsNtInstalled.Init

Opts.Apps.List.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_list_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isinstallable_flag_=false
    [[ $_obj_opts_apps_list_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isinstallable_flag_
    }
Opts.Apps.List.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_list_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isinstallable_enable_=false
    [[ $_obj_opts_apps_list_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isinstallable_enable_
    }
Opts.Apps.List.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isinstallable_changes_flag_=false
    }
Opts.Apps.List.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_list_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isinstallable_enable_=true
    [[ $_obj_opts_apps_list_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isinstallable_enable_
    }
Opts.Apps.List.IsInstallable.Init()
    {
    _obj_opts_apps_list_isinstallable_text_=''
    _obj_opts_apps_list_isinstallable_flag_=false
    _obj_opts_apps_list_isinstallable_changes_flag_=true
    _obj_opts_apps_list_isinstallable_enable_=false
    }
Opts.Apps.List.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.List.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.List.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_list_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.List.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_list_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.List.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_list_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isinstallable_changes_flag_=true
    }
Opts.Apps.List.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_list_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isinstallable_flag_=true
    [[ $_obj_opts_apps_list_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isinstallable_flag_
    }
Opts.Apps.List.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isinstallable_text_"
    fi
    }
Opts.Apps.List.IsInstallable.Init

Opts.Apps.List.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_list_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntinstallable_flag_=false
    [[ $_obj_opts_apps_list_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntinstallable_flag_
    }
Opts.Apps.List.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_list_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isntinstallable_enable_=false
    [[ $_obj_opts_apps_list_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntinstallable_enable_
    }
Opts.Apps.List.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntinstallable_changes_flag_=false
    }
Opts.Apps.List.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_list_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isntinstallable_enable_=true
    [[ $_obj_opts_apps_list_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntinstallable_enable_
    }
Opts.Apps.List.IsNtInstallable.Init()
    {
    _obj_opts_apps_list_isntinstallable_text_=''
    _obj_opts_apps_list_isntinstallable_flag_=false
    _obj_opts_apps_list_isntinstallable_changes_flag_=true
    _obj_opts_apps_list_isntinstallable_enable_=false
    }
Opts.Apps.List.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.List.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.List.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_list_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.List.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_list_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.List.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_list_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntinstallable_changes_flag_=true
    }
Opts.Apps.List.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_list_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntinstallable_flag_=true
    [[ $_obj_opts_apps_list_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntinstallable_flag_
    }
Opts.Apps.List.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isntinstallable_text_"
    fi
    }
Opts.Apps.List.IsNtInstallable.Init

Opts.Apps.List.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_list_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_list_ismissing_flag_=false
    [[ $_obj_opts_apps_list_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_ismissing_flag_
    }
Opts.Apps.List.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_list_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_list_ismissing_enable_=false
    [[ $_obj_opts_apps_list_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_ismissing_enable_
    }
Opts.Apps.List.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_ismissing_changes_flag_=false
    }
Opts.Apps.List.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_list_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_list_ismissing_enable_=true
    [[ $_obj_opts_apps_list_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_ismissing_enable_
    }
Opts.Apps.List.IsMissing.Init()
    {
    _obj_opts_apps_list_ismissing_text_=''
    _obj_opts_apps_list_ismissing_flag_=false
    _obj_opts_apps_list_ismissing_changes_flag_=true
    _obj_opts_apps_list_ismissing_enable_=false
    }
Opts.Apps.List.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_list_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.List.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_list_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.List.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_list_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.List.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_list_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.List.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_list_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_ismissing_changes_flag_=true
    }
Opts.Apps.List.IsMissing.Set()
    {
    [[ $_obj_opts_apps_list_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_list_ismissing_flag_=true
    [[ $_obj_opts_apps_list_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_ismissing_flag_
    }
Opts.Apps.List.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_list_ismissing_text_"
    fi
    }
Opts.Apps.List.IsMissing.Init

Opts.Apps.List.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_list_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntmissing_flag_=false
    [[ $_obj_opts_apps_list_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntmissing_flag_
    }
Opts.Apps.List.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_list_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isntmissing_enable_=false
    [[ $_obj_opts_apps_list_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntmissing_enable_
    }
Opts.Apps.List.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntmissing_changes_flag_=false
    }
Opts.Apps.List.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_list_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isntmissing_enable_=true
    [[ $_obj_opts_apps_list_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntmissing_enable_
    }
Opts.Apps.List.IsNtMissing.Init()
    {
    _obj_opts_apps_list_isntmissing_text_=''
    _obj_opts_apps_list_isntmissing_flag_=false
    _obj_opts_apps_list_isntmissing_changes_flag_=true
    _obj_opts_apps_list_isntmissing_enable_=false
    }
Opts.Apps.List.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.List.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.List.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_list_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.List.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_list_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.List.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_list_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntmissing_changes_flag_=true
    }
Opts.Apps.List.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_list_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntmissing_flag_=true
    [[ $_obj_opts_apps_list_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntmissing_flag_
    }
Opts.Apps.List.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isntmissing_text_"
    fi
    }
Opts.Apps.List.IsNtMissing.Init

Opts.Apps.List.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_list_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isstarting_flag_=false
    [[ $_obj_opts_apps_list_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstarting_flag_
    }
Opts.Apps.List.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_list_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isstarting_enable_=false
    [[ $_obj_opts_apps_list_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstarting_enable_
    }
Opts.Apps.List.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isstarting_changes_flag_=false
    }
Opts.Apps.List.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_list_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isstarting_enable_=true
    [[ $_obj_opts_apps_list_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstarting_enable_
    }
Opts.Apps.List.IsStarting.Init()
    {
    _obj_opts_apps_list_isstarting_text_=''
    _obj_opts_apps_list_isstarting_flag_=false
    _obj_opts_apps_list_isstarting_changes_flag_=true
    _obj_opts_apps_list_isstarting_enable_=false
    }
Opts.Apps.List.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.List.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.List.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_list_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.List.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_list_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.List.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_list_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isstarting_changes_flag_=true
    }
Opts.Apps.List.IsStarting.Set()
    {
    [[ $_obj_opts_apps_list_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isstarting_flag_=true
    [[ $_obj_opts_apps_list_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstarting_flag_
    }
Opts.Apps.List.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isstarting_text_"
    fi
    }
Opts.Apps.List.IsStarting.Init

Opts.Apps.List.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_list_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntstarting_flag_=false
    [[ $_obj_opts_apps_list_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstarting_flag_
    }
Opts.Apps.List.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_list_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isntstarting_enable_=false
    [[ $_obj_opts_apps_list_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstarting_enable_
    }
Opts.Apps.List.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntstarting_changes_flag_=false
    }
Opts.Apps.List.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_list_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isntstarting_enable_=true
    [[ $_obj_opts_apps_list_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstarting_enable_
    }
Opts.Apps.List.IsNtStarting.Init()
    {
    _obj_opts_apps_list_isntstarting_text_=''
    _obj_opts_apps_list_isntstarting_flag_=false
    _obj_opts_apps_list_isntstarting_changes_flag_=true
    _obj_opts_apps_list_isntstarting_enable_=false
    }
Opts.Apps.List.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.List.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.List.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_list_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.List.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_list_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.List.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_list_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntstarting_changes_flag_=true
    }
Opts.Apps.List.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_list_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntstarting_flag_=true
    [[ $_obj_opts_apps_list_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstarting_flag_
    }
Opts.Apps.List.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isntstarting_text_"
    fi
    }
Opts.Apps.List.IsNtStarting.Init

Opts.Apps.List.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_list_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isstarted_flag_=false
    [[ $_obj_opts_apps_list_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstarted_flag_
    }
Opts.Apps.List.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_list_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isstarted_enable_=false
    [[ $_obj_opts_apps_list_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstarted_enable_
    }
Opts.Apps.List.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isstarted_changes_flag_=false
    }
Opts.Apps.List.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_list_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isstarted_enable_=true
    [[ $_obj_opts_apps_list_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstarted_enable_
    }
Opts.Apps.List.IsStarted.Init()
    {
    _obj_opts_apps_list_isstarted_text_=''
    _obj_opts_apps_list_isstarted_flag_=false
    _obj_opts_apps_list_isstarted_changes_flag_=true
    _obj_opts_apps_list_isstarted_enable_=false
    }
Opts.Apps.List.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.List.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.List.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_list_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.List.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_list_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.List.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_list_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isstarted_changes_flag_=true
    }
Opts.Apps.List.IsStarted.Set()
    {
    [[ $_obj_opts_apps_list_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isstarted_flag_=true
    [[ $_obj_opts_apps_list_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstarted_flag_
    }
Opts.Apps.List.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isstarted_text_"
    fi
    }
Opts.Apps.List.IsStarted.Init

Opts.Apps.List.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_list_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntstarted_flag_=false
    [[ $_obj_opts_apps_list_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstarted_flag_
    }
Opts.Apps.List.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_list_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isntstarted_enable_=false
    [[ $_obj_opts_apps_list_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstarted_enable_
    }
Opts.Apps.List.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntstarted_changes_flag_=false
    }
Opts.Apps.List.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_list_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isntstarted_enable_=true
    [[ $_obj_opts_apps_list_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstarted_enable_
    }
Opts.Apps.List.IsNtStarted.Init()
    {
    _obj_opts_apps_list_isntstarted_text_=''
    _obj_opts_apps_list_isntstarted_flag_=false
    _obj_opts_apps_list_isntstarted_changes_flag_=true
    _obj_opts_apps_list_isntstarted_enable_=false
    }
Opts.Apps.List.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.List.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.List.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_list_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.List.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_list_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.List.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_list_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntstarted_changes_flag_=true
    }
Opts.Apps.List.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_list_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntstarted_flag_=true
    [[ $_obj_opts_apps_list_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstarted_flag_
    }
Opts.Apps.List.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isntstarted_text_"
    fi
    }
Opts.Apps.List.IsNtStarted.Init

Opts.Apps.List.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_list_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isstopping_flag_=false
    [[ $_obj_opts_apps_list_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstopping_flag_
    }
Opts.Apps.List.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_list_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isstopping_enable_=false
    [[ $_obj_opts_apps_list_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstopping_enable_
    }
Opts.Apps.List.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isstopping_changes_flag_=false
    }
Opts.Apps.List.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_list_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isstopping_enable_=true
    [[ $_obj_opts_apps_list_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstopping_enable_
    }
Opts.Apps.List.IsStopping.Init()
    {
    _obj_opts_apps_list_isstopping_text_=''
    _obj_opts_apps_list_isstopping_flag_=false
    _obj_opts_apps_list_isstopping_changes_flag_=true
    _obj_opts_apps_list_isstopping_enable_=false
    }
Opts.Apps.List.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.List.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.List.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_list_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.List.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_list_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.List.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_list_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isstopping_changes_flag_=true
    }
Opts.Apps.List.IsStopping.Set()
    {
    [[ $_obj_opts_apps_list_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isstopping_flag_=true
    [[ $_obj_opts_apps_list_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstopping_flag_
    }
Opts.Apps.List.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isstopping_text_"
    fi
    }
Opts.Apps.List.IsStopping.Init

Opts.Apps.List.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_list_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntstopping_flag_=false
    [[ $_obj_opts_apps_list_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstopping_flag_
    }
Opts.Apps.List.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_list_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isntstopping_enable_=false
    [[ $_obj_opts_apps_list_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstopping_enable_
    }
Opts.Apps.List.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntstopping_changes_flag_=false
    }
Opts.Apps.List.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_list_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isntstopping_enable_=true
    [[ $_obj_opts_apps_list_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstopping_enable_
    }
Opts.Apps.List.IsNtStopping.Init()
    {
    _obj_opts_apps_list_isntstopping_text_=''
    _obj_opts_apps_list_isntstopping_flag_=false
    _obj_opts_apps_list_isntstopping_changes_flag_=true
    _obj_opts_apps_list_isntstopping_enable_=false
    }
Opts.Apps.List.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.List.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.List.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_list_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.List.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_list_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.List.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_list_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntstopping_changes_flag_=true
    }
Opts.Apps.List.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_list_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntstopping_flag_=true
    [[ $_obj_opts_apps_list_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstopping_flag_
    }
Opts.Apps.List.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isntstopping_text_"
    fi
    }
Opts.Apps.List.IsNtStopping.Init

Opts.Apps.List.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_list_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isstopped_flag_=false
    [[ $_obj_opts_apps_list_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstopped_flag_
    }
Opts.Apps.List.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_list_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isstopped_enable_=false
    [[ $_obj_opts_apps_list_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstopped_enable_
    }
Opts.Apps.List.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isstopped_changes_flag_=false
    }
Opts.Apps.List.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_list_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isstopped_enable_=true
    [[ $_obj_opts_apps_list_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstopped_enable_
    }
Opts.Apps.List.IsStopped.Init()
    {
    _obj_opts_apps_list_isstopped_text_=''
    _obj_opts_apps_list_isstopped_flag_=false
    _obj_opts_apps_list_isstopped_changes_flag_=true
    _obj_opts_apps_list_isstopped_enable_=false
    }
Opts.Apps.List.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.List.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.List.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_list_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.List.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_list_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.List.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_list_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isstopped_changes_flag_=true
    }
Opts.Apps.List.IsStopped.Set()
    {
    [[ $_obj_opts_apps_list_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isstopped_flag_=true
    [[ $_obj_opts_apps_list_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isstopped_flag_
    }
Opts.Apps.List.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isstopped_text_"
    fi
    }
Opts.Apps.List.IsStopped.Init

Opts.Apps.List.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_list_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntstopped_flag_=false
    [[ $_obj_opts_apps_list_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstopped_flag_
    }
Opts.Apps.List.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_list_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isntstopped_enable_=false
    [[ $_obj_opts_apps_list_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstopped_enable_
    }
Opts.Apps.List.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntstopped_changes_flag_=false
    }
Opts.Apps.List.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_list_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isntstopped_enable_=true
    [[ $_obj_opts_apps_list_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstopped_enable_
    }
Opts.Apps.List.IsNtStopped.Init()
    {
    _obj_opts_apps_list_isntstopped_text_=''
    _obj_opts_apps_list_isntstopped_flag_=false
    _obj_opts_apps_list_isntstopped_changes_flag_=true
    _obj_opts_apps_list_isntstopped_enable_=false
    }
Opts.Apps.List.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.List.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.List.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_list_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.List.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_list_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.List.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_list_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntstopped_changes_flag_=true
    }
Opts.Apps.List.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_list_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntstopped_flag_=true
    [[ $_obj_opts_apps_list_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntstopped_flag_
    }
Opts.Apps.List.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isntstopped_text_"
    fi
    }
Opts.Apps.List.IsNtStopped.Init

Opts.Apps.List.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_list_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isrestarting_flag_=false
    [[ $_obj_opts_apps_list_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isrestarting_flag_
    }
Opts.Apps.List.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_list_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isrestarting_enable_=false
    [[ $_obj_opts_apps_list_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isrestarting_enable_
    }
Opts.Apps.List.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isrestarting_changes_flag_=false
    }
Opts.Apps.List.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_list_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isrestarting_enable_=true
    [[ $_obj_opts_apps_list_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isrestarting_enable_
    }
Opts.Apps.List.IsRestarting.Init()
    {
    _obj_opts_apps_list_isrestarting_text_=''
    _obj_opts_apps_list_isrestarting_flag_=false
    _obj_opts_apps_list_isrestarting_changes_flag_=true
    _obj_opts_apps_list_isrestarting_enable_=false
    }
Opts.Apps.List.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.List.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.List.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_list_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.List.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_list_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.List.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_list_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isrestarting_changes_flag_=true
    }
Opts.Apps.List.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_list_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isrestarting_flag_=true
    [[ $_obj_opts_apps_list_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isrestarting_flag_
    }
Opts.Apps.List.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isrestarting_text_"
    fi
    }
Opts.Apps.List.IsRestarting.Init

Opts.Apps.List.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_list_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntrestarting_flag_=false
    [[ $_obj_opts_apps_list_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntrestarting_flag_
    }
Opts.Apps.List.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_list_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_list_isntrestarting_enable_=false
    [[ $_obj_opts_apps_list_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntrestarting_enable_
    }
Opts.Apps.List.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_list_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_list_isntrestarting_changes_flag_=false
    }
Opts.Apps.List.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_list_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_list_isntrestarting_enable_=true
    [[ $_obj_opts_apps_list_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntrestarting_enable_
    }
Opts.Apps.List.IsNtRestarting.Init()
    {
    _obj_opts_apps_list_isntrestarting_text_=''
    _obj_opts_apps_list_isntrestarting_flag_=false
    _obj_opts_apps_list_isntrestarting_changes_flag_=true
    _obj_opts_apps_list_isntrestarting_enable_=false
    }
Opts.Apps.List.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_list_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.List.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_list_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.List.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_list_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.List.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_list_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.List.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_list_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntrestarting_changes_flag_=true
    }
Opts.Apps.List.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_list_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_list_isntrestarting_flag_=true
    [[ $_obj_opts_apps_list_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_list_isntrestarting_flag_
    }
Opts.Apps.List.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_list_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_list_isntrestarting_text_"
    fi
    }
Opts.Apps.List.IsNtRestarting.Init

Opts.Apps.OpBackup.ScAll.Clear()
    {
    [[ $_obj_opts_apps_opbackup_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scall_flag_=false
    [[ $_obj_opts_apps_opbackup_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scall_flag_
    }
Opts.Apps.OpBackup.ScAll.Disable()
    {
    [[ $_obj_opts_apps_opbackup_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scall_enable_=false
    [[ $_obj_opts_apps_opbackup_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scall_enable_
    }
Opts.Apps.OpBackup.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scall_changes_flag_=false
    }
Opts.Apps.OpBackup.ScAll.Enable()
    {
    [[ $_obj_opts_apps_opbackup_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scall_enable_=true
    [[ $_obj_opts_apps_opbackup_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scall_enable_
    }
Opts.Apps.OpBackup.ScAll.Init()
    {
    _obj_opts_apps_opbackup_scall_text_=''
    _obj_opts_apps_opbackup_scall_flag_=false
    _obj_opts_apps_opbackup_scall_changes_flag_=true
    _obj_opts_apps_opbackup_scall_enable_=false
    }
Opts.Apps.OpBackup.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_scall_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_scall_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_scall_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_scall_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scall_changes_flag_=true
    }
Opts.Apps.OpBackup.ScAll.Set()
    {
    [[ $_obj_opts_apps_opbackup_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scall_flag_=true
    [[ $_obj_opts_apps_opbackup_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scall_flag_
    }
Opts.Apps.OpBackup.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_scall_text_"
    fi
    }
Opts.Apps.OpBackup.ScAll.Init

Opts.Apps.OpDownload.ScAll.Clear()
    {
    [[ $_obj_opts_apps_opdownload_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scall_flag_=false
    [[ $_obj_opts_apps_opdownload_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scall_flag_
    }
Opts.Apps.OpDownload.ScAll.Disable()
    {
    [[ $_obj_opts_apps_opdownload_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scall_enable_=false
    [[ $_obj_opts_apps_opdownload_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scall_enable_
    }
Opts.Apps.OpDownload.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scall_changes_flag_=false
    }
Opts.Apps.OpDownload.ScAll.Enable()
    {
    [[ $_obj_opts_apps_opdownload_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scall_enable_=true
    [[ $_obj_opts_apps_opdownload_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scall_enable_
    }
Opts.Apps.OpDownload.ScAll.Init()
    {
    _obj_opts_apps_opdownload_scall_text_=''
    _obj_opts_apps_opdownload_scall_flag_=false
    _obj_opts_apps_opdownload_scall_changes_flag_=true
    _obj_opts_apps_opdownload_scall_enable_=false
    }
Opts.Apps.OpDownload.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_scall_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_scall_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_scall_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_scall_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scall_changes_flag_=true
    }
Opts.Apps.OpDownload.ScAll.Set()
    {
    [[ $_obj_opts_apps_opdownload_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scall_flag_=true
    [[ $_obj_opts_apps_opdownload_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scall_flag_
    }
Opts.Apps.OpDownload.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_scall_text_"
    fi
    }
Opts.Apps.OpDownload.ScAll.Init

Opts.Apps.OpInstall.ScAll.Clear()
    {
    [[ $_obj_opts_apps_opinstall_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scall_flag_=false
    [[ $_obj_opts_apps_opinstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scall_flag_
    }
Opts.Apps.OpInstall.ScAll.Disable()
    {
    [[ $_obj_opts_apps_opinstall_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scall_enable_=false
    [[ $_obj_opts_apps_opinstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scall_enable_
    }
Opts.Apps.OpInstall.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scall_changes_flag_=false
    }
Opts.Apps.OpInstall.ScAll.Enable()
    {
    [[ $_obj_opts_apps_opinstall_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scall_enable_=true
    [[ $_obj_opts_apps_opinstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scall_enable_
    }
Opts.Apps.OpInstall.ScAll.Init()
    {
    _obj_opts_apps_opinstall_scall_text_=''
    _obj_opts_apps_opinstall_scall_flag_=false
    _obj_opts_apps_opinstall_scall_changes_flag_=true
    _obj_opts_apps_opinstall_scall_enable_=false
    }
Opts.Apps.OpInstall.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_scall_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_scall_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_scall_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_scall_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scall_changes_flag_=true
    }
Opts.Apps.OpInstall.ScAll.Set()
    {
    [[ $_obj_opts_apps_opinstall_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scall_flag_=true
    [[ $_obj_opts_apps_opinstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scall_flag_
    }
Opts.Apps.OpInstall.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_scall_text_"
    fi
    }
Opts.Apps.OpInstall.ScAll.Init

Opts.Apps.OpRebuild.ScAll.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scall_flag_=false
    [[ $_obj_opts_apps_oprebuild_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scall_flag_
    }
Opts.Apps.OpRebuild.ScAll.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scall_enable_=false
    [[ $_obj_opts_apps_oprebuild_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scall_enable_
    }
Opts.Apps.OpRebuild.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scall_changes_flag_=false
    }
Opts.Apps.OpRebuild.ScAll.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scall_enable_=true
    [[ $_obj_opts_apps_oprebuild_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scall_enable_
    }
Opts.Apps.OpRebuild.ScAll.Init()
    {
    _obj_opts_apps_oprebuild_scall_text_=''
    _obj_opts_apps_oprebuild_scall_flag_=false
    _obj_opts_apps_oprebuild_scall_changes_flag_=true
    _obj_opts_apps_oprebuild_scall_enable_=false
    }
Opts.Apps.OpRebuild.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_scall_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_scall_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_scall_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_scall_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scall_changes_flag_=true
    }
Opts.Apps.OpRebuild.ScAll.Set()
    {
    [[ $_obj_opts_apps_oprebuild_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scall_flag_=true
    [[ $_obj_opts_apps_oprebuild_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scall_flag_
    }
Opts.Apps.OpRebuild.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_scall_text_"
    fi
    }
Opts.Apps.OpRebuild.ScAll.Init

Opts.Apps.OpReinstall.ScAll.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scall_flag_=false
    [[ $_obj_opts_apps_opreinstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scall_flag_
    }
Opts.Apps.OpReinstall.ScAll.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scall_enable_=false
    [[ $_obj_opts_apps_opreinstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scall_enable_
    }
Opts.Apps.OpReinstall.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scall_changes_flag_=false
    }
Opts.Apps.OpReinstall.ScAll.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scall_enable_=true
    [[ $_obj_opts_apps_opreinstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scall_enable_
    }
Opts.Apps.OpReinstall.ScAll.Init()
    {
    _obj_opts_apps_opreinstall_scall_text_=''
    _obj_opts_apps_opreinstall_scall_flag_=false
    _obj_opts_apps_opreinstall_scall_changes_flag_=true
    _obj_opts_apps_opreinstall_scall_enable_=false
    }
Opts.Apps.OpReinstall.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_scall_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_scall_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_scall_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_scall_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scall_changes_flag_=true
    }
Opts.Apps.OpReinstall.ScAll.Set()
    {
    [[ $_obj_opts_apps_opreinstall_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scall_flag_=true
    [[ $_obj_opts_apps_opreinstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scall_flag_
    }
Opts.Apps.OpReinstall.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_scall_text_"
    fi
    }
Opts.Apps.OpReinstall.ScAll.Init

Opts.Apps.OpRestart.ScAll.Clear()
    {
    [[ $_obj_opts_apps_oprestart_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scall_flag_=false
    [[ $_obj_opts_apps_oprestart_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scall_flag_
    }
Opts.Apps.OpRestart.ScAll.Disable()
    {
    [[ $_obj_opts_apps_oprestart_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scall_enable_=false
    [[ $_obj_opts_apps_oprestart_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scall_enable_
    }
Opts.Apps.OpRestart.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scall_changes_flag_=false
    }
Opts.Apps.OpRestart.ScAll.Enable()
    {
    [[ $_obj_opts_apps_oprestart_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scall_enable_=true
    [[ $_obj_opts_apps_oprestart_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scall_enable_
    }
Opts.Apps.OpRestart.ScAll.Init()
    {
    _obj_opts_apps_oprestart_scall_text_=''
    _obj_opts_apps_oprestart_scall_flag_=false
    _obj_opts_apps_oprestart_scall_changes_flag_=true
    _obj_opts_apps_oprestart_scall_enable_=false
    }
Opts.Apps.OpRestart.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_scall_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_scall_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_scall_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_scall_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scall_changes_flag_=true
    }
Opts.Apps.OpRestart.ScAll.Set()
    {
    [[ $_obj_opts_apps_oprestart_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scall_flag_=true
    [[ $_obj_opts_apps_oprestart_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scall_flag_
    }
Opts.Apps.OpRestart.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_scall_text_"
    fi
    }
Opts.Apps.OpRestart.ScAll.Init

Opts.Apps.OpRestore.ScAll.Clear()
    {
    [[ $_obj_opts_apps_oprestore_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scall_flag_=false
    [[ $_obj_opts_apps_oprestore_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scall_flag_
    }
Opts.Apps.OpRestore.ScAll.Disable()
    {
    [[ $_obj_opts_apps_oprestore_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scall_enable_=false
    [[ $_obj_opts_apps_oprestore_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scall_enable_
    }
Opts.Apps.OpRestore.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scall_changes_flag_=false
    }
Opts.Apps.OpRestore.ScAll.Enable()
    {
    [[ $_obj_opts_apps_oprestore_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scall_enable_=true
    [[ $_obj_opts_apps_oprestore_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scall_enable_
    }
Opts.Apps.OpRestore.ScAll.Init()
    {
    _obj_opts_apps_oprestore_scall_text_=''
    _obj_opts_apps_oprestore_scall_flag_=false
    _obj_opts_apps_oprestore_scall_changes_flag_=true
    _obj_opts_apps_oprestore_scall_enable_=false
    }
Opts.Apps.OpRestore.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_scall_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_scall_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_scall_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_scall_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scall_changes_flag_=true
    }
Opts.Apps.OpRestore.ScAll.Set()
    {
    [[ $_obj_opts_apps_oprestore_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scall_flag_=true
    [[ $_obj_opts_apps_oprestore_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scall_flag_
    }
Opts.Apps.OpRestore.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_scall_text_"
    fi
    }
Opts.Apps.OpRestore.ScAll.Init

Opts.Apps.OpStart.ScAll.Clear()
    {
    [[ $_obj_opts_apps_opstart_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scall_flag_=false
    [[ $_obj_opts_apps_opstart_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scall_flag_
    }
Opts.Apps.OpStart.ScAll.Disable()
    {
    [[ $_obj_opts_apps_opstart_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_scall_enable_=false
    [[ $_obj_opts_apps_opstart_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scall_enable_
    }
Opts.Apps.OpStart.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scall_changes_flag_=false
    }
Opts.Apps.OpStart.ScAll.Enable()
    {
    [[ $_obj_opts_apps_opstart_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_scall_enable_=true
    [[ $_obj_opts_apps_opstart_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scall_enable_
    }
Opts.Apps.OpStart.ScAll.Init()
    {
    _obj_opts_apps_opstart_scall_text_=''
    _obj_opts_apps_opstart_scall_flag_=false
    _obj_opts_apps_opstart_scall_changes_flag_=true
    _obj_opts_apps_opstart_scall_enable_=false
    }
Opts.Apps.OpStart.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_scall_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_scall_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_opstart_scall_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_opstart_scall_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scall_changes_flag_=true
    }
Opts.Apps.OpStart.ScAll.Set()
    {
    [[ $_obj_opts_apps_opstart_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scall_flag_=true
    [[ $_obj_opts_apps_opstart_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scall_flag_
    }
Opts.Apps.OpStart.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_scall_text_"
    fi
    }
Opts.Apps.OpStart.ScAll.Init

Opts.Apps.OpStop.ScAll.Clear()
    {
    [[ $_obj_opts_apps_opstop_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scall_flag_=false
    [[ $_obj_opts_apps_opstop_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scall_flag_
    }
Opts.Apps.OpStop.ScAll.Disable()
    {
    [[ $_obj_opts_apps_opstop_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_scall_enable_=false
    [[ $_obj_opts_apps_opstop_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scall_enable_
    }
Opts.Apps.OpStop.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scall_changes_flag_=false
    }
Opts.Apps.OpStop.ScAll.Enable()
    {
    [[ $_obj_opts_apps_opstop_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_scall_enable_=true
    [[ $_obj_opts_apps_opstop_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scall_enable_
    }
Opts.Apps.OpStop.ScAll.Init()
    {
    _obj_opts_apps_opstop_scall_text_=''
    _obj_opts_apps_opstop_scall_flag_=false
    _obj_opts_apps_opstop_scall_changes_flag_=true
    _obj_opts_apps_opstop_scall_enable_=false
    }
Opts.Apps.OpStop.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_scall_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_scall_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_opstop_scall_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_opstop_scall_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scall_changes_flag_=true
    }
Opts.Apps.OpStop.ScAll.Set()
    {
    [[ $_obj_opts_apps_opstop_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scall_flag_=true
    [[ $_obj_opts_apps_opstop_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scall_flag_
    }
Opts.Apps.OpStop.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_scall_text_"
    fi
    }
Opts.Apps.OpStop.ScAll.Init

Opts.Apps.OpUninstall.ScAll.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scall_flag_=false
    [[ $_obj_opts_apps_opuninstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scall_flag_
    }
Opts.Apps.OpUninstall.ScAll.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scall_enable_=false
    [[ $_obj_opts_apps_opuninstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scall_enable_
    }
Opts.Apps.OpUninstall.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scall_changes_flag_=false
    }
Opts.Apps.OpUninstall.ScAll.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scall_enable_=true
    [[ $_obj_opts_apps_opuninstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scall_enable_
    }
Opts.Apps.OpUninstall.ScAll.Init()
    {
    _obj_opts_apps_opuninstall_scall_text_=''
    _obj_opts_apps_opuninstall_scall_flag_=false
    _obj_opts_apps_opuninstall_scall_changes_flag_=true
    _obj_opts_apps_opuninstall_scall_enable_=false
    }
Opts.Apps.OpUninstall.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_scall_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_scall_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_scall_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_scall_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scall_changes_flag_=true
    }
Opts.Apps.OpUninstall.ScAll.Set()
    {
    [[ $_obj_opts_apps_opuninstall_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scall_flag_=true
    [[ $_obj_opts_apps_opuninstall_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scall_flag_
    }
Opts.Apps.OpUninstall.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_scall_text_"
    fi
    }
Opts.Apps.OpUninstall.ScAll.Init

Opts.Apps.OpUpgrade.ScAll.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_scall_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scall_flag_=false
    [[ $_obj_opts_apps_opupgrade_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scall_flag_
    }
Opts.Apps.OpUpgrade.ScAll.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_scall_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scall_enable_=false
    [[ $_obj_opts_apps_opupgrade_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scall_enable_
    }
Opts.Apps.OpUpgrade.ScAll.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scall_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scall_changes_flag_=false
    }
Opts.Apps.OpUpgrade.ScAll.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_scall_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scall_enable_=true
    [[ $_obj_opts_apps_opupgrade_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scall_enable_
    }
Opts.Apps.OpUpgrade.ScAll.Init()
    {
    _obj_opts_apps_opupgrade_scall_text_=''
    _obj_opts_apps_opupgrade_scall_flag_=false
    _obj_opts_apps_opupgrade_scall_changes_flag_=true
    _obj_opts_apps_opupgrade_scall_enable_=false
    }
Opts.Apps.OpUpgrade.ScAll.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_scall_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScAll.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_scall_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScAll.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_scall_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScAll.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_scall_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScAll.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scall_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scall_changes_flag_=true
    }
Opts.Apps.OpUpgrade.ScAll.Set()
    {
    [[ $_obj_opts_apps_opupgrade_scall_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scall_flag_=true
    [[ $_obj_opts_apps_opupgrade_scall_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scall_flag_
    }
Opts.Apps.OpUpgrade.ScAll.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_scall_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_scall_text_"
    fi
    }
Opts.Apps.OpUpgrade.ScAll.Init

Opts.Apps.OpBackup.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_opbackup_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scdependent_flag_=false
    [[ $_obj_opts_apps_opbackup_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scdependent_flag_
    }
Opts.Apps.OpBackup.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_opbackup_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scdependent_enable_=false
    [[ $_obj_opts_apps_opbackup_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scdependent_enable_
    }
Opts.Apps.OpBackup.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scdependent_changes_flag_=false
    }
Opts.Apps.OpBackup.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_opbackup_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scdependent_enable_=true
    [[ $_obj_opts_apps_opbackup_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scdependent_enable_
    }
Opts.Apps.OpBackup.ScDependent.Init()
    {
    _obj_opts_apps_opbackup_scdependent_text_=''
    _obj_opts_apps_opbackup_scdependent_flag_=false
    _obj_opts_apps_opbackup_scdependent_changes_flag_=true
    _obj_opts_apps_opbackup_scdependent_enable_=false
    }
Opts.Apps.OpBackup.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scdependent_changes_flag_=true
    }
Opts.Apps.OpBackup.ScDependent.Set()
    {
    [[ $_obj_opts_apps_opbackup_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scdependent_flag_=true
    [[ $_obj_opts_apps_opbackup_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scdependent_flag_
    }
Opts.Apps.OpBackup.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_scdependent_text_"
    fi
    }
Opts.Apps.OpBackup.ScDependent.Init

Opts.Apps.OpDownload.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_opdownload_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scdependent_flag_=false
    [[ $_obj_opts_apps_opdownload_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scdependent_flag_
    }
Opts.Apps.OpDownload.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_opdownload_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scdependent_enable_=false
    [[ $_obj_opts_apps_opdownload_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scdependent_enable_
    }
Opts.Apps.OpDownload.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scdependent_changes_flag_=false
    }
Opts.Apps.OpDownload.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_opdownload_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scdependent_enable_=true
    [[ $_obj_opts_apps_opdownload_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scdependent_enable_
    }
Opts.Apps.OpDownload.ScDependent.Init()
    {
    _obj_opts_apps_opdownload_scdependent_text_=''
    _obj_opts_apps_opdownload_scdependent_flag_=false
    _obj_opts_apps_opdownload_scdependent_changes_flag_=true
    _obj_opts_apps_opdownload_scdependent_enable_=false
    }
Opts.Apps.OpDownload.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scdependent_changes_flag_=true
    }
Opts.Apps.OpDownload.ScDependent.Set()
    {
    [[ $_obj_opts_apps_opdownload_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scdependent_flag_=true
    [[ $_obj_opts_apps_opdownload_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scdependent_flag_
    }
Opts.Apps.OpDownload.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_scdependent_text_"
    fi
    }
Opts.Apps.OpDownload.ScDependent.Init

Opts.Apps.OpInstall.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_opinstall_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scdependent_flag_=false
    [[ $_obj_opts_apps_opinstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scdependent_flag_
    }
Opts.Apps.OpInstall.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_opinstall_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scdependent_enable_=false
    [[ $_obj_opts_apps_opinstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scdependent_enable_
    }
Opts.Apps.OpInstall.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scdependent_changes_flag_=false
    }
Opts.Apps.OpInstall.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_opinstall_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scdependent_enable_=true
    [[ $_obj_opts_apps_opinstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scdependent_enable_
    }
Opts.Apps.OpInstall.ScDependent.Init()
    {
    _obj_opts_apps_opinstall_scdependent_text_=''
    _obj_opts_apps_opinstall_scdependent_flag_=false
    _obj_opts_apps_opinstall_scdependent_changes_flag_=true
    _obj_opts_apps_opinstall_scdependent_enable_=false
    }
Opts.Apps.OpInstall.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scdependent_changes_flag_=true
    }
Opts.Apps.OpInstall.ScDependent.Set()
    {
    [[ $_obj_opts_apps_opinstall_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scdependent_flag_=true
    [[ $_obj_opts_apps_opinstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scdependent_flag_
    }
Opts.Apps.OpInstall.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_scdependent_text_"
    fi
    }
Opts.Apps.OpInstall.ScDependent.Init

Opts.Apps.OpRebuild.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scdependent_flag_=false
    [[ $_obj_opts_apps_oprebuild_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scdependent_flag_
    }
Opts.Apps.OpRebuild.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scdependent_enable_=false
    [[ $_obj_opts_apps_oprebuild_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scdependent_enable_
    }
Opts.Apps.OpRebuild.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scdependent_changes_flag_=false
    }
Opts.Apps.OpRebuild.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scdependent_enable_=true
    [[ $_obj_opts_apps_oprebuild_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scdependent_enable_
    }
Opts.Apps.OpRebuild.ScDependent.Init()
    {
    _obj_opts_apps_oprebuild_scdependent_text_=''
    _obj_opts_apps_oprebuild_scdependent_flag_=false
    _obj_opts_apps_oprebuild_scdependent_changes_flag_=true
    _obj_opts_apps_oprebuild_scdependent_enable_=false
    }
Opts.Apps.OpRebuild.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scdependent_changes_flag_=true
    }
Opts.Apps.OpRebuild.ScDependent.Set()
    {
    [[ $_obj_opts_apps_oprebuild_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scdependent_flag_=true
    [[ $_obj_opts_apps_oprebuild_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scdependent_flag_
    }
Opts.Apps.OpRebuild.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_scdependent_text_"
    fi
    }
Opts.Apps.OpRebuild.ScDependent.Init

Opts.Apps.OpReinstall.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scdependent_flag_=false
    [[ $_obj_opts_apps_opreinstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scdependent_flag_
    }
Opts.Apps.OpReinstall.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scdependent_enable_=false
    [[ $_obj_opts_apps_opreinstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scdependent_enable_
    }
Opts.Apps.OpReinstall.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scdependent_changes_flag_=false
    }
Opts.Apps.OpReinstall.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scdependent_enable_=true
    [[ $_obj_opts_apps_opreinstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scdependent_enable_
    }
Opts.Apps.OpReinstall.ScDependent.Init()
    {
    _obj_opts_apps_opreinstall_scdependent_text_=''
    _obj_opts_apps_opreinstall_scdependent_flag_=false
    _obj_opts_apps_opreinstall_scdependent_changes_flag_=true
    _obj_opts_apps_opreinstall_scdependent_enable_=false
    }
Opts.Apps.OpReinstall.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scdependent_changes_flag_=true
    }
Opts.Apps.OpReinstall.ScDependent.Set()
    {
    [[ $_obj_opts_apps_opreinstall_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scdependent_flag_=true
    [[ $_obj_opts_apps_opreinstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scdependent_flag_
    }
Opts.Apps.OpReinstall.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_scdependent_text_"
    fi
    }
Opts.Apps.OpReinstall.ScDependent.Init

Opts.Apps.OpRestart.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_oprestart_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scdependent_flag_=false
    [[ $_obj_opts_apps_oprestart_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scdependent_flag_
    }
Opts.Apps.OpRestart.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_oprestart_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scdependent_enable_=false
    [[ $_obj_opts_apps_oprestart_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scdependent_enable_
    }
Opts.Apps.OpRestart.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scdependent_changes_flag_=false
    }
Opts.Apps.OpRestart.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_oprestart_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scdependent_enable_=true
    [[ $_obj_opts_apps_oprestart_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scdependent_enable_
    }
Opts.Apps.OpRestart.ScDependent.Init()
    {
    _obj_opts_apps_oprestart_scdependent_text_=''
    _obj_opts_apps_oprestart_scdependent_flag_=false
    _obj_opts_apps_oprestart_scdependent_changes_flag_=true
    _obj_opts_apps_oprestart_scdependent_enable_=false
    }
Opts.Apps.OpRestart.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scdependent_changes_flag_=true
    }
Opts.Apps.OpRestart.ScDependent.Set()
    {
    [[ $_obj_opts_apps_oprestart_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scdependent_flag_=true
    [[ $_obj_opts_apps_oprestart_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scdependent_flag_
    }
Opts.Apps.OpRestart.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_scdependent_text_"
    fi
    }
Opts.Apps.OpRestart.ScDependent.Init

Opts.Apps.OpRestore.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_oprestore_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scdependent_flag_=false
    [[ $_obj_opts_apps_oprestore_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scdependent_flag_
    }
Opts.Apps.OpRestore.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_oprestore_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scdependent_enable_=false
    [[ $_obj_opts_apps_oprestore_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scdependent_enable_
    }
Opts.Apps.OpRestore.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scdependent_changes_flag_=false
    }
Opts.Apps.OpRestore.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_oprestore_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scdependent_enable_=true
    [[ $_obj_opts_apps_oprestore_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scdependent_enable_
    }
Opts.Apps.OpRestore.ScDependent.Init()
    {
    _obj_opts_apps_oprestore_scdependent_text_=''
    _obj_opts_apps_oprestore_scdependent_flag_=false
    _obj_opts_apps_oprestore_scdependent_changes_flag_=true
    _obj_opts_apps_oprestore_scdependent_enable_=false
    }
Opts.Apps.OpRestore.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scdependent_changes_flag_=true
    }
Opts.Apps.OpRestore.ScDependent.Set()
    {
    [[ $_obj_opts_apps_oprestore_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scdependent_flag_=true
    [[ $_obj_opts_apps_oprestore_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scdependent_flag_
    }
Opts.Apps.OpRestore.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_scdependent_text_"
    fi
    }
Opts.Apps.OpRestore.ScDependent.Init

Opts.Apps.OpStart.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_opstart_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scdependent_flag_=false
    [[ $_obj_opts_apps_opstart_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scdependent_flag_
    }
Opts.Apps.OpStart.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_opstart_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_scdependent_enable_=false
    [[ $_obj_opts_apps_opstart_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scdependent_enable_
    }
Opts.Apps.OpStart.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scdependent_changes_flag_=false
    }
Opts.Apps.OpStart.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_opstart_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_scdependent_enable_=true
    [[ $_obj_opts_apps_opstart_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scdependent_enable_
    }
Opts.Apps.OpStart.ScDependent.Init()
    {
    _obj_opts_apps_opstart_scdependent_text_=''
    _obj_opts_apps_opstart_scdependent_flag_=false
    _obj_opts_apps_opstart_scdependent_changes_flag_=true
    _obj_opts_apps_opstart_scdependent_enable_=false
    }
Opts.Apps.OpStart.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_opstart_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_opstart_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scdependent_changes_flag_=true
    }
Opts.Apps.OpStart.ScDependent.Set()
    {
    [[ $_obj_opts_apps_opstart_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scdependent_flag_=true
    [[ $_obj_opts_apps_opstart_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scdependent_flag_
    }
Opts.Apps.OpStart.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_scdependent_text_"
    fi
    }
Opts.Apps.OpStart.ScDependent.Init

Opts.Apps.OpStop.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_opstop_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scdependent_flag_=false
    [[ $_obj_opts_apps_opstop_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scdependent_flag_
    }
Opts.Apps.OpStop.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_opstop_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_scdependent_enable_=false
    [[ $_obj_opts_apps_opstop_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scdependent_enable_
    }
Opts.Apps.OpStop.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scdependent_changes_flag_=false
    }
Opts.Apps.OpStop.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_opstop_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_scdependent_enable_=true
    [[ $_obj_opts_apps_opstop_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scdependent_enable_
    }
Opts.Apps.OpStop.ScDependent.Init()
    {
    _obj_opts_apps_opstop_scdependent_text_=''
    _obj_opts_apps_opstop_scdependent_flag_=false
    _obj_opts_apps_opstop_scdependent_changes_flag_=true
    _obj_opts_apps_opstop_scdependent_enable_=false
    }
Opts.Apps.OpStop.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_opstop_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_opstop_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scdependent_changes_flag_=true
    }
Opts.Apps.OpStop.ScDependent.Set()
    {
    [[ $_obj_opts_apps_opstop_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scdependent_flag_=true
    [[ $_obj_opts_apps_opstop_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scdependent_flag_
    }
Opts.Apps.OpStop.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_scdependent_text_"
    fi
    }
Opts.Apps.OpStop.ScDependent.Init

Opts.Apps.OpUninstall.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scdependent_flag_=false
    [[ $_obj_opts_apps_opuninstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scdependent_flag_
    }
Opts.Apps.OpUninstall.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scdependent_enable_=false
    [[ $_obj_opts_apps_opuninstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scdependent_enable_
    }
Opts.Apps.OpUninstall.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scdependent_changes_flag_=false
    }
Opts.Apps.OpUninstall.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scdependent_enable_=true
    [[ $_obj_opts_apps_opuninstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scdependent_enable_
    }
Opts.Apps.OpUninstall.ScDependent.Init()
    {
    _obj_opts_apps_opuninstall_scdependent_text_=''
    _obj_opts_apps_opuninstall_scdependent_flag_=false
    _obj_opts_apps_opuninstall_scdependent_changes_flag_=true
    _obj_opts_apps_opuninstall_scdependent_enable_=false
    }
Opts.Apps.OpUninstall.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scdependent_changes_flag_=true
    }
Opts.Apps.OpUninstall.ScDependent.Set()
    {
    [[ $_obj_opts_apps_opuninstall_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scdependent_flag_=true
    [[ $_obj_opts_apps_opuninstall_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scdependent_flag_
    }
Opts.Apps.OpUninstall.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_scdependent_text_"
    fi
    }
Opts.Apps.OpUninstall.ScDependent.Init

Opts.Apps.OpUpgrade.ScDependent.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_scdependent_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scdependent_flag_=false
    [[ $_obj_opts_apps_opupgrade_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scdependent_flag_
    }
Opts.Apps.OpUpgrade.ScDependent.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_scdependent_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scdependent_enable_=false
    [[ $_obj_opts_apps_opupgrade_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scdependent_enable_
    }
Opts.Apps.OpUpgrade.ScDependent.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scdependent_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scdependent_changes_flag_=false
    }
Opts.Apps.OpUpgrade.ScDependent.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_scdependent_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scdependent_enable_=true
    [[ $_obj_opts_apps_opupgrade_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scdependent_enable_
    }
Opts.Apps.OpUpgrade.ScDependent.Init()
    {
    _obj_opts_apps_opupgrade_scdependent_text_=''
    _obj_opts_apps_opupgrade_scdependent_flag_=false
    _obj_opts_apps_opupgrade_scdependent_changes_flag_=true
    _obj_opts_apps_opupgrade_scdependent_enable_=false
    }
Opts.Apps.OpUpgrade.ScDependent.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_scdependent_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScDependent.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_scdependent_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScDependent.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_scdependent_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScDependent.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_scdependent_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScDependent.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scdependent_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scdependent_changes_flag_=true
    }
Opts.Apps.OpUpgrade.ScDependent.Set()
    {
    [[ $_obj_opts_apps_opupgrade_scdependent_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scdependent_flag_=true
    [[ $_obj_opts_apps_opupgrade_scdependent_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scdependent_flag_
    }
Opts.Apps.OpUpgrade.ScDependent.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_scdependent_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_scdependent_text_"
    fi
    }
Opts.Apps.OpUpgrade.ScDependent.Init

Opts.Apps.OpBackup.ScNames.Clear()
    {
    [[ $_obj_opts_apps_opbackup_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scnames_flag_=false
    [[ $_obj_opts_apps_opbackup_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scnames_flag_
    }
Opts.Apps.OpBackup.ScNames.Disable()
    {
    [[ $_obj_opts_apps_opbackup_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scnames_enable_=false
    [[ $_obj_opts_apps_opbackup_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scnames_enable_
    }
Opts.Apps.OpBackup.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scnames_changes_flag_=false
    }
Opts.Apps.OpBackup.ScNames.Enable()
    {
    [[ $_obj_opts_apps_opbackup_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scnames_enable_=true
    [[ $_obj_opts_apps_opbackup_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scnames_enable_
    }
Opts.Apps.OpBackup.ScNames.Init()
    {
    _obj_opts_apps_opbackup_scnames_text_=''
    _obj_opts_apps_opbackup_scnames_flag_=false
    _obj_opts_apps_opbackup_scnames_changes_flag_=true
    _obj_opts_apps_opbackup_scnames_enable_=false
    }
Opts.Apps.OpBackup.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_scnames_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_scnames_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_scnames_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_scnames_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scnames_changes_flag_=true
    }
Opts.Apps.OpBackup.ScNames.Set()
    {
    [[ $_obj_opts_apps_opbackup_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scnames_flag_=true
    [[ $_obj_opts_apps_opbackup_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scnames_flag_
    }
Opts.Apps.OpBackup.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_scnames_text_"
    fi
    }
Opts.Apps.OpBackup.ScNames.Init

Opts.Apps.OpDownload.ScNames.Clear()
    {
    [[ $_obj_opts_apps_opdownload_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scnames_flag_=false
    [[ $_obj_opts_apps_opdownload_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scnames_flag_
    }
Opts.Apps.OpDownload.ScNames.Disable()
    {
    [[ $_obj_opts_apps_opdownload_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scnames_enable_=false
    [[ $_obj_opts_apps_opdownload_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scnames_enable_
    }
Opts.Apps.OpDownload.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scnames_changes_flag_=false
    }
Opts.Apps.OpDownload.ScNames.Enable()
    {
    [[ $_obj_opts_apps_opdownload_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scnames_enable_=true
    [[ $_obj_opts_apps_opdownload_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scnames_enable_
    }
Opts.Apps.OpDownload.ScNames.Init()
    {
    _obj_opts_apps_opdownload_scnames_text_=''
    _obj_opts_apps_opdownload_scnames_flag_=false
    _obj_opts_apps_opdownload_scnames_changes_flag_=true
    _obj_opts_apps_opdownload_scnames_enable_=false
    }
Opts.Apps.OpDownload.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_scnames_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_scnames_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_scnames_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_scnames_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scnames_changes_flag_=true
    }
Opts.Apps.OpDownload.ScNames.Set()
    {
    [[ $_obj_opts_apps_opdownload_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scnames_flag_=true
    [[ $_obj_opts_apps_opdownload_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scnames_flag_
    }
Opts.Apps.OpDownload.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_scnames_text_"
    fi
    }
Opts.Apps.OpDownload.ScNames.Init

Opts.Apps.OpInstall.ScNames.Clear()
    {
    [[ $_obj_opts_apps_opinstall_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scnames_flag_=false
    [[ $_obj_opts_apps_opinstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scnames_flag_
    }
Opts.Apps.OpInstall.ScNames.Disable()
    {
    [[ $_obj_opts_apps_opinstall_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scnames_enable_=false
    [[ $_obj_opts_apps_opinstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scnames_enable_
    }
Opts.Apps.OpInstall.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scnames_changes_flag_=false
    }
Opts.Apps.OpInstall.ScNames.Enable()
    {
    [[ $_obj_opts_apps_opinstall_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scnames_enable_=true
    [[ $_obj_opts_apps_opinstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scnames_enable_
    }
Opts.Apps.OpInstall.ScNames.Init()
    {
    _obj_opts_apps_opinstall_scnames_text_=''
    _obj_opts_apps_opinstall_scnames_flag_=false
    _obj_opts_apps_opinstall_scnames_changes_flag_=true
    _obj_opts_apps_opinstall_scnames_enable_=false
    }
Opts.Apps.OpInstall.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_scnames_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_scnames_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_scnames_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_scnames_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scnames_changes_flag_=true
    }
Opts.Apps.OpInstall.ScNames.Set()
    {
    [[ $_obj_opts_apps_opinstall_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scnames_flag_=true
    [[ $_obj_opts_apps_opinstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scnames_flag_
    }
Opts.Apps.OpInstall.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_scnames_text_"
    fi
    }
Opts.Apps.OpInstall.ScNames.Init

Opts.Apps.OpRebuild.ScNames.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scnames_flag_=false
    [[ $_obj_opts_apps_oprebuild_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scnames_flag_
    }
Opts.Apps.OpRebuild.ScNames.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scnames_enable_=false
    [[ $_obj_opts_apps_oprebuild_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scnames_enable_
    }
Opts.Apps.OpRebuild.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scnames_changes_flag_=false
    }
Opts.Apps.OpRebuild.ScNames.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scnames_enable_=true
    [[ $_obj_opts_apps_oprebuild_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scnames_enable_
    }
Opts.Apps.OpRebuild.ScNames.Init()
    {
    _obj_opts_apps_oprebuild_scnames_text_=''
    _obj_opts_apps_oprebuild_scnames_flag_=false
    _obj_opts_apps_oprebuild_scnames_changes_flag_=true
    _obj_opts_apps_oprebuild_scnames_enable_=false
    }
Opts.Apps.OpRebuild.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_scnames_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_scnames_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_scnames_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_scnames_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scnames_changes_flag_=true
    }
Opts.Apps.OpRebuild.ScNames.Set()
    {
    [[ $_obj_opts_apps_oprebuild_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scnames_flag_=true
    [[ $_obj_opts_apps_oprebuild_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scnames_flag_
    }
Opts.Apps.OpRebuild.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_scnames_text_"
    fi
    }
Opts.Apps.OpRebuild.ScNames.Init

Opts.Apps.OpReinstall.ScNames.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scnames_flag_=false
    [[ $_obj_opts_apps_opreinstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scnames_flag_
    }
Opts.Apps.OpReinstall.ScNames.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scnames_enable_=false
    [[ $_obj_opts_apps_opreinstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scnames_enable_
    }
Opts.Apps.OpReinstall.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scnames_changes_flag_=false
    }
Opts.Apps.OpReinstall.ScNames.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scnames_enable_=true
    [[ $_obj_opts_apps_opreinstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scnames_enable_
    }
Opts.Apps.OpReinstall.ScNames.Init()
    {
    _obj_opts_apps_opreinstall_scnames_text_=''
    _obj_opts_apps_opreinstall_scnames_flag_=false
    _obj_opts_apps_opreinstall_scnames_changes_flag_=true
    _obj_opts_apps_opreinstall_scnames_enable_=false
    }
Opts.Apps.OpReinstall.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_scnames_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_scnames_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_scnames_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_scnames_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scnames_changes_flag_=true
    }
Opts.Apps.OpReinstall.ScNames.Set()
    {
    [[ $_obj_opts_apps_opreinstall_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scnames_flag_=true
    [[ $_obj_opts_apps_opreinstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scnames_flag_
    }
Opts.Apps.OpReinstall.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_scnames_text_"
    fi
    }
Opts.Apps.OpReinstall.ScNames.Init

Opts.Apps.OpRestart.ScNames.Clear()
    {
    [[ $_obj_opts_apps_oprestart_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scnames_flag_=false
    [[ $_obj_opts_apps_oprestart_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scnames_flag_
    }
Opts.Apps.OpRestart.ScNames.Disable()
    {
    [[ $_obj_opts_apps_oprestart_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scnames_enable_=false
    [[ $_obj_opts_apps_oprestart_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scnames_enable_
    }
Opts.Apps.OpRestart.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scnames_changes_flag_=false
    }
Opts.Apps.OpRestart.ScNames.Enable()
    {
    [[ $_obj_opts_apps_oprestart_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scnames_enable_=true
    [[ $_obj_opts_apps_oprestart_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scnames_enable_
    }
Opts.Apps.OpRestart.ScNames.Init()
    {
    _obj_opts_apps_oprestart_scnames_text_=''
    _obj_opts_apps_oprestart_scnames_flag_=false
    _obj_opts_apps_oprestart_scnames_changes_flag_=true
    _obj_opts_apps_oprestart_scnames_enable_=false
    }
Opts.Apps.OpRestart.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_scnames_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_scnames_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_scnames_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_scnames_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scnames_changes_flag_=true
    }
Opts.Apps.OpRestart.ScNames.Set()
    {
    [[ $_obj_opts_apps_oprestart_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scnames_flag_=true
    [[ $_obj_opts_apps_oprestart_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scnames_flag_
    }
Opts.Apps.OpRestart.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_scnames_text_"
    fi
    }
Opts.Apps.OpRestart.ScNames.Init

Opts.Apps.OpRestore.ScNames.Clear()
    {
    [[ $_obj_opts_apps_oprestore_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scnames_flag_=false
    [[ $_obj_opts_apps_oprestore_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scnames_flag_
    }
Opts.Apps.OpRestore.ScNames.Disable()
    {
    [[ $_obj_opts_apps_oprestore_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scnames_enable_=false
    [[ $_obj_opts_apps_oprestore_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scnames_enable_
    }
Opts.Apps.OpRestore.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scnames_changes_flag_=false
    }
Opts.Apps.OpRestore.ScNames.Enable()
    {
    [[ $_obj_opts_apps_oprestore_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scnames_enable_=true
    [[ $_obj_opts_apps_oprestore_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scnames_enable_
    }
Opts.Apps.OpRestore.ScNames.Init()
    {
    _obj_opts_apps_oprestore_scnames_text_=''
    _obj_opts_apps_oprestore_scnames_flag_=false
    _obj_opts_apps_oprestore_scnames_changes_flag_=true
    _obj_opts_apps_oprestore_scnames_enable_=false
    }
Opts.Apps.OpRestore.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_scnames_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_scnames_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_scnames_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_scnames_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scnames_changes_flag_=true
    }
Opts.Apps.OpRestore.ScNames.Set()
    {
    [[ $_obj_opts_apps_oprestore_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scnames_flag_=true
    [[ $_obj_opts_apps_oprestore_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scnames_flag_
    }
Opts.Apps.OpRestore.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_scnames_text_"
    fi
    }
Opts.Apps.OpRestore.ScNames.Init

Opts.Apps.OpStart.ScNames.Clear()
    {
    [[ $_obj_opts_apps_opstart_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scnames_flag_=false
    [[ $_obj_opts_apps_opstart_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scnames_flag_
    }
Opts.Apps.OpStart.ScNames.Disable()
    {
    [[ $_obj_opts_apps_opstart_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_scnames_enable_=false
    [[ $_obj_opts_apps_opstart_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scnames_enable_
    }
Opts.Apps.OpStart.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scnames_changes_flag_=false
    }
Opts.Apps.OpStart.ScNames.Enable()
    {
    [[ $_obj_opts_apps_opstart_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_scnames_enable_=true
    [[ $_obj_opts_apps_opstart_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scnames_enable_
    }
Opts.Apps.OpStart.ScNames.Init()
    {
    _obj_opts_apps_opstart_scnames_text_=''
    _obj_opts_apps_opstart_scnames_flag_=false
    _obj_opts_apps_opstart_scnames_changes_flag_=true
    _obj_opts_apps_opstart_scnames_enable_=false
    }
Opts.Apps.OpStart.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_scnames_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_scnames_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_opstart_scnames_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_opstart_scnames_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scnames_changes_flag_=true
    }
Opts.Apps.OpStart.ScNames.Set()
    {
    [[ $_obj_opts_apps_opstart_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scnames_flag_=true
    [[ $_obj_opts_apps_opstart_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scnames_flag_
    }
Opts.Apps.OpStart.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_scnames_text_"
    fi
    }
Opts.Apps.OpStart.ScNames.Init

Opts.Apps.OpStop.ScNames.Clear()
    {
    [[ $_obj_opts_apps_opstop_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scnames_flag_=false
    [[ $_obj_opts_apps_opstop_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scnames_flag_
    }
Opts.Apps.OpStop.ScNames.Disable()
    {
    [[ $_obj_opts_apps_opstop_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_scnames_enable_=false
    [[ $_obj_opts_apps_opstop_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scnames_enable_
    }
Opts.Apps.OpStop.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scnames_changes_flag_=false
    }
Opts.Apps.OpStop.ScNames.Enable()
    {
    [[ $_obj_opts_apps_opstop_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_scnames_enable_=true
    [[ $_obj_opts_apps_opstop_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scnames_enable_
    }
Opts.Apps.OpStop.ScNames.Init()
    {
    _obj_opts_apps_opstop_scnames_text_=''
    _obj_opts_apps_opstop_scnames_flag_=false
    _obj_opts_apps_opstop_scnames_changes_flag_=true
    _obj_opts_apps_opstop_scnames_enable_=false
    }
Opts.Apps.OpStop.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_scnames_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_scnames_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_opstop_scnames_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_opstop_scnames_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scnames_changes_flag_=true
    }
Opts.Apps.OpStop.ScNames.Set()
    {
    [[ $_obj_opts_apps_opstop_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scnames_flag_=true
    [[ $_obj_opts_apps_opstop_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scnames_flag_
    }
Opts.Apps.OpStop.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_scnames_text_"
    fi
    }
Opts.Apps.OpStop.ScNames.Init

Opts.Apps.OpUninstall.ScNames.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scnames_flag_=false
    [[ $_obj_opts_apps_opuninstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scnames_flag_
    }
Opts.Apps.OpUninstall.ScNames.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scnames_enable_=false
    [[ $_obj_opts_apps_opuninstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scnames_enable_
    }
Opts.Apps.OpUninstall.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scnames_changes_flag_=false
    }
Opts.Apps.OpUninstall.ScNames.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scnames_enable_=true
    [[ $_obj_opts_apps_opuninstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scnames_enable_
    }
Opts.Apps.OpUninstall.ScNames.Init()
    {
    _obj_opts_apps_opuninstall_scnames_text_=''
    _obj_opts_apps_opuninstall_scnames_flag_=false
    _obj_opts_apps_opuninstall_scnames_changes_flag_=true
    _obj_opts_apps_opuninstall_scnames_enable_=false
    }
Opts.Apps.OpUninstall.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_scnames_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_scnames_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_scnames_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_scnames_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scnames_changes_flag_=true
    }
Opts.Apps.OpUninstall.ScNames.Set()
    {
    [[ $_obj_opts_apps_opuninstall_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scnames_flag_=true
    [[ $_obj_opts_apps_opuninstall_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scnames_flag_
    }
Opts.Apps.OpUninstall.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_scnames_text_"
    fi
    }
Opts.Apps.OpUninstall.ScNames.Init

Opts.Apps.OpUpgrade.ScNames.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_scnames_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scnames_flag_=false
    [[ $_obj_opts_apps_opupgrade_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scnames_flag_
    }
Opts.Apps.OpUpgrade.ScNames.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_scnames_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scnames_enable_=false
    [[ $_obj_opts_apps_opupgrade_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scnames_enable_
    }
Opts.Apps.OpUpgrade.ScNames.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scnames_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scnames_changes_flag_=false
    }
Opts.Apps.OpUpgrade.ScNames.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_scnames_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scnames_enable_=true
    [[ $_obj_opts_apps_opupgrade_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scnames_enable_
    }
Opts.Apps.OpUpgrade.ScNames.Init()
    {
    _obj_opts_apps_opupgrade_scnames_text_=''
    _obj_opts_apps_opupgrade_scnames_flag_=false
    _obj_opts_apps_opupgrade_scnames_changes_flag_=true
    _obj_opts_apps_opupgrade_scnames_enable_=false
    }
Opts.Apps.OpUpgrade.ScNames.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_scnames_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScNames.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_scnames_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScNames.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_scnames_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScNames.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_scnames_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScNames.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scnames_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scnames_changes_flag_=true
    }
Opts.Apps.OpUpgrade.ScNames.Set()
    {
    [[ $_obj_opts_apps_opupgrade_scnames_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scnames_flag_=true
    [[ $_obj_opts_apps_opupgrade_scnames_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scnames_flag_
    }
Opts.Apps.OpUpgrade.ScNames.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_scnames_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_scnames_text_"
    fi
    }
Opts.Apps.OpUpgrade.ScNames.Init

Opts.Apps.OpBackup.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_opbackup_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scstandalone_flag_=false
    [[ $_obj_opts_apps_opbackup_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scstandalone_flag_
    }
Opts.Apps.OpBackup.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_opbackup_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scstandalone_enable_=false
    [[ $_obj_opts_apps_opbackup_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scstandalone_enable_
    }
Opts.Apps.OpBackup.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scstandalone_changes_flag_=false
    }
Opts.Apps.OpBackup.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_opbackup_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scstandalone_enable_=true
    [[ $_obj_opts_apps_opbackup_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scstandalone_enable_
    }
Opts.Apps.OpBackup.ScStandalone.Init()
    {
    _obj_opts_apps_opbackup_scstandalone_text_=''
    _obj_opts_apps_opbackup_scstandalone_flag_=false
    _obj_opts_apps_opbackup_scstandalone_changes_flag_=true
    _obj_opts_apps_opbackup_scstandalone_enable_=false
    }
Opts.Apps.OpBackup.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scstandalone_changes_flag_=true
    }
Opts.Apps.OpBackup.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_opbackup_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scstandalone_flag_=true
    [[ $_obj_opts_apps_opbackup_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scstandalone_flag_
    }
Opts.Apps.OpBackup.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_scstandalone_text_"
    fi
    }
Opts.Apps.OpBackup.ScStandalone.Init

Opts.Apps.OpDownload.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_opdownload_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scstandalone_flag_=false
    [[ $_obj_opts_apps_opdownload_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scstandalone_flag_
    }
Opts.Apps.OpDownload.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_opdownload_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scstandalone_enable_=false
    [[ $_obj_opts_apps_opdownload_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scstandalone_enable_
    }
Opts.Apps.OpDownload.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scstandalone_changes_flag_=false
    }
Opts.Apps.OpDownload.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_opdownload_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scstandalone_enable_=true
    [[ $_obj_opts_apps_opdownload_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scstandalone_enable_
    }
Opts.Apps.OpDownload.ScStandalone.Init()
    {
    _obj_opts_apps_opdownload_scstandalone_text_=''
    _obj_opts_apps_opdownload_scstandalone_flag_=false
    _obj_opts_apps_opdownload_scstandalone_changes_flag_=true
    _obj_opts_apps_opdownload_scstandalone_enable_=false
    }
Opts.Apps.OpDownload.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scstandalone_changes_flag_=true
    }
Opts.Apps.OpDownload.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_opdownload_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scstandalone_flag_=true
    [[ $_obj_opts_apps_opdownload_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scstandalone_flag_
    }
Opts.Apps.OpDownload.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_scstandalone_text_"
    fi
    }
Opts.Apps.OpDownload.ScStandalone.Init

Opts.Apps.OpInstall.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_opinstall_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scstandalone_flag_=false
    [[ $_obj_opts_apps_opinstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scstandalone_flag_
    }
Opts.Apps.OpInstall.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_opinstall_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scstandalone_enable_=false
    [[ $_obj_opts_apps_opinstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scstandalone_enable_
    }
Opts.Apps.OpInstall.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scstandalone_changes_flag_=false
    }
Opts.Apps.OpInstall.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_opinstall_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scstandalone_enable_=true
    [[ $_obj_opts_apps_opinstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scstandalone_enable_
    }
Opts.Apps.OpInstall.ScStandalone.Init()
    {
    _obj_opts_apps_opinstall_scstandalone_text_=''
    _obj_opts_apps_opinstall_scstandalone_flag_=false
    _obj_opts_apps_opinstall_scstandalone_changes_flag_=true
    _obj_opts_apps_opinstall_scstandalone_enable_=false
    }
Opts.Apps.OpInstall.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scstandalone_changes_flag_=true
    }
Opts.Apps.OpInstall.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_opinstall_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scstandalone_flag_=true
    [[ $_obj_opts_apps_opinstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scstandalone_flag_
    }
Opts.Apps.OpInstall.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_scstandalone_text_"
    fi
    }
Opts.Apps.OpInstall.ScStandalone.Init

Opts.Apps.OpRebuild.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scstandalone_flag_=false
    [[ $_obj_opts_apps_oprebuild_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scstandalone_flag_
    }
Opts.Apps.OpRebuild.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scstandalone_enable_=false
    [[ $_obj_opts_apps_oprebuild_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scstandalone_enable_
    }
Opts.Apps.OpRebuild.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scstandalone_changes_flag_=false
    }
Opts.Apps.OpRebuild.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scstandalone_enable_=true
    [[ $_obj_opts_apps_oprebuild_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scstandalone_enable_
    }
Opts.Apps.OpRebuild.ScStandalone.Init()
    {
    _obj_opts_apps_oprebuild_scstandalone_text_=''
    _obj_opts_apps_oprebuild_scstandalone_flag_=false
    _obj_opts_apps_oprebuild_scstandalone_changes_flag_=true
    _obj_opts_apps_oprebuild_scstandalone_enable_=false
    }
Opts.Apps.OpRebuild.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scstandalone_changes_flag_=true
    }
Opts.Apps.OpRebuild.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_oprebuild_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scstandalone_flag_=true
    [[ $_obj_opts_apps_oprebuild_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scstandalone_flag_
    }
Opts.Apps.OpRebuild.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_scstandalone_text_"
    fi
    }
Opts.Apps.OpRebuild.ScStandalone.Init

Opts.Apps.OpReinstall.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scstandalone_flag_=false
    [[ $_obj_opts_apps_opreinstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scstandalone_flag_
    }
Opts.Apps.OpReinstall.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scstandalone_enable_=false
    [[ $_obj_opts_apps_opreinstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scstandalone_enable_
    }
Opts.Apps.OpReinstall.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scstandalone_changes_flag_=false
    }
Opts.Apps.OpReinstall.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scstandalone_enable_=true
    [[ $_obj_opts_apps_opreinstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scstandalone_enable_
    }
Opts.Apps.OpReinstall.ScStandalone.Init()
    {
    _obj_opts_apps_opreinstall_scstandalone_text_=''
    _obj_opts_apps_opreinstall_scstandalone_flag_=false
    _obj_opts_apps_opreinstall_scstandalone_changes_flag_=true
    _obj_opts_apps_opreinstall_scstandalone_enable_=false
    }
Opts.Apps.OpReinstall.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scstandalone_changes_flag_=true
    }
Opts.Apps.OpReinstall.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_opreinstall_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scstandalone_flag_=true
    [[ $_obj_opts_apps_opreinstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scstandalone_flag_
    }
Opts.Apps.OpReinstall.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_scstandalone_text_"
    fi
    }
Opts.Apps.OpReinstall.ScStandalone.Init

Opts.Apps.OpRestart.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_oprestart_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scstandalone_flag_=false
    [[ $_obj_opts_apps_oprestart_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scstandalone_flag_
    }
Opts.Apps.OpRestart.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_oprestart_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scstandalone_enable_=false
    [[ $_obj_opts_apps_oprestart_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scstandalone_enable_
    }
Opts.Apps.OpRestart.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scstandalone_changes_flag_=false
    }
Opts.Apps.OpRestart.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_oprestart_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scstandalone_enable_=true
    [[ $_obj_opts_apps_oprestart_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scstandalone_enable_
    }
Opts.Apps.OpRestart.ScStandalone.Init()
    {
    _obj_opts_apps_oprestart_scstandalone_text_=''
    _obj_opts_apps_oprestart_scstandalone_flag_=false
    _obj_opts_apps_oprestart_scstandalone_changes_flag_=true
    _obj_opts_apps_oprestart_scstandalone_enable_=false
    }
Opts.Apps.OpRestart.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scstandalone_changes_flag_=true
    }
Opts.Apps.OpRestart.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_oprestart_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scstandalone_flag_=true
    [[ $_obj_opts_apps_oprestart_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scstandalone_flag_
    }
Opts.Apps.OpRestart.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_scstandalone_text_"
    fi
    }
Opts.Apps.OpRestart.ScStandalone.Init

Opts.Apps.OpRestore.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_oprestore_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scstandalone_flag_=false
    [[ $_obj_opts_apps_oprestore_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scstandalone_flag_
    }
Opts.Apps.OpRestore.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_oprestore_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scstandalone_enable_=false
    [[ $_obj_opts_apps_oprestore_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scstandalone_enable_
    }
Opts.Apps.OpRestore.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scstandalone_changes_flag_=false
    }
Opts.Apps.OpRestore.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_oprestore_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scstandalone_enable_=true
    [[ $_obj_opts_apps_oprestore_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scstandalone_enable_
    }
Opts.Apps.OpRestore.ScStandalone.Init()
    {
    _obj_opts_apps_oprestore_scstandalone_text_=''
    _obj_opts_apps_oprestore_scstandalone_flag_=false
    _obj_opts_apps_oprestore_scstandalone_changes_flag_=true
    _obj_opts_apps_oprestore_scstandalone_enable_=false
    }
Opts.Apps.OpRestore.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scstandalone_changes_flag_=true
    }
Opts.Apps.OpRestore.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_oprestore_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scstandalone_flag_=true
    [[ $_obj_opts_apps_oprestore_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scstandalone_flag_
    }
Opts.Apps.OpRestore.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_scstandalone_text_"
    fi
    }
Opts.Apps.OpRestore.ScStandalone.Init

Opts.Apps.OpStart.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_opstart_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scstandalone_flag_=false
    [[ $_obj_opts_apps_opstart_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scstandalone_flag_
    }
Opts.Apps.OpStart.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_opstart_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_scstandalone_enable_=false
    [[ $_obj_opts_apps_opstart_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scstandalone_enable_
    }
Opts.Apps.OpStart.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scstandalone_changes_flag_=false
    }
Opts.Apps.OpStart.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_opstart_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_scstandalone_enable_=true
    [[ $_obj_opts_apps_opstart_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scstandalone_enable_
    }
Opts.Apps.OpStart.ScStandalone.Init()
    {
    _obj_opts_apps_opstart_scstandalone_text_=''
    _obj_opts_apps_opstart_scstandalone_flag_=false
    _obj_opts_apps_opstart_scstandalone_changes_flag_=true
    _obj_opts_apps_opstart_scstandalone_enable_=false
    }
Opts.Apps.OpStart.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_opstart_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_opstart_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scstandalone_changes_flag_=true
    }
Opts.Apps.OpStart.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_opstart_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scstandalone_flag_=true
    [[ $_obj_opts_apps_opstart_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scstandalone_flag_
    }
Opts.Apps.OpStart.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_scstandalone_text_"
    fi
    }
Opts.Apps.OpStart.ScStandalone.Init

Opts.Apps.OpStop.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_opstop_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scstandalone_flag_=false
    [[ $_obj_opts_apps_opstop_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scstandalone_flag_
    }
Opts.Apps.OpStop.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_opstop_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_scstandalone_enable_=false
    [[ $_obj_opts_apps_opstop_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scstandalone_enable_
    }
Opts.Apps.OpStop.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scstandalone_changes_flag_=false
    }
Opts.Apps.OpStop.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_opstop_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_scstandalone_enable_=true
    [[ $_obj_opts_apps_opstop_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scstandalone_enable_
    }
Opts.Apps.OpStop.ScStandalone.Init()
    {
    _obj_opts_apps_opstop_scstandalone_text_=''
    _obj_opts_apps_opstop_scstandalone_flag_=false
    _obj_opts_apps_opstop_scstandalone_changes_flag_=true
    _obj_opts_apps_opstop_scstandalone_enable_=false
    }
Opts.Apps.OpStop.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_opstop_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_opstop_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scstandalone_changes_flag_=true
    }
Opts.Apps.OpStop.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_opstop_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scstandalone_flag_=true
    [[ $_obj_opts_apps_opstop_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scstandalone_flag_
    }
Opts.Apps.OpStop.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_scstandalone_text_"
    fi
    }
Opts.Apps.OpStop.ScStandalone.Init

Opts.Apps.OpUninstall.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scstandalone_flag_=false
    [[ $_obj_opts_apps_opuninstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scstandalone_flag_
    }
Opts.Apps.OpUninstall.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scstandalone_enable_=false
    [[ $_obj_opts_apps_opuninstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scstandalone_enable_
    }
Opts.Apps.OpUninstall.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scstandalone_changes_flag_=false
    }
Opts.Apps.OpUninstall.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scstandalone_enable_=true
    [[ $_obj_opts_apps_opuninstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scstandalone_enable_
    }
Opts.Apps.OpUninstall.ScStandalone.Init()
    {
    _obj_opts_apps_opuninstall_scstandalone_text_=''
    _obj_opts_apps_opuninstall_scstandalone_flag_=false
    _obj_opts_apps_opuninstall_scstandalone_changes_flag_=true
    _obj_opts_apps_opuninstall_scstandalone_enable_=false
    }
Opts.Apps.OpUninstall.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scstandalone_changes_flag_=true
    }
Opts.Apps.OpUninstall.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_opuninstall_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scstandalone_flag_=true
    [[ $_obj_opts_apps_opuninstall_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scstandalone_flag_
    }
Opts.Apps.OpUninstall.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_scstandalone_text_"
    fi
    }
Opts.Apps.OpUninstall.ScStandalone.Init

Opts.Apps.OpUpgrade.ScStandalone.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_scstandalone_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scstandalone_flag_=false
    [[ $_obj_opts_apps_opupgrade_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scstandalone_flag_
    }
Opts.Apps.OpUpgrade.ScStandalone.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_scstandalone_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scstandalone_enable_=false
    [[ $_obj_opts_apps_opupgrade_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scstandalone_enable_
    }
Opts.Apps.OpUpgrade.ScStandalone.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scstandalone_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scstandalone_changes_flag_=false
    }
Opts.Apps.OpUpgrade.ScStandalone.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_scstandalone_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scstandalone_enable_=true
    [[ $_obj_opts_apps_opupgrade_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scstandalone_enable_
    }
Opts.Apps.OpUpgrade.ScStandalone.Init()
    {
    _obj_opts_apps_opupgrade_scstandalone_text_=''
    _obj_opts_apps_opupgrade_scstandalone_flag_=false
    _obj_opts_apps_opupgrade_scstandalone_changes_flag_=true
    _obj_opts_apps_opupgrade_scstandalone_enable_=false
    }
Opts.Apps.OpUpgrade.ScStandalone.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_scstandalone_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScStandalone.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_scstandalone_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScStandalone.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_scstandalone_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScStandalone.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_scstandalone_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScStandalone.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scstandalone_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scstandalone_changes_flag_=true
    }
Opts.Apps.OpUpgrade.ScStandalone.Set()
    {
    [[ $_obj_opts_apps_opupgrade_scstandalone_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scstandalone_flag_=true
    [[ $_obj_opts_apps_opupgrade_scstandalone_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scstandalone_flag_
    }
Opts.Apps.OpUpgrade.ScStandalone.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_scstandalone_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_scstandalone_text_"
    fi
    }
Opts.Apps.OpUpgrade.ScStandalone.Init

Opts.Apps.OpBackup.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_opbackup_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_opbackup_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scsupportbackup_flag_
    }
Opts.Apps.OpBackup.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_opbackup_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_opbackup_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scsupportbackup_enable_
    }
Opts.Apps.OpBackup.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportbackup_changes_flag_=false
    }
Opts.Apps.OpBackup.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_opbackup_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_opbackup_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scsupportbackup_enable_
    }
Opts.Apps.OpBackup.ScSupportBackup.Init()
    {
    _obj_opts_apps_opbackup_scsupportbackup_text_=''
    _obj_opts_apps_opbackup_scsupportbackup_flag_=false
    _obj_opts_apps_opbackup_scsupportbackup_changes_flag_=true
    _obj_opts_apps_opbackup_scsupportbackup_enable_=false
    }
Opts.Apps.OpBackup.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportbackup_changes_flag_=true
    }
Opts.Apps.OpBackup.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_opbackup_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_opbackup_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scsupportbackup_flag_
    }
Opts.Apps.OpBackup.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_scsupportbackup_text_"
    fi
    }
Opts.Apps.OpBackup.ScSupportBackup.Init

Opts.Apps.OpDownload.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_opdownload_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_opdownload_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scsupportbackup_flag_
    }
Opts.Apps.OpDownload.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_opdownload_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_opdownload_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scsupportbackup_enable_
    }
Opts.Apps.OpDownload.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportbackup_changes_flag_=false
    }
Opts.Apps.OpDownload.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_opdownload_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_opdownload_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scsupportbackup_enable_
    }
Opts.Apps.OpDownload.ScSupportBackup.Init()
    {
    _obj_opts_apps_opdownload_scsupportbackup_text_=''
    _obj_opts_apps_opdownload_scsupportbackup_flag_=false
    _obj_opts_apps_opdownload_scsupportbackup_changes_flag_=true
    _obj_opts_apps_opdownload_scsupportbackup_enable_=false
    }
Opts.Apps.OpDownload.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportbackup_changes_flag_=true
    }
Opts.Apps.OpDownload.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_opdownload_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_opdownload_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scsupportbackup_flag_
    }
Opts.Apps.OpDownload.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_scsupportbackup_text_"
    fi
    }
Opts.Apps.OpDownload.ScSupportBackup.Init

Opts.Apps.OpInstall.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_opinstall_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_opinstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scsupportbackup_flag_
    }
Opts.Apps.OpInstall.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_opinstall_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_opinstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scsupportbackup_enable_
    }
Opts.Apps.OpInstall.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportbackup_changes_flag_=false
    }
Opts.Apps.OpInstall.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_opinstall_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_opinstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scsupportbackup_enable_
    }
Opts.Apps.OpInstall.ScSupportBackup.Init()
    {
    _obj_opts_apps_opinstall_scsupportbackup_text_=''
    _obj_opts_apps_opinstall_scsupportbackup_flag_=false
    _obj_opts_apps_opinstall_scsupportbackup_changes_flag_=true
    _obj_opts_apps_opinstall_scsupportbackup_enable_=false
    }
Opts.Apps.OpInstall.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportbackup_changes_flag_=true
    }
Opts.Apps.OpInstall.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_opinstall_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_opinstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scsupportbackup_flag_
    }
Opts.Apps.OpInstall.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_scsupportbackup_text_"
    fi
    }
Opts.Apps.OpInstall.ScSupportBackup.Init

Opts.Apps.OpRebuild.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scsupportbackup_flag_
    }
Opts.Apps.OpRebuild.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scsupportbackup_enable_
    }
Opts.Apps.OpRebuild.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportbackup_changes_flag_=false
    }
Opts.Apps.OpRebuild.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scsupportbackup_enable_
    }
Opts.Apps.OpRebuild.ScSupportBackup.Init()
    {
    _obj_opts_apps_oprebuild_scsupportbackup_text_=''
    _obj_opts_apps_oprebuild_scsupportbackup_flag_=false
    _obj_opts_apps_oprebuild_scsupportbackup_changes_flag_=true
    _obj_opts_apps_oprebuild_scsupportbackup_enable_=false
    }
Opts.Apps.OpRebuild.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportbackup_changes_flag_=true
    }
Opts.Apps.OpRebuild.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_oprebuild_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scsupportbackup_flag_
    }
Opts.Apps.OpRebuild.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_scsupportbackup_text_"
    fi
    }
Opts.Apps.OpRebuild.ScSupportBackup.Init

Opts.Apps.OpReinstall.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scsupportbackup_flag_
    }
Opts.Apps.OpReinstall.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scsupportbackup_enable_
    }
Opts.Apps.OpReinstall.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportbackup_changes_flag_=false
    }
Opts.Apps.OpReinstall.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scsupportbackup_enable_
    }
Opts.Apps.OpReinstall.ScSupportBackup.Init()
    {
    _obj_opts_apps_opreinstall_scsupportbackup_text_=''
    _obj_opts_apps_opreinstall_scsupportbackup_flag_=false
    _obj_opts_apps_opreinstall_scsupportbackup_changes_flag_=true
    _obj_opts_apps_opreinstall_scsupportbackup_enable_=false
    }
Opts.Apps.OpReinstall.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportbackup_changes_flag_=true
    }
Opts.Apps.OpReinstall.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_opreinstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scsupportbackup_flag_
    }
Opts.Apps.OpReinstall.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_scsupportbackup_text_"
    fi
    }
Opts.Apps.OpReinstall.ScSupportBackup.Init

Opts.Apps.OpRestart.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_oprestart_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_oprestart_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scsupportbackup_flag_
    }
Opts.Apps.OpRestart.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_oprestart_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_oprestart_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scsupportbackup_enable_
    }
Opts.Apps.OpRestart.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportbackup_changes_flag_=false
    }
Opts.Apps.OpRestart.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_oprestart_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_oprestart_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scsupportbackup_enable_
    }
Opts.Apps.OpRestart.ScSupportBackup.Init()
    {
    _obj_opts_apps_oprestart_scsupportbackup_text_=''
    _obj_opts_apps_oprestart_scsupportbackup_flag_=false
    _obj_opts_apps_oprestart_scsupportbackup_changes_flag_=true
    _obj_opts_apps_oprestart_scsupportbackup_enable_=false
    }
Opts.Apps.OpRestart.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportbackup_changes_flag_=true
    }
Opts.Apps.OpRestart.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_oprestart_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_oprestart_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scsupportbackup_flag_
    }
Opts.Apps.OpRestart.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_scsupportbackup_text_"
    fi
    }
Opts.Apps.OpRestart.ScSupportBackup.Init

Opts.Apps.OpRestore.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_oprestore_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_oprestore_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scsupportbackup_flag_
    }
Opts.Apps.OpRestore.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_oprestore_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_oprestore_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scsupportbackup_enable_
    }
Opts.Apps.OpRestore.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportbackup_changes_flag_=false
    }
Opts.Apps.OpRestore.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_oprestore_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_oprestore_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scsupportbackup_enable_
    }
Opts.Apps.OpRestore.ScSupportBackup.Init()
    {
    _obj_opts_apps_oprestore_scsupportbackup_text_=''
    _obj_opts_apps_oprestore_scsupportbackup_flag_=false
    _obj_opts_apps_oprestore_scsupportbackup_changes_flag_=true
    _obj_opts_apps_oprestore_scsupportbackup_enable_=false
    }
Opts.Apps.OpRestore.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportbackup_changes_flag_=true
    }
Opts.Apps.OpRestore.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_oprestore_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_oprestore_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scsupportbackup_flag_
    }
Opts.Apps.OpRestore.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_scsupportbackup_text_"
    fi
    }
Opts.Apps.OpRestore.ScSupportBackup.Init

Opts.Apps.OpStart.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_opstart_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_opstart_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scsupportbackup_flag_
    }
Opts.Apps.OpStart.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_opstart_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_opstart_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scsupportbackup_enable_
    }
Opts.Apps.OpStart.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scsupportbackup_changes_flag_=false
    }
Opts.Apps.OpStart.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_opstart_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_opstart_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scsupportbackup_enable_
    }
Opts.Apps.OpStart.ScSupportBackup.Init()
    {
    _obj_opts_apps_opstart_scsupportbackup_text_=''
    _obj_opts_apps_opstart_scsupportbackup_flag_=false
    _obj_opts_apps_opstart_scsupportbackup_changes_flag_=true
    _obj_opts_apps_opstart_scsupportbackup_enable_=false
    }
Opts.Apps.OpStart.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_opstart_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_opstart_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scsupportbackup_changes_flag_=true
    }
Opts.Apps.OpStart.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_opstart_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_opstart_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scsupportbackup_flag_
    }
Opts.Apps.OpStart.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_scsupportbackup_text_"
    fi
    }
Opts.Apps.OpStart.ScSupportBackup.Init

Opts.Apps.OpStop.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_opstop_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_opstop_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scsupportbackup_flag_
    }
Opts.Apps.OpStop.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_opstop_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_opstop_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scsupportbackup_enable_
    }
Opts.Apps.OpStop.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scsupportbackup_changes_flag_=false
    }
Opts.Apps.OpStop.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_opstop_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_opstop_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scsupportbackup_enable_
    }
Opts.Apps.OpStop.ScSupportBackup.Init()
    {
    _obj_opts_apps_opstop_scsupportbackup_text_=''
    _obj_opts_apps_opstop_scsupportbackup_flag_=false
    _obj_opts_apps_opstop_scsupportbackup_changes_flag_=true
    _obj_opts_apps_opstop_scsupportbackup_enable_=false
    }
Opts.Apps.OpStop.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_opstop_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_opstop_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scsupportbackup_changes_flag_=true
    }
Opts.Apps.OpStop.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_opstop_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_opstop_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scsupportbackup_flag_
    }
Opts.Apps.OpStop.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_scsupportbackup_text_"
    fi
    }
Opts.Apps.OpStop.ScSupportBackup.Init

Opts.Apps.OpUninstall.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scsupportbackup_flag_
    }
Opts.Apps.OpUninstall.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scsupportbackup_enable_
    }
Opts.Apps.OpUninstall.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportbackup_changes_flag_=false
    }
Opts.Apps.OpUninstall.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scsupportbackup_enable_
    }
Opts.Apps.OpUninstall.ScSupportBackup.Init()
    {
    _obj_opts_apps_opuninstall_scsupportbackup_text_=''
    _obj_opts_apps_opuninstall_scsupportbackup_flag_=false
    _obj_opts_apps_opuninstall_scsupportbackup_changes_flag_=true
    _obj_opts_apps_opuninstall_scsupportbackup_enable_=false
    }
Opts.Apps.OpUninstall.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportbackup_changes_flag_=true
    }
Opts.Apps.OpUninstall.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_opuninstall_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scsupportbackup_flag_
    }
Opts.Apps.OpUninstall.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_scsupportbackup_text_"
    fi
    }
Opts.Apps.OpUninstall.ScSupportBackup.Init

Opts.Apps.OpUpgrade.ScSupportBackup.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportbackup_flag_=false
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scsupportbackup_flag_
    }
Opts.Apps.OpUpgrade.ScSupportBackup.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportbackup_enable_=false
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scsupportbackup_enable_
    }
Opts.Apps.OpUpgrade.ScSupportBackup.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportbackup_changes_flag_=false
    }
Opts.Apps.OpUpgrade.ScSupportBackup.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportbackup_enable_=true
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scsupportbackup_enable_
    }
Opts.Apps.OpUpgrade.ScSupportBackup.Init()
    {
    _obj_opts_apps_opupgrade_scsupportbackup_text_=''
    _obj_opts_apps_opupgrade_scsupportbackup_flag_=false
    _obj_opts_apps_opupgrade_scsupportbackup_changes_flag_=true
    _obj_opts_apps_opupgrade_scsupportbackup_enable_=false
    }
Opts.Apps.OpUpgrade.ScSupportBackup.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScSupportBackup.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScSupportBackup.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScSupportBackup.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScSupportBackup.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportbackup_changes_flag_=true
    }
Opts.Apps.OpUpgrade.ScSupportBackup.Set()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportbackup_flag_=true
    [[ $_obj_opts_apps_opupgrade_scsupportbackup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scsupportbackup_flag_
    }
Opts.Apps.OpUpgrade.ScSupportBackup.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_scsupportbackup_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_scsupportbackup_text_"
    fi
    }
Opts.Apps.OpUpgrade.ScSupportBackup.Init

Opts.Apps.OpBackup.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_opbackup_scsupportupdateonrestart_text_=''
    _obj_opts_apps_opbackup_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_opbackup_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_opbackup_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_opbackup_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.OpBackup.ScSupportUpdateOnRestart.Init

Opts.Apps.OpDownload.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_opdownload_scsupportupdateonrestart_text_=''
    _obj_opts_apps_opdownload_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_opdownload_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_opdownload_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_opdownload_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.OpDownload.ScSupportUpdateOnRestart.Init

Opts.Apps.OpInstall.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_opinstall_scsupportupdateonrestart_text_=''
    _obj_opts_apps_opinstall_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_opinstall_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_opinstall_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_opinstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.OpInstall.ScSupportUpdateOnRestart.Init

Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_oprebuild_scsupportupdateonrestart_text_=''
    _obj_opts_apps_oprebuild_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_oprebuild_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_oprebuild_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_oprebuild_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.OpRebuild.ScSupportUpdateOnRestart.Init

Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_opreinstall_scsupportupdateonrestart_text_=''
    _obj_opts_apps_opreinstall_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_opreinstall_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_opreinstall_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_opreinstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.OpReinstall.ScSupportUpdateOnRestart.Init

Opts.Apps.OpRestart.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_oprestart_scsupportupdateonrestart_text_=''
    _obj_opts_apps_oprestart_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_oprestart_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_oprestart_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_oprestart_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.OpRestart.ScSupportUpdateOnRestart.Init

Opts.Apps.OpRestore.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_oprestore_scsupportupdateonrestart_text_=''
    _obj_opts_apps_oprestore_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_oprestore_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_oprestore_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_oprestore_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.OpRestore.ScSupportUpdateOnRestart.Init

Opts.Apps.OpStart.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_opstart_scsupportupdateonrestart_text_=''
    _obj_opts_apps_opstart_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_opstart_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_opstart_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_opstart_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.OpStart.ScSupportUpdateOnRestart.Init

Opts.Apps.OpStop.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_opstop_scsupportupdateonrestart_text_=''
    _obj_opts_apps_opstop_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_opstop_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_opstop_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_opstop_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.OpStop.ScSupportUpdateOnRestart.Init

Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_opuninstall_scsupportupdateonrestart_text_=''
    _obj_opts_apps_opuninstall_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_opuninstall_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_opuninstall_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_opuninstall_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.OpUninstall.ScSupportUpdateOnRestart.Init

Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportupdateonrestart_flag_=false
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportupdateonrestart_enable_=false
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportupdateonrestart_changes_flag_=false
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportupdateonrestart_enable_=true
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scsupportupdateonrestart_enable_
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.Init()
    {
    _obj_opts_apps_opupgrade_scsupportupdateonrestart_text_=''
    _obj_opts_apps_opupgrade_scsupportupdateonrestart_flag_=false
    _obj_opts_apps_opupgrade_scsupportupdateonrestart_changes_flag_=true
    _obj_opts_apps_opupgrade_scsupportupdateonrestart_enable_=false
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportupdateonrestart_changes_flag_=true
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.Set()
    {
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scsupportupdateonrestart_flag_=true
    [[ $_obj_opts_apps_opupgrade_scsupportupdateonrestart_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scsupportupdateonrestart_flag_
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_scsupportupdateonrestart_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_scsupportupdateonrestart_text_"
    fi
    }
Opts.Apps.OpUpgrade.ScSupportUpdateOnRestart.Init

Opts.Apps.OpBackup.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_opbackup_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scupgradable_flag_=false
    [[ $_obj_opts_apps_opbackup_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scupgradable_flag_
    }
Opts.Apps.OpBackup.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_opbackup_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scupgradable_enable_=false
    [[ $_obj_opts_apps_opbackup_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scupgradable_enable_
    }
Opts.Apps.OpBackup.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_scupgradable_changes_flag_=false
    }
Opts.Apps.OpBackup.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_opbackup_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scupgradable_enable_=true
    [[ $_obj_opts_apps_opbackup_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scupgradable_enable_
    }
Opts.Apps.OpBackup.ScUpgradable.Init()
    {
    _obj_opts_apps_opbackup_scupgradable_text_=''
    _obj_opts_apps_opbackup_scupgradable_flag_=false
    _obj_opts_apps_opbackup_scupgradable_changes_flag_=true
    _obj_opts_apps_opbackup_scupgradable_enable_=false
    }
Opts.Apps.OpBackup.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scupgradable_changes_flag_=true
    }
Opts.Apps.OpBackup.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_opbackup_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_scupgradable_flag_=true
    [[ $_obj_opts_apps_opbackup_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_scupgradable_flag_
    }
Opts.Apps.OpBackup.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_scupgradable_text_"
    fi
    }
Opts.Apps.OpBackup.ScUpgradable.Init

Opts.Apps.OpDownload.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_opdownload_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scupgradable_flag_=false
    [[ $_obj_opts_apps_opdownload_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scupgradable_flag_
    }
Opts.Apps.OpDownload.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_opdownload_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scupgradable_enable_=false
    [[ $_obj_opts_apps_opdownload_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scupgradable_enable_
    }
Opts.Apps.OpDownload.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_scupgradable_changes_flag_=false
    }
Opts.Apps.OpDownload.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_opdownload_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scupgradable_enable_=true
    [[ $_obj_opts_apps_opdownload_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scupgradable_enable_
    }
Opts.Apps.OpDownload.ScUpgradable.Init()
    {
    _obj_opts_apps_opdownload_scupgradable_text_=''
    _obj_opts_apps_opdownload_scupgradable_flag_=false
    _obj_opts_apps_opdownload_scupgradable_changes_flag_=true
    _obj_opts_apps_opdownload_scupgradable_enable_=false
    }
Opts.Apps.OpDownload.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scupgradable_changes_flag_=true
    }
Opts.Apps.OpDownload.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_opdownload_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_scupgradable_flag_=true
    [[ $_obj_opts_apps_opdownload_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_scupgradable_flag_
    }
Opts.Apps.OpDownload.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_scupgradable_text_"
    fi
    }
Opts.Apps.OpDownload.ScUpgradable.Init

Opts.Apps.OpInstall.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_opinstall_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scupgradable_flag_=false
    [[ $_obj_opts_apps_opinstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scupgradable_flag_
    }
Opts.Apps.OpInstall.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_opinstall_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scupgradable_enable_=false
    [[ $_obj_opts_apps_opinstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scupgradable_enable_
    }
Opts.Apps.OpInstall.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_scupgradable_changes_flag_=false
    }
Opts.Apps.OpInstall.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_opinstall_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scupgradable_enable_=true
    [[ $_obj_opts_apps_opinstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scupgradable_enable_
    }
Opts.Apps.OpInstall.ScUpgradable.Init()
    {
    _obj_opts_apps_opinstall_scupgradable_text_=''
    _obj_opts_apps_opinstall_scupgradable_flag_=false
    _obj_opts_apps_opinstall_scupgradable_changes_flag_=true
    _obj_opts_apps_opinstall_scupgradable_enable_=false
    }
Opts.Apps.OpInstall.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scupgradable_changes_flag_=true
    }
Opts.Apps.OpInstall.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_opinstall_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_scupgradable_flag_=true
    [[ $_obj_opts_apps_opinstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_scupgradable_flag_
    }
Opts.Apps.OpInstall.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_scupgradable_text_"
    fi
    }
Opts.Apps.OpInstall.ScUpgradable.Init

Opts.Apps.OpRebuild.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scupgradable_flag_=false
    [[ $_obj_opts_apps_oprebuild_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scupgradable_flag_
    }
Opts.Apps.OpRebuild.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scupgradable_enable_=false
    [[ $_obj_opts_apps_oprebuild_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scupgradable_enable_
    }
Opts.Apps.OpRebuild.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_scupgradable_changes_flag_=false
    }
Opts.Apps.OpRebuild.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scupgradable_enable_=true
    [[ $_obj_opts_apps_oprebuild_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scupgradable_enable_
    }
Opts.Apps.OpRebuild.ScUpgradable.Init()
    {
    _obj_opts_apps_oprebuild_scupgradable_text_=''
    _obj_opts_apps_oprebuild_scupgradable_flag_=false
    _obj_opts_apps_oprebuild_scupgradable_changes_flag_=true
    _obj_opts_apps_oprebuild_scupgradable_enable_=false
    }
Opts.Apps.OpRebuild.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scupgradable_changes_flag_=true
    }
Opts.Apps.OpRebuild.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_oprebuild_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_scupgradable_flag_=true
    [[ $_obj_opts_apps_oprebuild_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_scupgradable_flag_
    }
Opts.Apps.OpRebuild.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_scupgradable_text_"
    fi
    }
Opts.Apps.OpRebuild.ScUpgradable.Init

Opts.Apps.OpReinstall.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scupgradable_flag_=false
    [[ $_obj_opts_apps_opreinstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scupgradable_flag_
    }
Opts.Apps.OpReinstall.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scupgradable_enable_=false
    [[ $_obj_opts_apps_opreinstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scupgradable_enable_
    }
Opts.Apps.OpReinstall.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_scupgradable_changes_flag_=false
    }
Opts.Apps.OpReinstall.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scupgradable_enable_=true
    [[ $_obj_opts_apps_opreinstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scupgradable_enable_
    }
Opts.Apps.OpReinstall.ScUpgradable.Init()
    {
    _obj_opts_apps_opreinstall_scupgradable_text_=''
    _obj_opts_apps_opreinstall_scupgradable_flag_=false
    _obj_opts_apps_opreinstall_scupgradable_changes_flag_=true
    _obj_opts_apps_opreinstall_scupgradable_enable_=false
    }
Opts.Apps.OpReinstall.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scupgradable_changes_flag_=true
    }
Opts.Apps.OpReinstall.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_opreinstall_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_scupgradable_flag_=true
    [[ $_obj_opts_apps_opreinstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_scupgradable_flag_
    }
Opts.Apps.OpReinstall.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_scupgradable_text_"
    fi
    }
Opts.Apps.OpReinstall.ScUpgradable.Init

Opts.Apps.OpRestart.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_oprestart_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scupgradable_flag_=false
    [[ $_obj_opts_apps_oprestart_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scupgradable_flag_
    }
Opts.Apps.OpRestart.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_oprestart_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scupgradable_enable_=false
    [[ $_obj_opts_apps_oprestart_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scupgradable_enable_
    }
Opts.Apps.OpRestart.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_scupgradable_changes_flag_=false
    }
Opts.Apps.OpRestart.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_oprestart_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scupgradable_enable_=true
    [[ $_obj_opts_apps_oprestart_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scupgradable_enable_
    }
Opts.Apps.OpRestart.ScUpgradable.Init()
    {
    _obj_opts_apps_oprestart_scupgradable_text_=''
    _obj_opts_apps_oprestart_scupgradable_flag_=false
    _obj_opts_apps_oprestart_scupgradable_changes_flag_=true
    _obj_opts_apps_oprestart_scupgradable_enable_=false
    }
Opts.Apps.OpRestart.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scupgradable_changes_flag_=true
    }
Opts.Apps.OpRestart.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_oprestart_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_scupgradable_flag_=true
    [[ $_obj_opts_apps_oprestart_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_scupgradable_flag_
    }
Opts.Apps.OpRestart.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_scupgradable_text_"
    fi
    }
Opts.Apps.OpRestart.ScUpgradable.Init

Opts.Apps.OpRestore.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_oprestore_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scupgradable_flag_=false
    [[ $_obj_opts_apps_oprestore_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scupgradable_flag_
    }
Opts.Apps.OpRestore.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_oprestore_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scupgradable_enable_=false
    [[ $_obj_opts_apps_oprestore_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scupgradable_enable_
    }
Opts.Apps.OpRestore.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_scupgradable_changes_flag_=false
    }
Opts.Apps.OpRestore.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_oprestore_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scupgradable_enable_=true
    [[ $_obj_opts_apps_oprestore_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scupgradable_enable_
    }
Opts.Apps.OpRestore.ScUpgradable.Init()
    {
    _obj_opts_apps_oprestore_scupgradable_text_=''
    _obj_opts_apps_oprestore_scupgradable_flag_=false
    _obj_opts_apps_oprestore_scupgradable_changes_flag_=true
    _obj_opts_apps_oprestore_scupgradable_enable_=false
    }
Opts.Apps.OpRestore.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scupgradable_changes_flag_=true
    }
Opts.Apps.OpRestore.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_oprestore_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_scupgradable_flag_=true
    [[ $_obj_opts_apps_oprestore_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_scupgradable_flag_
    }
Opts.Apps.OpRestore.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_scupgradable_text_"
    fi
    }
Opts.Apps.OpRestore.ScUpgradable.Init

Opts.Apps.OpStart.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_opstart_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scupgradable_flag_=false
    [[ $_obj_opts_apps_opstart_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scupgradable_flag_
    }
Opts.Apps.OpStart.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_opstart_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_scupgradable_enable_=false
    [[ $_obj_opts_apps_opstart_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scupgradable_enable_
    }
Opts.Apps.OpStart.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_scupgradable_changes_flag_=false
    }
Opts.Apps.OpStart.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_opstart_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_scupgradable_enable_=true
    [[ $_obj_opts_apps_opstart_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scupgradable_enable_
    }
Opts.Apps.OpStart.ScUpgradable.Init()
    {
    _obj_opts_apps_opstart_scupgradable_text_=''
    _obj_opts_apps_opstart_scupgradable_flag_=false
    _obj_opts_apps_opstart_scupgradable_changes_flag_=true
    _obj_opts_apps_opstart_scupgradable_enable_=false
    }
Opts.Apps.OpStart.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_opstart_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_opstart_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scupgradable_changes_flag_=true
    }
Opts.Apps.OpStart.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_opstart_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_scupgradable_flag_=true
    [[ $_obj_opts_apps_opstart_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_scupgradable_flag_
    }
Opts.Apps.OpStart.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_scupgradable_text_"
    fi
    }
Opts.Apps.OpStart.ScUpgradable.Init

Opts.Apps.OpStop.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_opstop_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scupgradable_flag_=false
    [[ $_obj_opts_apps_opstop_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scupgradable_flag_
    }
Opts.Apps.OpStop.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_opstop_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_scupgradable_enable_=false
    [[ $_obj_opts_apps_opstop_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scupgradable_enable_
    }
Opts.Apps.OpStop.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_scupgradable_changes_flag_=false
    }
Opts.Apps.OpStop.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_opstop_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_scupgradable_enable_=true
    [[ $_obj_opts_apps_opstop_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scupgradable_enable_
    }
Opts.Apps.OpStop.ScUpgradable.Init()
    {
    _obj_opts_apps_opstop_scupgradable_text_=''
    _obj_opts_apps_opstop_scupgradable_flag_=false
    _obj_opts_apps_opstop_scupgradable_changes_flag_=true
    _obj_opts_apps_opstop_scupgradable_enable_=false
    }
Opts.Apps.OpStop.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_opstop_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_opstop_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scupgradable_changes_flag_=true
    }
Opts.Apps.OpStop.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_opstop_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_scupgradable_flag_=true
    [[ $_obj_opts_apps_opstop_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_scupgradable_flag_
    }
Opts.Apps.OpStop.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_scupgradable_text_"
    fi
    }
Opts.Apps.OpStop.ScUpgradable.Init

Opts.Apps.OpUninstall.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scupgradable_flag_=false
    [[ $_obj_opts_apps_opuninstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scupgradable_flag_
    }
Opts.Apps.OpUninstall.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scupgradable_enable_=false
    [[ $_obj_opts_apps_opuninstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scupgradable_enable_
    }
Opts.Apps.OpUninstall.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_scupgradable_changes_flag_=false
    }
Opts.Apps.OpUninstall.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scupgradable_enable_=true
    [[ $_obj_opts_apps_opuninstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scupgradable_enable_
    }
Opts.Apps.OpUninstall.ScUpgradable.Init()
    {
    _obj_opts_apps_opuninstall_scupgradable_text_=''
    _obj_opts_apps_opuninstall_scupgradable_flag_=false
    _obj_opts_apps_opuninstall_scupgradable_changes_flag_=true
    _obj_opts_apps_opuninstall_scupgradable_enable_=false
    }
Opts.Apps.OpUninstall.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scupgradable_changes_flag_=true
    }
Opts.Apps.OpUninstall.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_opuninstall_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_scupgradable_flag_=true
    [[ $_obj_opts_apps_opuninstall_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_scupgradable_flag_
    }
Opts.Apps.OpUninstall.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_scupgradable_text_"
    fi
    }
Opts.Apps.OpUninstall.ScUpgradable.Init

Opts.Apps.OpUpgrade.ScUpgradable.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_scupgradable_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scupgradable_flag_=false
    [[ $_obj_opts_apps_opupgrade_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scupgradable_flag_
    }
Opts.Apps.OpUpgrade.ScUpgradable.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_scupgradable_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scupgradable_enable_=false
    [[ $_obj_opts_apps_opupgrade_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scupgradable_enable_
    }
Opts.Apps.OpUpgrade.ScUpgradable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scupgradable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_scupgradable_changes_flag_=false
    }
Opts.Apps.OpUpgrade.ScUpgradable.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_scupgradable_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scupgradable_enable_=true
    [[ $_obj_opts_apps_opupgrade_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scupgradable_enable_
    }
Opts.Apps.OpUpgrade.ScUpgradable.Init()
    {
    _obj_opts_apps_opupgrade_scupgradable_text_=''
    _obj_opts_apps_opupgrade_scupgradable_flag_=false
    _obj_opts_apps_opupgrade_scupgradable_changes_flag_=true
    _obj_opts_apps_opupgrade_scupgradable_enable_=false
    }
Opts.Apps.OpUpgrade.ScUpgradable.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_scupgradable_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScUpgradable.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_scupgradable_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScUpgradable.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_scupgradable_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.ScUpgradable.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_scupgradable_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.ScUpgradable.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_scupgradable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scupgradable_changes_flag_=true
    }
Opts.Apps.OpUpgrade.ScUpgradable.Set()
    {
    [[ $_obj_opts_apps_opupgrade_scupgradable_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_scupgradable_flag_=true
    [[ $_obj_opts_apps_opupgrade_scupgradable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_scupgradable_flag_
    }
Opts.Apps.OpUpgrade.ScUpgradable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_scupgradable_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_scupgradable_text_"
    fi
    }
Opts.Apps.OpUpgrade.ScUpgradable.Init

Opts.Apps.OpBackup.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isbackedup_flag_=false
    [[ $_obj_opts_apps_opbackup_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isbackedup_flag_
    }
Opts.Apps.OpBackup.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isbackedup_enable_=false
    [[ $_obj_opts_apps_opbackup_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isbackedup_enable_
    }
Opts.Apps.OpBackup.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isbackedup_changes_flag_=false
    }
Opts.Apps.OpBackup.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isbackedup_enable_=true
    [[ $_obj_opts_apps_opbackup_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isbackedup_enable_
    }
Opts.Apps.OpBackup.IsBackedUp.Init()
    {
    _obj_opts_apps_opbackup_isbackedup_text_=''
    _obj_opts_apps_opbackup_isbackedup_flag_=false
    _obj_opts_apps_opbackup_isbackedup_changes_flag_=true
    _obj_opts_apps_opbackup_isbackedup_enable_=false
    }
Opts.Apps.OpBackup.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isbackedup_changes_flag_=true
    }
Opts.Apps.OpBackup.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_opbackup_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isbackedup_flag_=true
    [[ $_obj_opts_apps_opbackup_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isbackedup_flag_
    }
Opts.Apps.OpBackup.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isbackedup_text_"
    fi
    }
Opts.Apps.OpBackup.IsBackedUp.Init

Opts.Apps.OpBackup.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntbackedup_flag_=false
    [[ $_obj_opts_apps_opbackup_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntbackedup_flag_
    }
Opts.Apps.OpBackup.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntbackedup_enable_=false
    [[ $_obj_opts_apps_opbackup_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntbackedup_enable_
    }
Opts.Apps.OpBackup.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntbackedup_changes_flag_=false
    }
Opts.Apps.OpBackup.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntbackedup_enable_=true
    [[ $_obj_opts_apps_opbackup_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntbackedup_enable_
    }
Opts.Apps.OpBackup.IsNtBackedUp.Init()
    {
    _obj_opts_apps_opbackup_isntbackedup_text_=''
    _obj_opts_apps_opbackup_isntbackedup_flag_=false
    _obj_opts_apps_opbackup_isntbackedup_changes_flag_=true
    _obj_opts_apps_opbackup_isntbackedup_enable_=false
    }
Opts.Apps.OpBackup.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntbackedup_changes_flag_=true
    }
Opts.Apps.OpBackup.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_opbackup_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntbackedup_flag_=true
    [[ $_obj_opts_apps_opbackup_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntbackedup_flag_
    }
Opts.Apps.OpBackup.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isntbackedup_text_"
    fi
    }
Opts.Apps.OpBackup.IsNtBackedUp.Init

Opts.Apps.OpDownload.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isbackedup_flag_=false
    [[ $_obj_opts_apps_opdownload_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isbackedup_flag_
    }
Opts.Apps.OpDownload.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isbackedup_enable_=false
    [[ $_obj_opts_apps_opdownload_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isbackedup_enable_
    }
Opts.Apps.OpDownload.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isbackedup_changes_flag_=false
    }
Opts.Apps.OpDownload.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isbackedup_enable_=true
    [[ $_obj_opts_apps_opdownload_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isbackedup_enable_
    }
Opts.Apps.OpDownload.IsBackedUp.Init()
    {
    _obj_opts_apps_opdownload_isbackedup_text_=''
    _obj_opts_apps_opdownload_isbackedup_flag_=false
    _obj_opts_apps_opdownload_isbackedup_changes_flag_=true
    _obj_opts_apps_opdownload_isbackedup_enable_=false
    }
Opts.Apps.OpDownload.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isbackedup_changes_flag_=true
    }
Opts.Apps.OpDownload.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_opdownload_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isbackedup_flag_=true
    [[ $_obj_opts_apps_opdownload_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isbackedup_flag_
    }
Opts.Apps.OpDownload.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isbackedup_text_"
    fi
    }
Opts.Apps.OpDownload.IsBackedUp.Init

Opts.Apps.OpDownload.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntbackedup_flag_=false
    [[ $_obj_opts_apps_opdownload_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntbackedup_flag_
    }
Opts.Apps.OpDownload.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntbackedup_enable_=false
    [[ $_obj_opts_apps_opdownload_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntbackedup_enable_
    }
Opts.Apps.OpDownload.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntbackedup_changes_flag_=false
    }
Opts.Apps.OpDownload.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntbackedup_enable_=true
    [[ $_obj_opts_apps_opdownload_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntbackedup_enable_
    }
Opts.Apps.OpDownload.IsNtBackedUp.Init()
    {
    _obj_opts_apps_opdownload_isntbackedup_text_=''
    _obj_opts_apps_opdownload_isntbackedup_flag_=false
    _obj_opts_apps_opdownload_isntbackedup_changes_flag_=true
    _obj_opts_apps_opdownload_isntbackedup_enable_=false
    }
Opts.Apps.OpDownload.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntbackedup_changes_flag_=true
    }
Opts.Apps.OpDownload.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_opdownload_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntbackedup_flag_=true
    [[ $_obj_opts_apps_opdownload_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntbackedup_flag_
    }
Opts.Apps.OpDownload.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isntbackedup_text_"
    fi
    }
Opts.Apps.OpDownload.IsNtBackedUp.Init

Opts.Apps.OpInstall.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isbackedup_flag_=false
    [[ $_obj_opts_apps_opinstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isbackedup_flag_
    }
Opts.Apps.OpInstall.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isbackedup_enable_=false
    [[ $_obj_opts_apps_opinstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isbackedup_enable_
    }
Opts.Apps.OpInstall.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isbackedup_changes_flag_=false
    }
Opts.Apps.OpInstall.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isbackedup_enable_=true
    [[ $_obj_opts_apps_opinstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isbackedup_enable_
    }
Opts.Apps.OpInstall.IsBackedUp.Init()
    {
    _obj_opts_apps_opinstall_isbackedup_text_=''
    _obj_opts_apps_opinstall_isbackedup_flag_=false
    _obj_opts_apps_opinstall_isbackedup_changes_flag_=true
    _obj_opts_apps_opinstall_isbackedup_enable_=false
    }
Opts.Apps.OpInstall.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isbackedup_changes_flag_=true
    }
Opts.Apps.OpInstall.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_opinstall_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isbackedup_flag_=true
    [[ $_obj_opts_apps_opinstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isbackedup_flag_
    }
Opts.Apps.OpInstall.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isbackedup_text_"
    fi
    }
Opts.Apps.OpInstall.IsBackedUp.Init

Opts.Apps.OpInstall.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntbackedup_flag_=false
    [[ $_obj_opts_apps_opinstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntbackedup_flag_
    }
Opts.Apps.OpInstall.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntbackedup_enable_=false
    [[ $_obj_opts_apps_opinstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntbackedup_enable_
    }
Opts.Apps.OpInstall.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntbackedup_changes_flag_=false
    }
Opts.Apps.OpInstall.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntbackedup_enable_=true
    [[ $_obj_opts_apps_opinstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntbackedup_enable_
    }
Opts.Apps.OpInstall.IsNtBackedUp.Init()
    {
    _obj_opts_apps_opinstall_isntbackedup_text_=''
    _obj_opts_apps_opinstall_isntbackedup_flag_=false
    _obj_opts_apps_opinstall_isntbackedup_changes_flag_=true
    _obj_opts_apps_opinstall_isntbackedup_enable_=false
    }
Opts.Apps.OpInstall.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntbackedup_changes_flag_=true
    }
Opts.Apps.OpInstall.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_opinstall_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntbackedup_flag_=true
    [[ $_obj_opts_apps_opinstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntbackedup_flag_
    }
Opts.Apps.OpInstall.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isntbackedup_text_"
    fi
    }
Opts.Apps.OpInstall.IsNtBackedUp.Init

Opts.Apps.OpRebuild.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isbackedup_flag_=false
    [[ $_obj_opts_apps_oprebuild_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isbackedup_flag_
    }
Opts.Apps.OpRebuild.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isbackedup_enable_=false
    [[ $_obj_opts_apps_oprebuild_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isbackedup_enable_
    }
Opts.Apps.OpRebuild.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isbackedup_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isbackedup_enable_=true
    [[ $_obj_opts_apps_oprebuild_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isbackedup_enable_
    }
Opts.Apps.OpRebuild.IsBackedUp.Init()
    {
    _obj_opts_apps_oprebuild_isbackedup_text_=''
    _obj_opts_apps_oprebuild_isbackedup_flag_=false
    _obj_opts_apps_oprebuild_isbackedup_changes_flag_=true
    _obj_opts_apps_oprebuild_isbackedup_enable_=false
    }
Opts.Apps.OpRebuild.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isbackedup_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isbackedup_flag_=true
    [[ $_obj_opts_apps_oprebuild_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isbackedup_flag_
    }
Opts.Apps.OpRebuild.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isbackedup_text_"
    fi
    }
Opts.Apps.OpRebuild.IsBackedUp.Init

Opts.Apps.OpRebuild.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntbackedup_flag_=false
    [[ $_obj_opts_apps_oprebuild_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntbackedup_flag_
    }
Opts.Apps.OpRebuild.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntbackedup_enable_=false
    [[ $_obj_opts_apps_oprebuild_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntbackedup_enable_
    }
Opts.Apps.OpRebuild.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntbackedup_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntbackedup_enable_=true
    [[ $_obj_opts_apps_oprebuild_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntbackedup_enable_
    }
Opts.Apps.OpRebuild.IsNtBackedUp.Init()
    {
    _obj_opts_apps_oprebuild_isntbackedup_text_=''
    _obj_opts_apps_oprebuild_isntbackedup_flag_=false
    _obj_opts_apps_oprebuild_isntbackedup_changes_flag_=true
    _obj_opts_apps_oprebuild_isntbackedup_enable_=false
    }
Opts.Apps.OpRebuild.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntbackedup_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntbackedup_flag_=true
    [[ $_obj_opts_apps_oprebuild_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntbackedup_flag_
    }
Opts.Apps.OpRebuild.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isntbackedup_text_"
    fi
    }
Opts.Apps.OpRebuild.IsNtBackedUp.Init

Opts.Apps.OpReinstall.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isbackedup_flag_=false
    [[ $_obj_opts_apps_opreinstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isbackedup_flag_
    }
Opts.Apps.OpReinstall.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isbackedup_enable_=false
    [[ $_obj_opts_apps_opreinstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isbackedup_enable_
    }
Opts.Apps.OpReinstall.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isbackedup_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isbackedup_enable_=true
    [[ $_obj_opts_apps_opreinstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isbackedup_enable_
    }
Opts.Apps.OpReinstall.IsBackedUp.Init()
    {
    _obj_opts_apps_opreinstall_isbackedup_text_=''
    _obj_opts_apps_opreinstall_isbackedup_flag_=false
    _obj_opts_apps_opreinstall_isbackedup_changes_flag_=true
    _obj_opts_apps_opreinstall_isbackedup_enable_=false
    }
Opts.Apps.OpReinstall.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isbackedup_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isbackedup_flag_=true
    [[ $_obj_opts_apps_opreinstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isbackedup_flag_
    }
Opts.Apps.OpReinstall.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isbackedup_text_"
    fi
    }
Opts.Apps.OpReinstall.IsBackedUp.Init

Opts.Apps.OpReinstall.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntbackedup_flag_=false
    [[ $_obj_opts_apps_opreinstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntbackedup_flag_
    }
Opts.Apps.OpReinstall.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntbackedup_enable_=false
    [[ $_obj_opts_apps_opreinstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntbackedup_enable_
    }
Opts.Apps.OpReinstall.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntbackedup_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntbackedup_enable_=true
    [[ $_obj_opts_apps_opreinstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntbackedup_enable_
    }
Opts.Apps.OpReinstall.IsNtBackedUp.Init()
    {
    _obj_opts_apps_opreinstall_isntbackedup_text_=''
    _obj_opts_apps_opreinstall_isntbackedup_flag_=false
    _obj_opts_apps_opreinstall_isntbackedup_changes_flag_=true
    _obj_opts_apps_opreinstall_isntbackedup_enable_=false
    }
Opts.Apps.OpReinstall.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntbackedup_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntbackedup_flag_=true
    [[ $_obj_opts_apps_opreinstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntbackedup_flag_
    }
Opts.Apps.OpReinstall.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isntbackedup_text_"
    fi
    }
Opts.Apps.OpReinstall.IsNtBackedUp.Init

Opts.Apps.OpRestart.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isbackedup_flag_=false
    [[ $_obj_opts_apps_oprestart_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isbackedup_flag_
    }
Opts.Apps.OpRestart.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isbackedup_enable_=false
    [[ $_obj_opts_apps_oprestart_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isbackedup_enable_
    }
Opts.Apps.OpRestart.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isbackedup_changes_flag_=false
    }
Opts.Apps.OpRestart.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isbackedup_enable_=true
    [[ $_obj_opts_apps_oprestart_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isbackedup_enable_
    }
Opts.Apps.OpRestart.IsBackedUp.Init()
    {
    _obj_opts_apps_oprestart_isbackedup_text_=''
    _obj_opts_apps_oprestart_isbackedup_flag_=false
    _obj_opts_apps_oprestart_isbackedup_changes_flag_=true
    _obj_opts_apps_oprestart_isbackedup_enable_=false
    }
Opts.Apps.OpRestart.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isbackedup_changes_flag_=true
    }
Opts.Apps.OpRestart.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_oprestart_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isbackedup_flag_=true
    [[ $_obj_opts_apps_oprestart_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isbackedup_flag_
    }
Opts.Apps.OpRestart.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isbackedup_text_"
    fi
    }
Opts.Apps.OpRestart.IsBackedUp.Init

Opts.Apps.OpRestart.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntbackedup_flag_=false
    [[ $_obj_opts_apps_oprestart_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntbackedup_flag_
    }
Opts.Apps.OpRestart.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntbackedup_enable_=false
    [[ $_obj_opts_apps_oprestart_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntbackedup_enable_
    }
Opts.Apps.OpRestart.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntbackedup_changes_flag_=false
    }
Opts.Apps.OpRestart.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntbackedup_enable_=true
    [[ $_obj_opts_apps_oprestart_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntbackedup_enable_
    }
Opts.Apps.OpRestart.IsNtBackedUp.Init()
    {
    _obj_opts_apps_oprestart_isntbackedup_text_=''
    _obj_opts_apps_oprestart_isntbackedup_flag_=false
    _obj_opts_apps_oprestart_isntbackedup_changes_flag_=true
    _obj_opts_apps_oprestart_isntbackedup_enable_=false
    }
Opts.Apps.OpRestart.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntbackedup_changes_flag_=true
    }
Opts.Apps.OpRestart.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_oprestart_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntbackedup_flag_=true
    [[ $_obj_opts_apps_oprestart_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntbackedup_flag_
    }
Opts.Apps.OpRestart.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isntbackedup_text_"
    fi
    }
Opts.Apps.OpRestart.IsNtBackedUp.Init

Opts.Apps.OpRestore.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isbackedup_flag_=false
    [[ $_obj_opts_apps_oprestore_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isbackedup_flag_
    }
Opts.Apps.OpRestore.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isbackedup_enable_=false
    [[ $_obj_opts_apps_oprestore_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isbackedup_enable_
    }
Opts.Apps.OpRestore.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isbackedup_changes_flag_=false
    }
Opts.Apps.OpRestore.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isbackedup_enable_=true
    [[ $_obj_opts_apps_oprestore_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isbackedup_enable_
    }
Opts.Apps.OpRestore.IsBackedUp.Init()
    {
    _obj_opts_apps_oprestore_isbackedup_text_=''
    _obj_opts_apps_oprestore_isbackedup_flag_=false
    _obj_opts_apps_oprestore_isbackedup_changes_flag_=true
    _obj_opts_apps_oprestore_isbackedup_enable_=false
    }
Opts.Apps.OpRestore.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isbackedup_changes_flag_=true
    }
Opts.Apps.OpRestore.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_oprestore_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isbackedup_flag_=true
    [[ $_obj_opts_apps_oprestore_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isbackedup_flag_
    }
Opts.Apps.OpRestore.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isbackedup_text_"
    fi
    }
Opts.Apps.OpRestore.IsBackedUp.Init

Opts.Apps.OpRestore.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntbackedup_flag_=false
    [[ $_obj_opts_apps_oprestore_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntbackedup_flag_
    }
Opts.Apps.OpRestore.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntbackedup_enable_=false
    [[ $_obj_opts_apps_oprestore_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntbackedup_enable_
    }
Opts.Apps.OpRestore.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntbackedup_changes_flag_=false
    }
Opts.Apps.OpRestore.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntbackedup_enable_=true
    [[ $_obj_opts_apps_oprestore_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntbackedup_enable_
    }
Opts.Apps.OpRestore.IsNtBackedUp.Init()
    {
    _obj_opts_apps_oprestore_isntbackedup_text_=''
    _obj_opts_apps_oprestore_isntbackedup_flag_=false
    _obj_opts_apps_oprestore_isntbackedup_changes_flag_=true
    _obj_opts_apps_oprestore_isntbackedup_enable_=false
    }
Opts.Apps.OpRestore.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntbackedup_changes_flag_=true
    }
Opts.Apps.OpRestore.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_oprestore_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntbackedup_flag_=true
    [[ $_obj_opts_apps_oprestore_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntbackedup_flag_
    }
Opts.Apps.OpRestore.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isntbackedup_text_"
    fi
    }
Opts.Apps.OpRestore.IsNtBackedUp.Init

Opts.Apps.OpStart.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opstart_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isbackedup_flag_=false
    [[ $_obj_opts_apps_opstart_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isbackedup_flag_
    }
Opts.Apps.OpStart.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opstart_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isbackedup_enable_=false
    [[ $_obj_opts_apps_opstart_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isbackedup_enable_
    }
Opts.Apps.OpStart.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isbackedup_changes_flag_=false
    }
Opts.Apps.OpStart.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opstart_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isbackedup_enable_=true
    [[ $_obj_opts_apps_opstart_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isbackedup_enable_
    }
Opts.Apps.OpStart.IsBackedUp.Init()
    {
    _obj_opts_apps_opstart_isbackedup_text_=''
    _obj_opts_apps_opstart_isbackedup_flag_=false
    _obj_opts_apps_opstart_isbackedup_changes_flag_=true
    _obj_opts_apps_opstart_isbackedup_enable_=false
    }
Opts.Apps.OpStart.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isbackedup_changes_flag_=true
    }
Opts.Apps.OpStart.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_opstart_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isbackedup_flag_=true
    [[ $_obj_opts_apps_opstart_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isbackedup_flag_
    }
Opts.Apps.OpStart.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isbackedup_text_"
    fi
    }
Opts.Apps.OpStart.IsBackedUp.Init

Opts.Apps.OpStart.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opstart_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntbackedup_flag_=false
    [[ $_obj_opts_apps_opstart_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntbackedup_flag_
    }
Opts.Apps.OpStart.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opstart_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntbackedup_enable_=false
    [[ $_obj_opts_apps_opstart_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntbackedup_enable_
    }
Opts.Apps.OpStart.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntbackedup_changes_flag_=false
    }
Opts.Apps.OpStart.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opstart_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntbackedup_enable_=true
    [[ $_obj_opts_apps_opstart_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntbackedup_enable_
    }
Opts.Apps.OpStart.IsNtBackedUp.Init()
    {
    _obj_opts_apps_opstart_isntbackedup_text_=''
    _obj_opts_apps_opstart_isntbackedup_flag_=false
    _obj_opts_apps_opstart_isntbackedup_changes_flag_=true
    _obj_opts_apps_opstart_isntbackedup_enable_=false
    }
Opts.Apps.OpStart.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntbackedup_changes_flag_=true
    }
Opts.Apps.OpStart.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_opstart_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntbackedup_flag_=true
    [[ $_obj_opts_apps_opstart_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntbackedup_flag_
    }
Opts.Apps.OpStart.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isntbackedup_text_"
    fi
    }
Opts.Apps.OpStart.IsNtBackedUp.Init

Opts.Apps.OpStop.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opstop_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isbackedup_flag_=false
    [[ $_obj_opts_apps_opstop_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isbackedup_flag_
    }
Opts.Apps.OpStop.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opstop_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isbackedup_enable_=false
    [[ $_obj_opts_apps_opstop_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isbackedup_enable_
    }
Opts.Apps.OpStop.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isbackedup_changes_flag_=false
    }
Opts.Apps.OpStop.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opstop_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isbackedup_enable_=true
    [[ $_obj_opts_apps_opstop_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isbackedup_enable_
    }
Opts.Apps.OpStop.IsBackedUp.Init()
    {
    _obj_opts_apps_opstop_isbackedup_text_=''
    _obj_opts_apps_opstop_isbackedup_flag_=false
    _obj_opts_apps_opstop_isbackedup_changes_flag_=true
    _obj_opts_apps_opstop_isbackedup_enable_=false
    }
Opts.Apps.OpStop.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isbackedup_changes_flag_=true
    }
Opts.Apps.OpStop.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_opstop_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isbackedup_flag_=true
    [[ $_obj_opts_apps_opstop_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isbackedup_flag_
    }
Opts.Apps.OpStop.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isbackedup_text_"
    fi
    }
Opts.Apps.OpStop.IsBackedUp.Init

Opts.Apps.OpStop.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opstop_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntbackedup_flag_=false
    [[ $_obj_opts_apps_opstop_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntbackedup_flag_
    }
Opts.Apps.OpStop.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opstop_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntbackedup_enable_=false
    [[ $_obj_opts_apps_opstop_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntbackedup_enable_
    }
Opts.Apps.OpStop.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntbackedup_changes_flag_=false
    }
Opts.Apps.OpStop.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opstop_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntbackedup_enable_=true
    [[ $_obj_opts_apps_opstop_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntbackedup_enable_
    }
Opts.Apps.OpStop.IsNtBackedUp.Init()
    {
    _obj_opts_apps_opstop_isntbackedup_text_=''
    _obj_opts_apps_opstop_isntbackedup_flag_=false
    _obj_opts_apps_opstop_isntbackedup_changes_flag_=true
    _obj_opts_apps_opstop_isntbackedup_enable_=false
    }
Opts.Apps.OpStop.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntbackedup_changes_flag_=true
    }
Opts.Apps.OpStop.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_opstop_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntbackedup_flag_=true
    [[ $_obj_opts_apps_opstop_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntbackedup_flag_
    }
Opts.Apps.OpStop.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isntbackedup_text_"
    fi
    }
Opts.Apps.OpStop.IsNtBackedUp.Init

Opts.Apps.OpUninstall.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isbackedup_flag_=false
    [[ $_obj_opts_apps_opuninstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isbackedup_flag_
    }
Opts.Apps.OpUninstall.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isbackedup_enable_=false
    [[ $_obj_opts_apps_opuninstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isbackedup_enable_
    }
Opts.Apps.OpUninstall.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isbackedup_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isbackedup_enable_=true
    [[ $_obj_opts_apps_opuninstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isbackedup_enable_
    }
Opts.Apps.OpUninstall.IsBackedUp.Init()
    {
    _obj_opts_apps_opuninstall_isbackedup_text_=''
    _obj_opts_apps_opuninstall_isbackedup_flag_=false
    _obj_opts_apps_opuninstall_isbackedup_changes_flag_=true
    _obj_opts_apps_opuninstall_isbackedup_enable_=false
    }
Opts.Apps.OpUninstall.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isbackedup_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isbackedup_flag_=true
    [[ $_obj_opts_apps_opuninstall_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isbackedup_flag_
    }
Opts.Apps.OpUninstall.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isbackedup_text_"
    fi
    }
Opts.Apps.OpUninstall.IsBackedUp.Init

Opts.Apps.OpUninstall.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntbackedup_flag_=false
    [[ $_obj_opts_apps_opuninstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntbackedup_flag_
    }
Opts.Apps.OpUninstall.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntbackedup_enable_=false
    [[ $_obj_opts_apps_opuninstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntbackedup_enable_
    }
Opts.Apps.OpUninstall.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntbackedup_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntbackedup_enable_=true
    [[ $_obj_opts_apps_opuninstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntbackedup_enable_
    }
Opts.Apps.OpUninstall.IsNtBackedUp.Init()
    {
    _obj_opts_apps_opuninstall_isntbackedup_text_=''
    _obj_opts_apps_opuninstall_isntbackedup_flag_=false
    _obj_opts_apps_opuninstall_isntbackedup_changes_flag_=true
    _obj_opts_apps_opuninstall_isntbackedup_enable_=false
    }
Opts.Apps.OpUninstall.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntbackedup_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntbackedup_flag_=true
    [[ $_obj_opts_apps_opuninstall_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntbackedup_flag_
    }
Opts.Apps.OpUninstall.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isntbackedup_text_"
    fi
    }
Opts.Apps.OpUninstall.IsNtBackedUp.Init

Opts.Apps.OpUpgrade.IsBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isbackedup_flag_=false
    [[ $_obj_opts_apps_opupgrade_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isbackedup_flag_
    }
Opts.Apps.OpUpgrade.IsBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isbackedup_enable_=false
    [[ $_obj_opts_apps_opupgrade_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isbackedup_enable_
    }
Opts.Apps.OpUpgrade.IsBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isbackedup_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isbackedup_enable_=true
    [[ $_obj_opts_apps_opupgrade_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isbackedup_enable_
    }
Opts.Apps.OpUpgrade.IsBackedUp.Init()
    {
    _obj_opts_apps_opupgrade_isbackedup_text_=''
    _obj_opts_apps_opupgrade_isbackedup_flag_=false
    _obj_opts_apps_opupgrade_isbackedup_changes_flag_=true
    _obj_opts_apps_opupgrade_isbackedup_enable_=false
    }
Opts.Apps.OpUpgrade.IsBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isbackedup_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsBackedUp.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isbackedup_flag_=true
    [[ $_obj_opts_apps_opupgrade_isbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isbackedup_flag_
    }
Opts.Apps.OpUpgrade.IsBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isbackedup_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsBackedUp.Init

Opts.Apps.OpUpgrade.IsNtBackedUp.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isntbackedup_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntbackedup_flag_=false
    [[ $_obj_opts_apps_opupgrade_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntbackedup_flag_
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isntbackedup_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntbackedup_enable_=false
    [[ $_obj_opts_apps_opupgrade_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntbackedup_enable_
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntbackedup_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntbackedup_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isntbackedup_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntbackedup_enable_=true
    [[ $_obj_opts_apps_opupgrade_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntbackedup_enable_
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.Init()
    {
    _obj_opts_apps_opupgrade_isntbackedup_text_=''
    _obj_opts_apps_opupgrade_isntbackedup_flag_=false
    _obj_opts_apps_opupgrade_isntbackedup_changes_flag_=true
    _obj_opts_apps_opupgrade_isntbackedup_enable_=false
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntbackedup_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntbackedup_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isntbackedup_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isntbackedup_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntbackedup_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntbackedup_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isntbackedup_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntbackedup_flag_=true
    [[ $_obj_opts_apps_opupgrade_isntbackedup_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntbackedup_flag_
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isntbackedup_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isntbackedup_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsNtBackedUp.Init

Opts.Apps.OpBackup.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isdownloaded_flag_=false
    [[ $_obj_opts_apps_opbackup_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isdownloaded_flag_
    }
Opts.Apps.OpBackup.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isdownloaded_enable_=false
    [[ $_obj_opts_apps_opbackup_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isdownloaded_enable_
    }
Opts.Apps.OpBackup.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isdownloaded_changes_flag_=false
    }
Opts.Apps.OpBackup.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isdownloaded_enable_=true
    [[ $_obj_opts_apps_opbackup_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isdownloaded_enable_
    }
Opts.Apps.OpBackup.IsDownloaded.Init()
    {
    _obj_opts_apps_opbackup_isdownloaded_text_=''
    _obj_opts_apps_opbackup_isdownloaded_flag_=false
    _obj_opts_apps_opbackup_isdownloaded_changes_flag_=true
    _obj_opts_apps_opbackup_isdownloaded_enable_=false
    }
Opts.Apps.OpBackup.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isdownloaded_changes_flag_=true
    }
Opts.Apps.OpBackup.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_opbackup_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isdownloaded_flag_=true
    [[ $_obj_opts_apps_opbackup_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isdownloaded_flag_
    }
Opts.Apps.OpBackup.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isdownloaded_text_"
    fi
    }
Opts.Apps.OpBackup.IsDownloaded.Init

Opts.Apps.OpBackup.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_opbackup_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntdownloaded_flag_
    }
Opts.Apps.OpBackup.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_opbackup_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntdownloaded_enable_
    }
Opts.Apps.OpBackup.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntdownloaded_changes_flag_=false
    }
Opts.Apps.OpBackup.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_opbackup_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntdownloaded_enable_
    }
Opts.Apps.OpBackup.IsNtDownloaded.Init()
    {
    _obj_opts_apps_opbackup_isntdownloaded_text_=''
    _obj_opts_apps_opbackup_isntdownloaded_flag_=false
    _obj_opts_apps_opbackup_isntdownloaded_changes_flag_=true
    _obj_opts_apps_opbackup_isntdownloaded_enable_=false
    }
Opts.Apps.OpBackup.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntdownloaded_changes_flag_=true
    }
Opts.Apps.OpBackup.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_opbackup_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_opbackup_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntdownloaded_flag_
    }
Opts.Apps.OpBackup.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isntdownloaded_text_"
    fi
    }
Opts.Apps.OpBackup.IsNtDownloaded.Init

Opts.Apps.OpDownload.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isdownloaded_flag_=false
    [[ $_obj_opts_apps_opdownload_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isdownloaded_flag_
    }
Opts.Apps.OpDownload.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isdownloaded_enable_=false
    [[ $_obj_opts_apps_opdownload_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isdownloaded_enable_
    }
Opts.Apps.OpDownload.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isdownloaded_changes_flag_=false
    }
Opts.Apps.OpDownload.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isdownloaded_enable_=true
    [[ $_obj_opts_apps_opdownload_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isdownloaded_enable_
    }
Opts.Apps.OpDownload.IsDownloaded.Init()
    {
    _obj_opts_apps_opdownload_isdownloaded_text_=''
    _obj_opts_apps_opdownload_isdownloaded_flag_=false
    _obj_opts_apps_opdownload_isdownloaded_changes_flag_=true
    _obj_opts_apps_opdownload_isdownloaded_enable_=false
    }
Opts.Apps.OpDownload.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isdownloaded_changes_flag_=true
    }
Opts.Apps.OpDownload.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_opdownload_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isdownloaded_flag_=true
    [[ $_obj_opts_apps_opdownload_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isdownloaded_flag_
    }
Opts.Apps.OpDownload.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isdownloaded_text_"
    fi
    }
Opts.Apps.OpDownload.IsDownloaded.Init

Opts.Apps.OpDownload.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_opdownload_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntdownloaded_flag_
    }
Opts.Apps.OpDownload.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_opdownload_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntdownloaded_enable_
    }
Opts.Apps.OpDownload.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntdownloaded_changes_flag_=false
    }
Opts.Apps.OpDownload.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_opdownload_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntdownloaded_enable_
    }
Opts.Apps.OpDownload.IsNtDownloaded.Init()
    {
    _obj_opts_apps_opdownload_isntdownloaded_text_=''
    _obj_opts_apps_opdownload_isntdownloaded_flag_=false
    _obj_opts_apps_opdownload_isntdownloaded_changes_flag_=true
    _obj_opts_apps_opdownload_isntdownloaded_enable_=false
    }
Opts.Apps.OpDownload.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntdownloaded_changes_flag_=true
    }
Opts.Apps.OpDownload.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_opdownload_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_opdownload_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntdownloaded_flag_
    }
Opts.Apps.OpDownload.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isntdownloaded_text_"
    fi
    }
Opts.Apps.OpDownload.IsNtDownloaded.Init

Opts.Apps.OpInstall.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isdownloaded_flag_=false
    [[ $_obj_opts_apps_opinstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isdownloaded_flag_
    }
Opts.Apps.OpInstall.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isdownloaded_enable_=false
    [[ $_obj_opts_apps_opinstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isdownloaded_enable_
    }
Opts.Apps.OpInstall.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isdownloaded_changes_flag_=false
    }
Opts.Apps.OpInstall.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isdownloaded_enable_=true
    [[ $_obj_opts_apps_opinstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isdownloaded_enable_
    }
Opts.Apps.OpInstall.IsDownloaded.Init()
    {
    _obj_opts_apps_opinstall_isdownloaded_text_=''
    _obj_opts_apps_opinstall_isdownloaded_flag_=false
    _obj_opts_apps_opinstall_isdownloaded_changes_flag_=true
    _obj_opts_apps_opinstall_isdownloaded_enable_=false
    }
Opts.Apps.OpInstall.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isdownloaded_changes_flag_=true
    }
Opts.Apps.OpInstall.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_opinstall_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isdownloaded_flag_=true
    [[ $_obj_opts_apps_opinstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isdownloaded_flag_
    }
Opts.Apps.OpInstall.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isdownloaded_text_"
    fi
    }
Opts.Apps.OpInstall.IsDownloaded.Init

Opts.Apps.OpInstall.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_opinstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntdownloaded_flag_
    }
Opts.Apps.OpInstall.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_opinstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntdownloaded_enable_
    }
Opts.Apps.OpInstall.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntdownloaded_changes_flag_=false
    }
Opts.Apps.OpInstall.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_opinstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntdownloaded_enable_
    }
Opts.Apps.OpInstall.IsNtDownloaded.Init()
    {
    _obj_opts_apps_opinstall_isntdownloaded_text_=''
    _obj_opts_apps_opinstall_isntdownloaded_flag_=false
    _obj_opts_apps_opinstall_isntdownloaded_changes_flag_=true
    _obj_opts_apps_opinstall_isntdownloaded_enable_=false
    }
Opts.Apps.OpInstall.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntdownloaded_changes_flag_=true
    }
Opts.Apps.OpInstall.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_opinstall_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_opinstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntdownloaded_flag_
    }
Opts.Apps.OpInstall.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isntdownloaded_text_"
    fi
    }
Opts.Apps.OpInstall.IsNtDownloaded.Init

Opts.Apps.OpRebuild.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isdownloaded_flag_=false
    [[ $_obj_opts_apps_oprebuild_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isdownloaded_flag_
    }
Opts.Apps.OpRebuild.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isdownloaded_enable_=false
    [[ $_obj_opts_apps_oprebuild_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isdownloaded_enable_
    }
Opts.Apps.OpRebuild.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isdownloaded_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isdownloaded_enable_=true
    [[ $_obj_opts_apps_oprebuild_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isdownloaded_enable_
    }
Opts.Apps.OpRebuild.IsDownloaded.Init()
    {
    _obj_opts_apps_oprebuild_isdownloaded_text_=''
    _obj_opts_apps_oprebuild_isdownloaded_flag_=false
    _obj_opts_apps_oprebuild_isdownloaded_changes_flag_=true
    _obj_opts_apps_oprebuild_isdownloaded_enable_=false
    }
Opts.Apps.OpRebuild.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isdownloaded_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isdownloaded_flag_=true
    [[ $_obj_opts_apps_oprebuild_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isdownloaded_flag_
    }
Opts.Apps.OpRebuild.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isdownloaded_text_"
    fi
    }
Opts.Apps.OpRebuild.IsDownloaded.Init

Opts.Apps.OpRebuild.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntdownloaded_flag_
    }
Opts.Apps.OpRebuild.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntdownloaded_enable_
    }
Opts.Apps.OpRebuild.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntdownloaded_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntdownloaded_enable_
    }
Opts.Apps.OpRebuild.IsNtDownloaded.Init()
    {
    _obj_opts_apps_oprebuild_isntdownloaded_text_=''
    _obj_opts_apps_oprebuild_isntdownloaded_flag_=false
    _obj_opts_apps_oprebuild_isntdownloaded_changes_flag_=true
    _obj_opts_apps_oprebuild_isntdownloaded_enable_=false
    }
Opts.Apps.OpRebuild.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntdownloaded_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_oprebuild_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntdownloaded_flag_
    }
Opts.Apps.OpRebuild.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isntdownloaded_text_"
    fi
    }
Opts.Apps.OpRebuild.IsNtDownloaded.Init

Opts.Apps.OpReinstall.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isdownloaded_flag_=false
    [[ $_obj_opts_apps_opreinstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isdownloaded_flag_
    }
Opts.Apps.OpReinstall.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isdownloaded_enable_=false
    [[ $_obj_opts_apps_opreinstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isdownloaded_enable_
    }
Opts.Apps.OpReinstall.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isdownloaded_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isdownloaded_enable_=true
    [[ $_obj_opts_apps_opreinstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isdownloaded_enable_
    }
Opts.Apps.OpReinstall.IsDownloaded.Init()
    {
    _obj_opts_apps_opreinstall_isdownloaded_text_=''
    _obj_opts_apps_opreinstall_isdownloaded_flag_=false
    _obj_opts_apps_opreinstall_isdownloaded_changes_flag_=true
    _obj_opts_apps_opreinstall_isdownloaded_enable_=false
    }
Opts.Apps.OpReinstall.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isdownloaded_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isdownloaded_flag_=true
    [[ $_obj_opts_apps_opreinstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isdownloaded_flag_
    }
Opts.Apps.OpReinstall.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isdownloaded_text_"
    fi
    }
Opts.Apps.OpReinstall.IsDownloaded.Init

Opts.Apps.OpReinstall.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntdownloaded_flag_
    }
Opts.Apps.OpReinstall.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntdownloaded_enable_
    }
Opts.Apps.OpReinstall.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntdownloaded_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntdownloaded_enable_
    }
Opts.Apps.OpReinstall.IsNtDownloaded.Init()
    {
    _obj_opts_apps_opreinstall_isntdownloaded_text_=''
    _obj_opts_apps_opreinstall_isntdownloaded_flag_=false
    _obj_opts_apps_opreinstall_isntdownloaded_changes_flag_=true
    _obj_opts_apps_opreinstall_isntdownloaded_enable_=false
    }
Opts.Apps.OpReinstall.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntdownloaded_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_opreinstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntdownloaded_flag_
    }
Opts.Apps.OpReinstall.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isntdownloaded_text_"
    fi
    }
Opts.Apps.OpReinstall.IsNtDownloaded.Init

Opts.Apps.OpRestart.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isdownloaded_flag_=false
    [[ $_obj_opts_apps_oprestart_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isdownloaded_flag_
    }
Opts.Apps.OpRestart.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isdownloaded_enable_=false
    [[ $_obj_opts_apps_oprestart_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isdownloaded_enable_
    }
Opts.Apps.OpRestart.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isdownloaded_changes_flag_=false
    }
Opts.Apps.OpRestart.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isdownloaded_enable_=true
    [[ $_obj_opts_apps_oprestart_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isdownloaded_enable_
    }
Opts.Apps.OpRestart.IsDownloaded.Init()
    {
    _obj_opts_apps_oprestart_isdownloaded_text_=''
    _obj_opts_apps_oprestart_isdownloaded_flag_=false
    _obj_opts_apps_oprestart_isdownloaded_changes_flag_=true
    _obj_opts_apps_oprestart_isdownloaded_enable_=false
    }
Opts.Apps.OpRestart.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isdownloaded_changes_flag_=true
    }
Opts.Apps.OpRestart.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_oprestart_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isdownloaded_flag_=true
    [[ $_obj_opts_apps_oprestart_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isdownloaded_flag_
    }
Opts.Apps.OpRestart.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isdownloaded_text_"
    fi
    }
Opts.Apps.OpRestart.IsDownloaded.Init

Opts.Apps.OpRestart.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_oprestart_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntdownloaded_flag_
    }
Opts.Apps.OpRestart.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_oprestart_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntdownloaded_enable_
    }
Opts.Apps.OpRestart.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntdownloaded_changes_flag_=false
    }
Opts.Apps.OpRestart.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_oprestart_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntdownloaded_enable_
    }
Opts.Apps.OpRestart.IsNtDownloaded.Init()
    {
    _obj_opts_apps_oprestart_isntdownloaded_text_=''
    _obj_opts_apps_oprestart_isntdownloaded_flag_=false
    _obj_opts_apps_oprestart_isntdownloaded_changes_flag_=true
    _obj_opts_apps_oprestart_isntdownloaded_enable_=false
    }
Opts.Apps.OpRestart.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntdownloaded_changes_flag_=true
    }
Opts.Apps.OpRestart.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_oprestart_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_oprestart_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntdownloaded_flag_
    }
Opts.Apps.OpRestart.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isntdownloaded_text_"
    fi
    }
Opts.Apps.OpRestart.IsNtDownloaded.Init

Opts.Apps.OpRestore.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isdownloaded_flag_=false
    [[ $_obj_opts_apps_oprestore_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isdownloaded_flag_
    }
Opts.Apps.OpRestore.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isdownloaded_enable_=false
    [[ $_obj_opts_apps_oprestore_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isdownloaded_enable_
    }
Opts.Apps.OpRestore.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isdownloaded_changes_flag_=false
    }
Opts.Apps.OpRestore.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isdownloaded_enable_=true
    [[ $_obj_opts_apps_oprestore_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isdownloaded_enable_
    }
Opts.Apps.OpRestore.IsDownloaded.Init()
    {
    _obj_opts_apps_oprestore_isdownloaded_text_=''
    _obj_opts_apps_oprestore_isdownloaded_flag_=false
    _obj_opts_apps_oprestore_isdownloaded_changes_flag_=true
    _obj_opts_apps_oprestore_isdownloaded_enable_=false
    }
Opts.Apps.OpRestore.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isdownloaded_changes_flag_=true
    }
Opts.Apps.OpRestore.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_oprestore_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isdownloaded_flag_=true
    [[ $_obj_opts_apps_oprestore_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isdownloaded_flag_
    }
Opts.Apps.OpRestore.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isdownloaded_text_"
    fi
    }
Opts.Apps.OpRestore.IsDownloaded.Init

Opts.Apps.OpRestore.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_oprestore_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntdownloaded_flag_
    }
Opts.Apps.OpRestore.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_oprestore_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntdownloaded_enable_
    }
Opts.Apps.OpRestore.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntdownloaded_changes_flag_=false
    }
Opts.Apps.OpRestore.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_oprestore_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntdownloaded_enable_
    }
Opts.Apps.OpRestore.IsNtDownloaded.Init()
    {
    _obj_opts_apps_oprestore_isntdownloaded_text_=''
    _obj_opts_apps_oprestore_isntdownloaded_flag_=false
    _obj_opts_apps_oprestore_isntdownloaded_changes_flag_=true
    _obj_opts_apps_oprestore_isntdownloaded_enable_=false
    }
Opts.Apps.OpRestore.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntdownloaded_changes_flag_=true
    }
Opts.Apps.OpRestore.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_oprestore_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_oprestore_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntdownloaded_flag_
    }
Opts.Apps.OpRestore.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isntdownloaded_text_"
    fi
    }
Opts.Apps.OpRestore.IsNtDownloaded.Init

Opts.Apps.OpStart.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opstart_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isdownloaded_flag_=false
    [[ $_obj_opts_apps_opstart_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isdownloaded_flag_
    }
Opts.Apps.OpStart.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opstart_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isdownloaded_enable_=false
    [[ $_obj_opts_apps_opstart_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isdownloaded_enable_
    }
Opts.Apps.OpStart.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isdownloaded_changes_flag_=false
    }
Opts.Apps.OpStart.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opstart_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isdownloaded_enable_=true
    [[ $_obj_opts_apps_opstart_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isdownloaded_enable_
    }
Opts.Apps.OpStart.IsDownloaded.Init()
    {
    _obj_opts_apps_opstart_isdownloaded_text_=''
    _obj_opts_apps_opstart_isdownloaded_flag_=false
    _obj_opts_apps_opstart_isdownloaded_changes_flag_=true
    _obj_opts_apps_opstart_isdownloaded_enable_=false
    }
Opts.Apps.OpStart.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isdownloaded_changes_flag_=true
    }
Opts.Apps.OpStart.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_opstart_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isdownloaded_flag_=true
    [[ $_obj_opts_apps_opstart_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isdownloaded_flag_
    }
Opts.Apps.OpStart.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isdownloaded_text_"
    fi
    }
Opts.Apps.OpStart.IsDownloaded.Init

Opts.Apps.OpStart.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opstart_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_opstart_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntdownloaded_flag_
    }
Opts.Apps.OpStart.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opstart_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_opstart_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntdownloaded_enable_
    }
Opts.Apps.OpStart.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntdownloaded_changes_flag_=false
    }
Opts.Apps.OpStart.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opstart_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_opstart_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntdownloaded_enable_
    }
Opts.Apps.OpStart.IsNtDownloaded.Init()
    {
    _obj_opts_apps_opstart_isntdownloaded_text_=''
    _obj_opts_apps_opstart_isntdownloaded_flag_=false
    _obj_opts_apps_opstart_isntdownloaded_changes_flag_=true
    _obj_opts_apps_opstart_isntdownloaded_enable_=false
    }
Opts.Apps.OpStart.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntdownloaded_changes_flag_=true
    }
Opts.Apps.OpStart.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_opstart_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_opstart_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntdownloaded_flag_
    }
Opts.Apps.OpStart.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isntdownloaded_text_"
    fi
    }
Opts.Apps.OpStart.IsNtDownloaded.Init

Opts.Apps.OpStop.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opstop_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isdownloaded_flag_=false
    [[ $_obj_opts_apps_opstop_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isdownloaded_flag_
    }
Opts.Apps.OpStop.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opstop_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isdownloaded_enable_=false
    [[ $_obj_opts_apps_opstop_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isdownloaded_enable_
    }
Opts.Apps.OpStop.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isdownloaded_changes_flag_=false
    }
Opts.Apps.OpStop.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opstop_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isdownloaded_enable_=true
    [[ $_obj_opts_apps_opstop_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isdownloaded_enable_
    }
Opts.Apps.OpStop.IsDownloaded.Init()
    {
    _obj_opts_apps_opstop_isdownloaded_text_=''
    _obj_opts_apps_opstop_isdownloaded_flag_=false
    _obj_opts_apps_opstop_isdownloaded_changes_flag_=true
    _obj_opts_apps_opstop_isdownloaded_enable_=false
    }
Opts.Apps.OpStop.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isdownloaded_changes_flag_=true
    }
Opts.Apps.OpStop.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_opstop_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isdownloaded_flag_=true
    [[ $_obj_opts_apps_opstop_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isdownloaded_flag_
    }
Opts.Apps.OpStop.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isdownloaded_text_"
    fi
    }
Opts.Apps.OpStop.IsDownloaded.Init

Opts.Apps.OpStop.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opstop_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_opstop_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntdownloaded_flag_
    }
Opts.Apps.OpStop.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opstop_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_opstop_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntdownloaded_enable_
    }
Opts.Apps.OpStop.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntdownloaded_changes_flag_=false
    }
Opts.Apps.OpStop.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opstop_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_opstop_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntdownloaded_enable_
    }
Opts.Apps.OpStop.IsNtDownloaded.Init()
    {
    _obj_opts_apps_opstop_isntdownloaded_text_=''
    _obj_opts_apps_opstop_isntdownloaded_flag_=false
    _obj_opts_apps_opstop_isntdownloaded_changes_flag_=true
    _obj_opts_apps_opstop_isntdownloaded_enable_=false
    }
Opts.Apps.OpStop.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntdownloaded_changes_flag_=true
    }
Opts.Apps.OpStop.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_opstop_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_opstop_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntdownloaded_flag_
    }
Opts.Apps.OpStop.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isntdownloaded_text_"
    fi
    }
Opts.Apps.OpStop.IsNtDownloaded.Init

Opts.Apps.OpUninstall.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isdownloaded_flag_=false
    [[ $_obj_opts_apps_opuninstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isdownloaded_flag_
    }
Opts.Apps.OpUninstall.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isdownloaded_enable_=false
    [[ $_obj_opts_apps_opuninstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isdownloaded_enable_
    }
Opts.Apps.OpUninstall.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isdownloaded_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isdownloaded_enable_=true
    [[ $_obj_opts_apps_opuninstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isdownloaded_enable_
    }
Opts.Apps.OpUninstall.IsDownloaded.Init()
    {
    _obj_opts_apps_opuninstall_isdownloaded_text_=''
    _obj_opts_apps_opuninstall_isdownloaded_flag_=false
    _obj_opts_apps_opuninstall_isdownloaded_changes_flag_=true
    _obj_opts_apps_opuninstall_isdownloaded_enable_=false
    }
Opts.Apps.OpUninstall.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isdownloaded_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isdownloaded_flag_=true
    [[ $_obj_opts_apps_opuninstall_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isdownloaded_flag_
    }
Opts.Apps.OpUninstall.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isdownloaded_text_"
    fi
    }
Opts.Apps.OpUninstall.IsDownloaded.Init

Opts.Apps.OpUninstall.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntdownloaded_flag_
    }
Opts.Apps.OpUninstall.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntdownloaded_enable_
    }
Opts.Apps.OpUninstall.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntdownloaded_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntdownloaded_enable_
    }
Opts.Apps.OpUninstall.IsNtDownloaded.Init()
    {
    _obj_opts_apps_opuninstall_isntdownloaded_text_=''
    _obj_opts_apps_opuninstall_isntdownloaded_flag_=false
    _obj_opts_apps_opuninstall_isntdownloaded_changes_flag_=true
    _obj_opts_apps_opuninstall_isntdownloaded_enable_=false
    }
Opts.Apps.OpUninstall.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntdownloaded_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_opuninstall_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntdownloaded_flag_
    }
Opts.Apps.OpUninstall.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isntdownloaded_text_"
    fi
    }
Opts.Apps.OpUninstall.IsNtDownloaded.Init

Opts.Apps.OpUpgrade.IsDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isdownloaded_flag_=false
    [[ $_obj_opts_apps_opupgrade_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isdownloaded_flag_
    }
Opts.Apps.OpUpgrade.IsDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isdownloaded_enable_=false
    [[ $_obj_opts_apps_opupgrade_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isdownloaded_enable_
    }
Opts.Apps.OpUpgrade.IsDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isdownloaded_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isdownloaded_enable_=true
    [[ $_obj_opts_apps_opupgrade_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isdownloaded_enable_
    }
Opts.Apps.OpUpgrade.IsDownloaded.Init()
    {
    _obj_opts_apps_opupgrade_isdownloaded_text_=''
    _obj_opts_apps_opupgrade_isdownloaded_flag_=false
    _obj_opts_apps_opupgrade_isdownloaded_changes_flag_=true
    _obj_opts_apps_opupgrade_isdownloaded_enable_=false
    }
Opts.Apps.OpUpgrade.IsDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isdownloaded_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsDownloaded.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isdownloaded_flag_=true
    [[ $_obj_opts_apps_opupgrade_isdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isdownloaded_flag_
    }
Opts.Apps.OpUpgrade.IsDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isdownloaded_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsDownloaded.Init

Opts.Apps.OpUpgrade.IsNtDownloaded.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntdownloaded_flag_=false
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntdownloaded_flag_
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntdownloaded_enable_=false
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntdownloaded_enable_
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntdownloaded_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntdownloaded_enable_=true
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntdownloaded_enable_
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.Init()
    {
    _obj_opts_apps_opupgrade_isntdownloaded_text_=''
    _obj_opts_apps_opupgrade_isntdownloaded_flag_=false
    _obj_opts_apps_opupgrade_isntdownloaded_changes_flag_=true
    _obj_opts_apps_opupgrade_isntdownloaded_enable_=false
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntdownloaded_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntdownloaded_flag_=true
    [[ $_obj_opts_apps_opupgrade_isntdownloaded_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntdownloaded_flag_
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isntdownloaded_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isntdownloaded_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsNtDownloaded.Init

Opts.Apps.OpBackup.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isinstalled_flag_=false
    [[ $_obj_opts_apps_opbackup_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isinstalled_flag_
    }
Opts.Apps.OpBackup.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isinstalled_enable_=false
    [[ $_obj_opts_apps_opbackup_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isinstalled_enable_
    }
Opts.Apps.OpBackup.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isinstalled_changes_flag_=false
    }
Opts.Apps.OpBackup.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isinstalled_enable_=true
    [[ $_obj_opts_apps_opbackup_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isinstalled_enable_
    }
Opts.Apps.OpBackup.IsInstalled.Init()
    {
    _obj_opts_apps_opbackup_isinstalled_text_=''
    _obj_opts_apps_opbackup_isinstalled_flag_=false
    _obj_opts_apps_opbackup_isinstalled_changes_flag_=true
    _obj_opts_apps_opbackup_isinstalled_enable_=false
    }
Opts.Apps.OpBackup.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isinstalled_changes_flag_=true
    }
Opts.Apps.OpBackup.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_opbackup_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isinstalled_flag_=true
    [[ $_obj_opts_apps_opbackup_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isinstalled_flag_
    }
Opts.Apps.OpBackup.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isinstalled_text_"
    fi
    }
Opts.Apps.OpBackup.IsInstalled.Init

Opts.Apps.OpBackup.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstalled_flag_=false
    [[ $_obj_opts_apps_opbackup_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntinstalled_flag_
    }
Opts.Apps.OpBackup.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstalled_enable_=false
    [[ $_obj_opts_apps_opbackup_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntinstalled_enable_
    }
Opts.Apps.OpBackup.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstalled_changes_flag_=false
    }
Opts.Apps.OpBackup.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstalled_enable_=true
    [[ $_obj_opts_apps_opbackup_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntinstalled_enable_
    }
Opts.Apps.OpBackup.IsNtInstalled.Init()
    {
    _obj_opts_apps_opbackup_isntinstalled_text_=''
    _obj_opts_apps_opbackup_isntinstalled_flag_=false
    _obj_opts_apps_opbackup_isntinstalled_changes_flag_=true
    _obj_opts_apps_opbackup_isntinstalled_enable_=false
    }
Opts.Apps.OpBackup.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstalled_changes_flag_=true
    }
Opts.Apps.OpBackup.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_opbackup_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstalled_flag_=true
    [[ $_obj_opts_apps_opbackup_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntinstalled_flag_
    }
Opts.Apps.OpBackup.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isntinstalled_text_"
    fi
    }
Opts.Apps.OpBackup.IsNtInstalled.Init

Opts.Apps.OpDownload.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isinstalled_flag_=false
    [[ $_obj_opts_apps_opdownload_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isinstalled_flag_
    }
Opts.Apps.OpDownload.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isinstalled_enable_=false
    [[ $_obj_opts_apps_opdownload_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isinstalled_enable_
    }
Opts.Apps.OpDownload.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isinstalled_changes_flag_=false
    }
Opts.Apps.OpDownload.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isinstalled_enable_=true
    [[ $_obj_opts_apps_opdownload_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isinstalled_enable_
    }
Opts.Apps.OpDownload.IsInstalled.Init()
    {
    _obj_opts_apps_opdownload_isinstalled_text_=''
    _obj_opts_apps_opdownload_isinstalled_flag_=false
    _obj_opts_apps_opdownload_isinstalled_changes_flag_=true
    _obj_opts_apps_opdownload_isinstalled_enable_=false
    }
Opts.Apps.OpDownload.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isinstalled_changes_flag_=true
    }
Opts.Apps.OpDownload.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_opdownload_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isinstalled_flag_=true
    [[ $_obj_opts_apps_opdownload_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isinstalled_flag_
    }
Opts.Apps.OpDownload.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isinstalled_text_"
    fi
    }
Opts.Apps.OpDownload.IsInstalled.Init

Opts.Apps.OpDownload.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstalled_flag_=false
    [[ $_obj_opts_apps_opdownload_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntinstalled_flag_
    }
Opts.Apps.OpDownload.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstalled_enable_=false
    [[ $_obj_opts_apps_opdownload_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntinstalled_enable_
    }
Opts.Apps.OpDownload.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstalled_changes_flag_=false
    }
Opts.Apps.OpDownload.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstalled_enable_=true
    [[ $_obj_opts_apps_opdownload_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntinstalled_enable_
    }
Opts.Apps.OpDownload.IsNtInstalled.Init()
    {
    _obj_opts_apps_opdownload_isntinstalled_text_=''
    _obj_opts_apps_opdownload_isntinstalled_flag_=false
    _obj_opts_apps_opdownload_isntinstalled_changes_flag_=true
    _obj_opts_apps_opdownload_isntinstalled_enable_=false
    }
Opts.Apps.OpDownload.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstalled_changes_flag_=true
    }
Opts.Apps.OpDownload.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_opdownload_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstalled_flag_=true
    [[ $_obj_opts_apps_opdownload_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntinstalled_flag_
    }
Opts.Apps.OpDownload.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isntinstalled_text_"
    fi
    }
Opts.Apps.OpDownload.IsNtInstalled.Init

Opts.Apps.OpInstall.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isinstalled_flag_=false
    [[ $_obj_opts_apps_opinstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isinstalled_flag_
    }
Opts.Apps.OpInstall.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isinstalled_enable_=false
    [[ $_obj_opts_apps_opinstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isinstalled_enable_
    }
Opts.Apps.OpInstall.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isinstalled_changes_flag_=false
    }
Opts.Apps.OpInstall.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isinstalled_enable_=true
    [[ $_obj_opts_apps_opinstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isinstalled_enable_
    }
Opts.Apps.OpInstall.IsInstalled.Init()
    {
    _obj_opts_apps_opinstall_isinstalled_text_=''
    _obj_opts_apps_opinstall_isinstalled_flag_=false
    _obj_opts_apps_opinstall_isinstalled_changes_flag_=true
    _obj_opts_apps_opinstall_isinstalled_enable_=false
    }
Opts.Apps.OpInstall.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isinstalled_changes_flag_=true
    }
Opts.Apps.OpInstall.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_opinstall_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isinstalled_flag_=true
    [[ $_obj_opts_apps_opinstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isinstalled_flag_
    }
Opts.Apps.OpInstall.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isinstalled_text_"
    fi
    }
Opts.Apps.OpInstall.IsInstalled.Init

Opts.Apps.OpInstall.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstalled_flag_=false
    [[ $_obj_opts_apps_opinstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntinstalled_flag_
    }
Opts.Apps.OpInstall.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstalled_enable_=false
    [[ $_obj_opts_apps_opinstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntinstalled_enable_
    }
Opts.Apps.OpInstall.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstalled_changes_flag_=false
    }
Opts.Apps.OpInstall.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstalled_enable_=true
    [[ $_obj_opts_apps_opinstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntinstalled_enable_
    }
Opts.Apps.OpInstall.IsNtInstalled.Init()
    {
    _obj_opts_apps_opinstall_isntinstalled_text_=''
    _obj_opts_apps_opinstall_isntinstalled_flag_=false
    _obj_opts_apps_opinstall_isntinstalled_changes_flag_=true
    _obj_opts_apps_opinstall_isntinstalled_enable_=false
    }
Opts.Apps.OpInstall.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstalled_changes_flag_=true
    }
Opts.Apps.OpInstall.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_opinstall_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstalled_flag_=true
    [[ $_obj_opts_apps_opinstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntinstalled_flag_
    }
Opts.Apps.OpInstall.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isntinstalled_text_"
    fi
    }
Opts.Apps.OpInstall.IsNtInstalled.Init

Opts.Apps.OpRebuild.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstalled_flag_=false
    [[ $_obj_opts_apps_oprebuild_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isinstalled_flag_
    }
Opts.Apps.OpRebuild.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstalled_enable_=false
    [[ $_obj_opts_apps_oprebuild_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isinstalled_enable_
    }
Opts.Apps.OpRebuild.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstalled_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstalled_enable_=true
    [[ $_obj_opts_apps_oprebuild_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isinstalled_enable_
    }
Opts.Apps.OpRebuild.IsInstalled.Init()
    {
    _obj_opts_apps_oprebuild_isinstalled_text_=''
    _obj_opts_apps_oprebuild_isinstalled_flag_=false
    _obj_opts_apps_oprebuild_isinstalled_changes_flag_=true
    _obj_opts_apps_oprebuild_isinstalled_enable_=false
    }
Opts.Apps.OpRebuild.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstalled_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstalled_flag_=true
    [[ $_obj_opts_apps_oprebuild_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isinstalled_flag_
    }
Opts.Apps.OpRebuild.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isinstalled_text_"
    fi
    }
Opts.Apps.OpRebuild.IsInstalled.Init

Opts.Apps.OpRebuild.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstalled_flag_=false
    [[ $_obj_opts_apps_oprebuild_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntinstalled_flag_
    }
Opts.Apps.OpRebuild.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstalled_enable_=false
    [[ $_obj_opts_apps_oprebuild_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntinstalled_enable_
    }
Opts.Apps.OpRebuild.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstalled_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstalled_enable_=true
    [[ $_obj_opts_apps_oprebuild_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntinstalled_enable_
    }
Opts.Apps.OpRebuild.IsNtInstalled.Init()
    {
    _obj_opts_apps_oprebuild_isntinstalled_text_=''
    _obj_opts_apps_oprebuild_isntinstalled_flag_=false
    _obj_opts_apps_oprebuild_isntinstalled_changes_flag_=true
    _obj_opts_apps_oprebuild_isntinstalled_enable_=false
    }
Opts.Apps.OpRebuild.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstalled_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstalled_flag_=true
    [[ $_obj_opts_apps_oprebuild_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntinstalled_flag_
    }
Opts.Apps.OpRebuild.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isntinstalled_text_"
    fi
    }
Opts.Apps.OpRebuild.IsNtInstalled.Init

Opts.Apps.OpReinstall.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstalled_flag_=false
    [[ $_obj_opts_apps_opreinstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isinstalled_flag_
    }
Opts.Apps.OpReinstall.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstalled_enable_=false
    [[ $_obj_opts_apps_opreinstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isinstalled_enable_
    }
Opts.Apps.OpReinstall.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstalled_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstalled_enable_=true
    [[ $_obj_opts_apps_opreinstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isinstalled_enable_
    }
Opts.Apps.OpReinstall.IsInstalled.Init()
    {
    _obj_opts_apps_opreinstall_isinstalled_text_=''
    _obj_opts_apps_opreinstall_isinstalled_flag_=false
    _obj_opts_apps_opreinstall_isinstalled_changes_flag_=true
    _obj_opts_apps_opreinstall_isinstalled_enable_=false
    }
Opts.Apps.OpReinstall.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstalled_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstalled_flag_=true
    [[ $_obj_opts_apps_opreinstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isinstalled_flag_
    }
Opts.Apps.OpReinstall.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isinstalled_text_"
    fi
    }
Opts.Apps.OpReinstall.IsInstalled.Init

Opts.Apps.OpReinstall.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstalled_flag_=false
    [[ $_obj_opts_apps_opreinstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntinstalled_flag_
    }
Opts.Apps.OpReinstall.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstalled_enable_=false
    [[ $_obj_opts_apps_opreinstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntinstalled_enable_
    }
Opts.Apps.OpReinstall.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstalled_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstalled_enable_=true
    [[ $_obj_opts_apps_opreinstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntinstalled_enable_
    }
Opts.Apps.OpReinstall.IsNtInstalled.Init()
    {
    _obj_opts_apps_opreinstall_isntinstalled_text_=''
    _obj_opts_apps_opreinstall_isntinstalled_flag_=false
    _obj_opts_apps_opreinstall_isntinstalled_changes_flag_=true
    _obj_opts_apps_opreinstall_isntinstalled_enable_=false
    }
Opts.Apps.OpReinstall.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstalled_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstalled_flag_=true
    [[ $_obj_opts_apps_opreinstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntinstalled_flag_
    }
Opts.Apps.OpReinstall.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isntinstalled_text_"
    fi
    }
Opts.Apps.OpReinstall.IsNtInstalled.Init

Opts.Apps.OpRestart.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isinstalled_flag_=false
    [[ $_obj_opts_apps_oprestart_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isinstalled_flag_
    }
Opts.Apps.OpRestart.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isinstalled_enable_=false
    [[ $_obj_opts_apps_oprestart_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isinstalled_enable_
    }
Opts.Apps.OpRestart.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isinstalled_changes_flag_=false
    }
Opts.Apps.OpRestart.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isinstalled_enable_=true
    [[ $_obj_opts_apps_oprestart_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isinstalled_enable_
    }
Opts.Apps.OpRestart.IsInstalled.Init()
    {
    _obj_opts_apps_oprestart_isinstalled_text_=''
    _obj_opts_apps_oprestart_isinstalled_flag_=false
    _obj_opts_apps_oprestart_isinstalled_changes_flag_=true
    _obj_opts_apps_oprestart_isinstalled_enable_=false
    }
Opts.Apps.OpRestart.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isinstalled_changes_flag_=true
    }
Opts.Apps.OpRestart.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_oprestart_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isinstalled_flag_=true
    [[ $_obj_opts_apps_oprestart_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isinstalled_flag_
    }
Opts.Apps.OpRestart.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isinstalled_text_"
    fi
    }
Opts.Apps.OpRestart.IsInstalled.Init

Opts.Apps.OpRestart.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstalled_flag_=false
    [[ $_obj_opts_apps_oprestart_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntinstalled_flag_
    }
Opts.Apps.OpRestart.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstalled_enable_=false
    [[ $_obj_opts_apps_oprestart_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntinstalled_enable_
    }
Opts.Apps.OpRestart.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstalled_changes_flag_=false
    }
Opts.Apps.OpRestart.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstalled_enable_=true
    [[ $_obj_opts_apps_oprestart_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntinstalled_enable_
    }
Opts.Apps.OpRestart.IsNtInstalled.Init()
    {
    _obj_opts_apps_oprestart_isntinstalled_text_=''
    _obj_opts_apps_oprestart_isntinstalled_flag_=false
    _obj_opts_apps_oprestart_isntinstalled_changes_flag_=true
    _obj_opts_apps_oprestart_isntinstalled_enable_=false
    }
Opts.Apps.OpRestart.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstalled_changes_flag_=true
    }
Opts.Apps.OpRestart.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_oprestart_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstalled_flag_=true
    [[ $_obj_opts_apps_oprestart_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntinstalled_flag_
    }
Opts.Apps.OpRestart.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isntinstalled_text_"
    fi
    }
Opts.Apps.OpRestart.IsNtInstalled.Init

Opts.Apps.OpRestore.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isinstalled_flag_=false
    [[ $_obj_opts_apps_oprestore_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isinstalled_flag_
    }
Opts.Apps.OpRestore.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isinstalled_enable_=false
    [[ $_obj_opts_apps_oprestore_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isinstalled_enable_
    }
Opts.Apps.OpRestore.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isinstalled_changes_flag_=false
    }
Opts.Apps.OpRestore.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isinstalled_enable_=true
    [[ $_obj_opts_apps_oprestore_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isinstalled_enable_
    }
Opts.Apps.OpRestore.IsInstalled.Init()
    {
    _obj_opts_apps_oprestore_isinstalled_text_=''
    _obj_opts_apps_oprestore_isinstalled_flag_=false
    _obj_opts_apps_oprestore_isinstalled_changes_flag_=true
    _obj_opts_apps_oprestore_isinstalled_enable_=false
    }
Opts.Apps.OpRestore.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isinstalled_changes_flag_=true
    }
Opts.Apps.OpRestore.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_oprestore_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isinstalled_flag_=true
    [[ $_obj_opts_apps_oprestore_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isinstalled_flag_
    }
Opts.Apps.OpRestore.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isinstalled_text_"
    fi
    }
Opts.Apps.OpRestore.IsInstalled.Init

Opts.Apps.OpRestore.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstalled_flag_=false
    [[ $_obj_opts_apps_oprestore_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntinstalled_flag_
    }
Opts.Apps.OpRestore.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstalled_enable_=false
    [[ $_obj_opts_apps_oprestore_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntinstalled_enable_
    }
Opts.Apps.OpRestore.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstalled_changes_flag_=false
    }
Opts.Apps.OpRestore.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstalled_enable_=true
    [[ $_obj_opts_apps_oprestore_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntinstalled_enable_
    }
Opts.Apps.OpRestore.IsNtInstalled.Init()
    {
    _obj_opts_apps_oprestore_isntinstalled_text_=''
    _obj_opts_apps_oprestore_isntinstalled_flag_=false
    _obj_opts_apps_oprestore_isntinstalled_changes_flag_=true
    _obj_opts_apps_oprestore_isntinstalled_enable_=false
    }
Opts.Apps.OpRestore.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstalled_changes_flag_=true
    }
Opts.Apps.OpRestore.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_oprestore_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstalled_flag_=true
    [[ $_obj_opts_apps_oprestore_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntinstalled_flag_
    }
Opts.Apps.OpRestore.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isntinstalled_text_"
    fi
    }
Opts.Apps.OpRestore.IsNtInstalled.Init

Opts.Apps.OpStart.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_opstart_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isinstalled_flag_=false
    [[ $_obj_opts_apps_opstart_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isinstalled_flag_
    }
Opts.Apps.OpStart.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_opstart_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isinstalled_enable_=false
    [[ $_obj_opts_apps_opstart_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isinstalled_enable_
    }
Opts.Apps.OpStart.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isinstalled_changes_flag_=false
    }
Opts.Apps.OpStart.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_opstart_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isinstalled_enable_=true
    [[ $_obj_opts_apps_opstart_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isinstalled_enable_
    }
Opts.Apps.OpStart.IsInstalled.Init()
    {
    _obj_opts_apps_opstart_isinstalled_text_=''
    _obj_opts_apps_opstart_isinstalled_flag_=false
    _obj_opts_apps_opstart_isinstalled_changes_flag_=true
    _obj_opts_apps_opstart_isinstalled_enable_=false
    }
Opts.Apps.OpStart.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isinstalled_changes_flag_=true
    }
Opts.Apps.OpStart.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_opstart_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isinstalled_flag_=true
    [[ $_obj_opts_apps_opstart_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isinstalled_flag_
    }
Opts.Apps.OpStart.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isinstalled_text_"
    fi
    }
Opts.Apps.OpStart.IsInstalled.Init

Opts.Apps.OpStart.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_opstart_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntinstalled_flag_=false
    [[ $_obj_opts_apps_opstart_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntinstalled_flag_
    }
Opts.Apps.OpStart.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_opstart_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntinstalled_enable_=false
    [[ $_obj_opts_apps_opstart_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntinstalled_enable_
    }
Opts.Apps.OpStart.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntinstalled_changes_flag_=false
    }
Opts.Apps.OpStart.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_opstart_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntinstalled_enable_=true
    [[ $_obj_opts_apps_opstart_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntinstalled_enable_
    }
Opts.Apps.OpStart.IsNtInstalled.Init()
    {
    _obj_opts_apps_opstart_isntinstalled_text_=''
    _obj_opts_apps_opstart_isntinstalled_flag_=false
    _obj_opts_apps_opstart_isntinstalled_changes_flag_=true
    _obj_opts_apps_opstart_isntinstalled_enable_=false
    }
Opts.Apps.OpStart.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntinstalled_changes_flag_=true
    }
Opts.Apps.OpStart.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_opstart_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntinstalled_flag_=true
    [[ $_obj_opts_apps_opstart_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntinstalled_flag_
    }
Opts.Apps.OpStart.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isntinstalled_text_"
    fi
    }
Opts.Apps.OpStart.IsNtInstalled.Init

Opts.Apps.OpStop.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_opstop_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isinstalled_flag_=false
    [[ $_obj_opts_apps_opstop_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isinstalled_flag_
    }
Opts.Apps.OpStop.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_opstop_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isinstalled_enable_=false
    [[ $_obj_opts_apps_opstop_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isinstalled_enable_
    }
Opts.Apps.OpStop.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isinstalled_changes_flag_=false
    }
Opts.Apps.OpStop.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_opstop_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isinstalled_enable_=true
    [[ $_obj_opts_apps_opstop_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isinstalled_enable_
    }
Opts.Apps.OpStop.IsInstalled.Init()
    {
    _obj_opts_apps_opstop_isinstalled_text_=''
    _obj_opts_apps_opstop_isinstalled_flag_=false
    _obj_opts_apps_opstop_isinstalled_changes_flag_=true
    _obj_opts_apps_opstop_isinstalled_enable_=false
    }
Opts.Apps.OpStop.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isinstalled_changes_flag_=true
    }
Opts.Apps.OpStop.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_opstop_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isinstalled_flag_=true
    [[ $_obj_opts_apps_opstop_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isinstalled_flag_
    }
Opts.Apps.OpStop.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isinstalled_text_"
    fi
    }
Opts.Apps.OpStop.IsInstalled.Init

Opts.Apps.OpStop.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_opstop_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntinstalled_flag_=false
    [[ $_obj_opts_apps_opstop_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntinstalled_flag_
    }
Opts.Apps.OpStop.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_opstop_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntinstalled_enable_=false
    [[ $_obj_opts_apps_opstop_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntinstalled_enable_
    }
Opts.Apps.OpStop.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntinstalled_changes_flag_=false
    }
Opts.Apps.OpStop.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_opstop_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntinstalled_enable_=true
    [[ $_obj_opts_apps_opstop_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntinstalled_enable_
    }
Opts.Apps.OpStop.IsNtInstalled.Init()
    {
    _obj_opts_apps_opstop_isntinstalled_text_=''
    _obj_opts_apps_opstop_isntinstalled_flag_=false
    _obj_opts_apps_opstop_isntinstalled_changes_flag_=true
    _obj_opts_apps_opstop_isntinstalled_enable_=false
    }
Opts.Apps.OpStop.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntinstalled_changes_flag_=true
    }
Opts.Apps.OpStop.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_opstop_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntinstalled_flag_=true
    [[ $_obj_opts_apps_opstop_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntinstalled_flag_
    }
Opts.Apps.OpStop.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isntinstalled_text_"
    fi
    }
Opts.Apps.OpStop.IsNtInstalled.Init

Opts.Apps.OpUninstall.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstalled_flag_=false
    [[ $_obj_opts_apps_opuninstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isinstalled_flag_
    }
Opts.Apps.OpUninstall.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstalled_enable_=false
    [[ $_obj_opts_apps_opuninstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isinstalled_enable_
    }
Opts.Apps.OpUninstall.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstalled_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstalled_enable_=true
    [[ $_obj_opts_apps_opuninstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isinstalled_enable_
    }
Opts.Apps.OpUninstall.IsInstalled.Init()
    {
    _obj_opts_apps_opuninstall_isinstalled_text_=''
    _obj_opts_apps_opuninstall_isinstalled_flag_=false
    _obj_opts_apps_opuninstall_isinstalled_changes_flag_=true
    _obj_opts_apps_opuninstall_isinstalled_enable_=false
    }
Opts.Apps.OpUninstall.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstalled_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstalled_flag_=true
    [[ $_obj_opts_apps_opuninstall_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isinstalled_flag_
    }
Opts.Apps.OpUninstall.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isinstalled_text_"
    fi
    }
Opts.Apps.OpUninstall.IsInstalled.Init

Opts.Apps.OpUninstall.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstalled_flag_=false
    [[ $_obj_opts_apps_opuninstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntinstalled_flag_
    }
Opts.Apps.OpUninstall.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstalled_enable_=false
    [[ $_obj_opts_apps_opuninstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntinstalled_enable_
    }
Opts.Apps.OpUninstall.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstalled_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstalled_enable_=true
    [[ $_obj_opts_apps_opuninstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntinstalled_enable_
    }
Opts.Apps.OpUninstall.IsNtInstalled.Init()
    {
    _obj_opts_apps_opuninstall_isntinstalled_text_=''
    _obj_opts_apps_opuninstall_isntinstalled_flag_=false
    _obj_opts_apps_opuninstall_isntinstalled_changes_flag_=true
    _obj_opts_apps_opuninstall_isntinstalled_enable_=false
    }
Opts.Apps.OpUninstall.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstalled_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstalled_flag_=true
    [[ $_obj_opts_apps_opuninstall_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntinstalled_flag_
    }
Opts.Apps.OpUninstall.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isntinstalled_text_"
    fi
    }
Opts.Apps.OpUninstall.IsNtInstalled.Init

Opts.Apps.OpUpgrade.IsInstalled.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstalled_flag_=false
    [[ $_obj_opts_apps_opupgrade_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isinstalled_flag_
    }
Opts.Apps.OpUpgrade.IsInstalled.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstalled_enable_=false
    [[ $_obj_opts_apps_opupgrade_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isinstalled_enable_
    }
Opts.Apps.OpUpgrade.IsInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstalled_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsInstalled.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstalled_enable_=true
    [[ $_obj_opts_apps_opupgrade_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isinstalled_enable_
    }
Opts.Apps.OpUpgrade.IsInstalled.Init()
    {
    _obj_opts_apps_opupgrade_isinstalled_text_=''
    _obj_opts_apps_opupgrade_isinstalled_flag_=false
    _obj_opts_apps_opupgrade_isinstalled_changes_flag_=true
    _obj_opts_apps_opupgrade_isinstalled_enable_=false
    }
Opts.Apps.OpUpgrade.IsInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstalled_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsInstalled.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstalled_flag_=true
    [[ $_obj_opts_apps_opupgrade_isinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isinstalled_flag_
    }
Opts.Apps.OpUpgrade.IsInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isinstalled_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsInstalled.Init

Opts.Apps.OpUpgrade.IsNtInstalled.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstalled_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstalled_flag_=false
    [[ $_obj_opts_apps_opupgrade_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntinstalled_flag_
    }
Opts.Apps.OpUpgrade.IsNtInstalled.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstalled_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstalled_enable_=false
    [[ $_obj_opts_apps_opupgrade_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntinstalled_enable_
    }
Opts.Apps.OpUpgrade.IsNtInstalled.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstalled_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstalled_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsNtInstalled.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstalled_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstalled_enable_=true
    [[ $_obj_opts_apps_opupgrade_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntinstalled_enable_
    }
Opts.Apps.OpUpgrade.IsNtInstalled.Init()
    {
    _obj_opts_apps_opupgrade_isntinstalled_text_=''
    _obj_opts_apps_opupgrade_isntinstalled_flag_=false
    _obj_opts_apps_opupgrade_isntinstalled_changes_flag_=true
    _obj_opts_apps_opupgrade_isntinstalled_enable_=false
    }
Opts.Apps.OpUpgrade.IsNtInstalled.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstalled_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtInstalled.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstalled_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtInstalled.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstalled_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtInstalled.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstalled_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtInstalled.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstalled_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstalled_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsNtInstalled.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstalled_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstalled_flag_=true
    [[ $_obj_opts_apps_opupgrade_isntinstalled_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntinstalled_flag_
    }
Opts.Apps.OpUpgrade.IsNtInstalled.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isntinstalled_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isntinstalled_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsNtInstalled.Init

Opts.Apps.OpBackup.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isinstallable_flag_=false
    [[ $_obj_opts_apps_opbackup_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isinstallable_flag_
    }
Opts.Apps.OpBackup.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isinstallable_enable_=false
    [[ $_obj_opts_apps_opbackup_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isinstallable_enable_
    }
Opts.Apps.OpBackup.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isinstallable_changes_flag_=false
    }
Opts.Apps.OpBackup.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isinstallable_enable_=true
    [[ $_obj_opts_apps_opbackup_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isinstallable_enable_
    }
Opts.Apps.OpBackup.IsInstallable.Init()
    {
    _obj_opts_apps_opbackup_isinstallable_text_=''
    _obj_opts_apps_opbackup_isinstallable_flag_=false
    _obj_opts_apps_opbackup_isinstallable_changes_flag_=true
    _obj_opts_apps_opbackup_isinstallable_enable_=false
    }
Opts.Apps.OpBackup.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isinstallable_changes_flag_=true
    }
Opts.Apps.OpBackup.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_opbackup_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isinstallable_flag_=true
    [[ $_obj_opts_apps_opbackup_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isinstallable_flag_
    }
Opts.Apps.OpBackup.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isinstallable_text_"
    fi
    }
Opts.Apps.OpBackup.IsInstallable.Init

Opts.Apps.OpBackup.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstallable_flag_=false
    [[ $_obj_opts_apps_opbackup_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntinstallable_flag_
    }
Opts.Apps.OpBackup.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstallable_enable_=false
    [[ $_obj_opts_apps_opbackup_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntinstallable_enable_
    }
Opts.Apps.OpBackup.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstallable_changes_flag_=false
    }
Opts.Apps.OpBackup.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstallable_enable_=true
    [[ $_obj_opts_apps_opbackup_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntinstallable_enable_
    }
Opts.Apps.OpBackup.IsNtInstallable.Init()
    {
    _obj_opts_apps_opbackup_isntinstallable_text_=''
    _obj_opts_apps_opbackup_isntinstallable_flag_=false
    _obj_opts_apps_opbackup_isntinstallable_changes_flag_=true
    _obj_opts_apps_opbackup_isntinstallable_enable_=false
    }
Opts.Apps.OpBackup.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstallable_changes_flag_=true
    }
Opts.Apps.OpBackup.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_opbackup_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntinstallable_flag_=true
    [[ $_obj_opts_apps_opbackup_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntinstallable_flag_
    }
Opts.Apps.OpBackup.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isntinstallable_text_"
    fi
    }
Opts.Apps.OpBackup.IsNtInstallable.Init

Opts.Apps.OpDownload.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isinstallable_flag_=false
    [[ $_obj_opts_apps_opdownload_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isinstallable_flag_
    }
Opts.Apps.OpDownload.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isinstallable_enable_=false
    [[ $_obj_opts_apps_opdownload_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isinstallable_enable_
    }
Opts.Apps.OpDownload.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isinstallable_changes_flag_=false
    }
Opts.Apps.OpDownload.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isinstallable_enable_=true
    [[ $_obj_opts_apps_opdownload_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isinstallable_enable_
    }
Opts.Apps.OpDownload.IsInstallable.Init()
    {
    _obj_opts_apps_opdownload_isinstallable_text_=''
    _obj_opts_apps_opdownload_isinstallable_flag_=false
    _obj_opts_apps_opdownload_isinstallable_changes_flag_=true
    _obj_opts_apps_opdownload_isinstallable_enable_=false
    }
Opts.Apps.OpDownload.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isinstallable_changes_flag_=true
    }
Opts.Apps.OpDownload.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_opdownload_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isinstallable_flag_=true
    [[ $_obj_opts_apps_opdownload_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isinstallable_flag_
    }
Opts.Apps.OpDownload.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isinstallable_text_"
    fi
    }
Opts.Apps.OpDownload.IsInstallable.Init

Opts.Apps.OpDownload.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstallable_flag_=false
    [[ $_obj_opts_apps_opdownload_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntinstallable_flag_
    }
Opts.Apps.OpDownload.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstallable_enable_=false
    [[ $_obj_opts_apps_opdownload_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntinstallable_enable_
    }
Opts.Apps.OpDownload.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstallable_changes_flag_=false
    }
Opts.Apps.OpDownload.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstallable_enable_=true
    [[ $_obj_opts_apps_opdownload_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntinstallable_enable_
    }
Opts.Apps.OpDownload.IsNtInstallable.Init()
    {
    _obj_opts_apps_opdownload_isntinstallable_text_=''
    _obj_opts_apps_opdownload_isntinstallable_flag_=false
    _obj_opts_apps_opdownload_isntinstallable_changes_flag_=true
    _obj_opts_apps_opdownload_isntinstallable_enable_=false
    }
Opts.Apps.OpDownload.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstallable_changes_flag_=true
    }
Opts.Apps.OpDownload.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_opdownload_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntinstallable_flag_=true
    [[ $_obj_opts_apps_opdownload_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntinstallable_flag_
    }
Opts.Apps.OpDownload.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isntinstallable_text_"
    fi
    }
Opts.Apps.OpDownload.IsNtInstallable.Init

Opts.Apps.OpInstall.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isinstallable_flag_=false
    [[ $_obj_opts_apps_opinstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isinstallable_flag_
    }
Opts.Apps.OpInstall.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isinstallable_enable_=false
    [[ $_obj_opts_apps_opinstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isinstallable_enable_
    }
Opts.Apps.OpInstall.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isinstallable_changes_flag_=false
    }
Opts.Apps.OpInstall.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isinstallable_enable_=true
    [[ $_obj_opts_apps_opinstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isinstallable_enable_
    }
Opts.Apps.OpInstall.IsInstallable.Init()
    {
    _obj_opts_apps_opinstall_isinstallable_text_=''
    _obj_opts_apps_opinstall_isinstallable_flag_=false
    _obj_opts_apps_opinstall_isinstallable_changes_flag_=true
    _obj_opts_apps_opinstall_isinstallable_enable_=false
    }
Opts.Apps.OpInstall.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isinstallable_changes_flag_=true
    }
Opts.Apps.OpInstall.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_opinstall_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isinstallable_flag_=true
    [[ $_obj_opts_apps_opinstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isinstallable_flag_
    }
Opts.Apps.OpInstall.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isinstallable_text_"
    fi
    }
Opts.Apps.OpInstall.IsInstallable.Init

Opts.Apps.OpInstall.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstallable_flag_=false
    [[ $_obj_opts_apps_opinstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntinstallable_flag_
    }
Opts.Apps.OpInstall.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstallable_enable_=false
    [[ $_obj_opts_apps_opinstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntinstallable_enable_
    }
Opts.Apps.OpInstall.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstallable_changes_flag_=false
    }
Opts.Apps.OpInstall.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstallable_enable_=true
    [[ $_obj_opts_apps_opinstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntinstallable_enable_
    }
Opts.Apps.OpInstall.IsNtInstallable.Init()
    {
    _obj_opts_apps_opinstall_isntinstallable_text_=''
    _obj_opts_apps_opinstall_isntinstallable_flag_=false
    _obj_opts_apps_opinstall_isntinstallable_changes_flag_=true
    _obj_opts_apps_opinstall_isntinstallable_enable_=false
    }
Opts.Apps.OpInstall.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstallable_changes_flag_=true
    }
Opts.Apps.OpInstall.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_opinstall_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntinstallable_flag_=true
    [[ $_obj_opts_apps_opinstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntinstallable_flag_
    }
Opts.Apps.OpInstall.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isntinstallable_text_"
    fi
    }
Opts.Apps.OpInstall.IsNtInstallable.Init

Opts.Apps.OpRebuild.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstallable_flag_=false
    [[ $_obj_opts_apps_oprebuild_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isinstallable_flag_
    }
Opts.Apps.OpRebuild.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstallable_enable_=false
    [[ $_obj_opts_apps_oprebuild_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isinstallable_enable_
    }
Opts.Apps.OpRebuild.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstallable_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstallable_enable_=true
    [[ $_obj_opts_apps_oprebuild_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isinstallable_enable_
    }
Opts.Apps.OpRebuild.IsInstallable.Init()
    {
    _obj_opts_apps_oprebuild_isinstallable_text_=''
    _obj_opts_apps_oprebuild_isinstallable_flag_=false
    _obj_opts_apps_oprebuild_isinstallable_changes_flag_=true
    _obj_opts_apps_oprebuild_isinstallable_enable_=false
    }
Opts.Apps.OpRebuild.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstallable_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isinstallable_flag_=true
    [[ $_obj_opts_apps_oprebuild_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isinstallable_flag_
    }
Opts.Apps.OpRebuild.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isinstallable_text_"
    fi
    }
Opts.Apps.OpRebuild.IsInstallable.Init

Opts.Apps.OpRebuild.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstallable_flag_=false
    [[ $_obj_opts_apps_oprebuild_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntinstallable_flag_
    }
Opts.Apps.OpRebuild.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstallable_enable_=false
    [[ $_obj_opts_apps_oprebuild_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntinstallable_enable_
    }
Opts.Apps.OpRebuild.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstallable_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstallable_enable_=true
    [[ $_obj_opts_apps_oprebuild_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntinstallable_enable_
    }
Opts.Apps.OpRebuild.IsNtInstallable.Init()
    {
    _obj_opts_apps_oprebuild_isntinstallable_text_=''
    _obj_opts_apps_oprebuild_isntinstallable_flag_=false
    _obj_opts_apps_oprebuild_isntinstallable_changes_flag_=true
    _obj_opts_apps_oprebuild_isntinstallable_enable_=false
    }
Opts.Apps.OpRebuild.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstallable_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntinstallable_flag_=true
    [[ $_obj_opts_apps_oprebuild_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntinstallable_flag_
    }
Opts.Apps.OpRebuild.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isntinstallable_text_"
    fi
    }
Opts.Apps.OpRebuild.IsNtInstallable.Init

Opts.Apps.OpReinstall.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstallable_flag_=false
    [[ $_obj_opts_apps_opreinstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isinstallable_flag_
    }
Opts.Apps.OpReinstall.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstallable_enable_=false
    [[ $_obj_opts_apps_opreinstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isinstallable_enable_
    }
Opts.Apps.OpReinstall.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstallable_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstallable_enable_=true
    [[ $_obj_opts_apps_opreinstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isinstallable_enable_
    }
Opts.Apps.OpReinstall.IsInstallable.Init()
    {
    _obj_opts_apps_opreinstall_isinstallable_text_=''
    _obj_opts_apps_opreinstall_isinstallable_flag_=false
    _obj_opts_apps_opreinstall_isinstallable_changes_flag_=true
    _obj_opts_apps_opreinstall_isinstallable_enable_=false
    }
Opts.Apps.OpReinstall.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstallable_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isinstallable_flag_=true
    [[ $_obj_opts_apps_opreinstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isinstallable_flag_
    }
Opts.Apps.OpReinstall.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isinstallable_text_"
    fi
    }
Opts.Apps.OpReinstall.IsInstallable.Init

Opts.Apps.OpReinstall.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstallable_flag_=false
    [[ $_obj_opts_apps_opreinstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntinstallable_flag_
    }
Opts.Apps.OpReinstall.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstallable_enable_=false
    [[ $_obj_opts_apps_opreinstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntinstallable_enable_
    }
Opts.Apps.OpReinstall.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstallable_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstallable_enable_=true
    [[ $_obj_opts_apps_opreinstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntinstallable_enable_
    }
Opts.Apps.OpReinstall.IsNtInstallable.Init()
    {
    _obj_opts_apps_opreinstall_isntinstallable_text_=''
    _obj_opts_apps_opreinstall_isntinstallable_flag_=false
    _obj_opts_apps_opreinstall_isntinstallable_changes_flag_=true
    _obj_opts_apps_opreinstall_isntinstallable_enable_=false
    }
Opts.Apps.OpReinstall.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstallable_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntinstallable_flag_=true
    [[ $_obj_opts_apps_opreinstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntinstallable_flag_
    }
Opts.Apps.OpReinstall.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isntinstallable_text_"
    fi
    }
Opts.Apps.OpReinstall.IsNtInstallable.Init

Opts.Apps.OpRestart.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isinstallable_flag_=false
    [[ $_obj_opts_apps_oprestart_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isinstallable_flag_
    }
Opts.Apps.OpRestart.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isinstallable_enable_=false
    [[ $_obj_opts_apps_oprestart_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isinstallable_enable_
    }
Opts.Apps.OpRestart.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isinstallable_changes_flag_=false
    }
Opts.Apps.OpRestart.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isinstallable_enable_=true
    [[ $_obj_opts_apps_oprestart_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isinstallable_enable_
    }
Opts.Apps.OpRestart.IsInstallable.Init()
    {
    _obj_opts_apps_oprestart_isinstallable_text_=''
    _obj_opts_apps_oprestart_isinstallable_flag_=false
    _obj_opts_apps_oprestart_isinstallable_changes_flag_=true
    _obj_opts_apps_oprestart_isinstallable_enable_=false
    }
Opts.Apps.OpRestart.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isinstallable_changes_flag_=true
    }
Opts.Apps.OpRestart.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_oprestart_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isinstallable_flag_=true
    [[ $_obj_opts_apps_oprestart_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isinstallable_flag_
    }
Opts.Apps.OpRestart.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isinstallable_text_"
    fi
    }
Opts.Apps.OpRestart.IsInstallable.Init

Opts.Apps.OpRestart.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstallable_flag_=false
    [[ $_obj_opts_apps_oprestart_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntinstallable_flag_
    }
Opts.Apps.OpRestart.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstallable_enable_=false
    [[ $_obj_opts_apps_oprestart_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntinstallable_enable_
    }
Opts.Apps.OpRestart.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstallable_changes_flag_=false
    }
Opts.Apps.OpRestart.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstallable_enable_=true
    [[ $_obj_opts_apps_oprestart_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntinstallable_enable_
    }
Opts.Apps.OpRestart.IsNtInstallable.Init()
    {
    _obj_opts_apps_oprestart_isntinstallable_text_=''
    _obj_opts_apps_oprestart_isntinstallable_flag_=false
    _obj_opts_apps_oprestart_isntinstallable_changes_flag_=true
    _obj_opts_apps_oprestart_isntinstallable_enable_=false
    }
Opts.Apps.OpRestart.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstallable_changes_flag_=true
    }
Opts.Apps.OpRestart.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_oprestart_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntinstallable_flag_=true
    [[ $_obj_opts_apps_oprestart_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntinstallable_flag_
    }
Opts.Apps.OpRestart.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isntinstallable_text_"
    fi
    }
Opts.Apps.OpRestart.IsNtInstallable.Init

Opts.Apps.OpRestore.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isinstallable_flag_=false
    [[ $_obj_opts_apps_oprestore_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isinstallable_flag_
    }
Opts.Apps.OpRestore.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isinstallable_enable_=false
    [[ $_obj_opts_apps_oprestore_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isinstallable_enable_
    }
Opts.Apps.OpRestore.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isinstallable_changes_flag_=false
    }
Opts.Apps.OpRestore.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isinstallable_enable_=true
    [[ $_obj_opts_apps_oprestore_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isinstallable_enable_
    }
Opts.Apps.OpRestore.IsInstallable.Init()
    {
    _obj_opts_apps_oprestore_isinstallable_text_=''
    _obj_opts_apps_oprestore_isinstallable_flag_=false
    _obj_opts_apps_oprestore_isinstallable_changes_flag_=true
    _obj_opts_apps_oprestore_isinstallable_enable_=false
    }
Opts.Apps.OpRestore.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isinstallable_changes_flag_=true
    }
Opts.Apps.OpRestore.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_oprestore_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isinstallable_flag_=true
    [[ $_obj_opts_apps_oprestore_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isinstallable_flag_
    }
Opts.Apps.OpRestore.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isinstallable_text_"
    fi
    }
Opts.Apps.OpRestore.IsInstallable.Init

Opts.Apps.OpRestore.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstallable_flag_=false
    [[ $_obj_opts_apps_oprestore_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntinstallable_flag_
    }
Opts.Apps.OpRestore.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstallable_enable_=false
    [[ $_obj_opts_apps_oprestore_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntinstallable_enable_
    }
Opts.Apps.OpRestore.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstallable_changes_flag_=false
    }
Opts.Apps.OpRestore.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstallable_enable_=true
    [[ $_obj_opts_apps_oprestore_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntinstallable_enable_
    }
Opts.Apps.OpRestore.IsNtInstallable.Init()
    {
    _obj_opts_apps_oprestore_isntinstallable_text_=''
    _obj_opts_apps_oprestore_isntinstallable_flag_=false
    _obj_opts_apps_oprestore_isntinstallable_changes_flag_=true
    _obj_opts_apps_oprestore_isntinstallable_enable_=false
    }
Opts.Apps.OpRestore.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstallable_changes_flag_=true
    }
Opts.Apps.OpRestore.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_oprestore_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntinstallable_flag_=true
    [[ $_obj_opts_apps_oprestore_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntinstallable_flag_
    }
Opts.Apps.OpRestore.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isntinstallable_text_"
    fi
    }
Opts.Apps.OpRestore.IsNtInstallable.Init

Opts.Apps.OpStart.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_opstart_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isinstallable_flag_=false
    [[ $_obj_opts_apps_opstart_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isinstallable_flag_
    }
Opts.Apps.OpStart.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_opstart_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isinstallable_enable_=false
    [[ $_obj_opts_apps_opstart_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isinstallable_enable_
    }
Opts.Apps.OpStart.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isinstallable_changes_flag_=false
    }
Opts.Apps.OpStart.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_opstart_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isinstallable_enable_=true
    [[ $_obj_opts_apps_opstart_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isinstallable_enable_
    }
Opts.Apps.OpStart.IsInstallable.Init()
    {
    _obj_opts_apps_opstart_isinstallable_text_=''
    _obj_opts_apps_opstart_isinstallable_flag_=false
    _obj_opts_apps_opstart_isinstallable_changes_flag_=true
    _obj_opts_apps_opstart_isinstallable_enable_=false
    }
Opts.Apps.OpStart.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isinstallable_changes_flag_=true
    }
Opts.Apps.OpStart.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_opstart_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isinstallable_flag_=true
    [[ $_obj_opts_apps_opstart_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isinstallable_flag_
    }
Opts.Apps.OpStart.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isinstallable_text_"
    fi
    }
Opts.Apps.OpStart.IsInstallable.Init

Opts.Apps.OpStart.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_opstart_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntinstallable_flag_=false
    [[ $_obj_opts_apps_opstart_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntinstallable_flag_
    }
Opts.Apps.OpStart.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_opstart_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntinstallable_enable_=false
    [[ $_obj_opts_apps_opstart_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntinstallable_enable_
    }
Opts.Apps.OpStart.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntinstallable_changes_flag_=false
    }
Opts.Apps.OpStart.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_opstart_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntinstallable_enable_=true
    [[ $_obj_opts_apps_opstart_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntinstallable_enable_
    }
Opts.Apps.OpStart.IsNtInstallable.Init()
    {
    _obj_opts_apps_opstart_isntinstallable_text_=''
    _obj_opts_apps_opstart_isntinstallable_flag_=false
    _obj_opts_apps_opstart_isntinstallable_changes_flag_=true
    _obj_opts_apps_opstart_isntinstallable_enable_=false
    }
Opts.Apps.OpStart.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntinstallable_changes_flag_=true
    }
Opts.Apps.OpStart.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_opstart_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntinstallable_flag_=true
    [[ $_obj_opts_apps_opstart_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntinstallable_flag_
    }
Opts.Apps.OpStart.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isntinstallable_text_"
    fi
    }
Opts.Apps.OpStart.IsNtInstallable.Init

Opts.Apps.OpStop.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_opstop_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isinstallable_flag_=false
    [[ $_obj_opts_apps_opstop_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isinstallable_flag_
    }
Opts.Apps.OpStop.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_opstop_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isinstallable_enable_=false
    [[ $_obj_opts_apps_opstop_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isinstallable_enable_
    }
Opts.Apps.OpStop.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isinstallable_changes_flag_=false
    }
Opts.Apps.OpStop.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_opstop_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isinstallable_enable_=true
    [[ $_obj_opts_apps_opstop_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isinstallable_enable_
    }
Opts.Apps.OpStop.IsInstallable.Init()
    {
    _obj_opts_apps_opstop_isinstallable_text_=''
    _obj_opts_apps_opstop_isinstallable_flag_=false
    _obj_opts_apps_opstop_isinstallable_changes_flag_=true
    _obj_opts_apps_opstop_isinstallable_enable_=false
    }
Opts.Apps.OpStop.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isinstallable_changes_flag_=true
    }
Opts.Apps.OpStop.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_opstop_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isinstallable_flag_=true
    [[ $_obj_opts_apps_opstop_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isinstallable_flag_
    }
Opts.Apps.OpStop.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isinstallable_text_"
    fi
    }
Opts.Apps.OpStop.IsInstallable.Init

Opts.Apps.OpStop.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_opstop_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntinstallable_flag_=false
    [[ $_obj_opts_apps_opstop_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntinstallable_flag_
    }
Opts.Apps.OpStop.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_opstop_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntinstallable_enable_=false
    [[ $_obj_opts_apps_opstop_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntinstallable_enable_
    }
Opts.Apps.OpStop.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntinstallable_changes_flag_=false
    }
Opts.Apps.OpStop.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_opstop_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntinstallable_enable_=true
    [[ $_obj_opts_apps_opstop_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntinstallable_enable_
    }
Opts.Apps.OpStop.IsNtInstallable.Init()
    {
    _obj_opts_apps_opstop_isntinstallable_text_=''
    _obj_opts_apps_opstop_isntinstallable_flag_=false
    _obj_opts_apps_opstop_isntinstallable_changes_flag_=true
    _obj_opts_apps_opstop_isntinstallable_enable_=false
    }
Opts.Apps.OpStop.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntinstallable_changes_flag_=true
    }
Opts.Apps.OpStop.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_opstop_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntinstallable_flag_=true
    [[ $_obj_opts_apps_opstop_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntinstallable_flag_
    }
Opts.Apps.OpStop.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isntinstallable_text_"
    fi
    }
Opts.Apps.OpStop.IsNtInstallable.Init

Opts.Apps.OpUninstall.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstallable_flag_=false
    [[ $_obj_opts_apps_opuninstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isinstallable_flag_
    }
Opts.Apps.OpUninstall.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstallable_enable_=false
    [[ $_obj_opts_apps_opuninstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isinstallable_enable_
    }
Opts.Apps.OpUninstall.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstallable_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstallable_enable_=true
    [[ $_obj_opts_apps_opuninstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isinstallable_enable_
    }
Opts.Apps.OpUninstall.IsInstallable.Init()
    {
    _obj_opts_apps_opuninstall_isinstallable_text_=''
    _obj_opts_apps_opuninstall_isinstallable_flag_=false
    _obj_opts_apps_opuninstall_isinstallable_changes_flag_=true
    _obj_opts_apps_opuninstall_isinstallable_enable_=false
    }
Opts.Apps.OpUninstall.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstallable_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isinstallable_flag_=true
    [[ $_obj_opts_apps_opuninstall_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isinstallable_flag_
    }
Opts.Apps.OpUninstall.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isinstallable_text_"
    fi
    }
Opts.Apps.OpUninstall.IsInstallable.Init

Opts.Apps.OpUninstall.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstallable_flag_=false
    [[ $_obj_opts_apps_opuninstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntinstallable_flag_
    }
Opts.Apps.OpUninstall.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstallable_enable_=false
    [[ $_obj_opts_apps_opuninstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntinstallable_enable_
    }
Opts.Apps.OpUninstall.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstallable_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstallable_enable_=true
    [[ $_obj_opts_apps_opuninstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntinstallable_enable_
    }
Opts.Apps.OpUninstall.IsNtInstallable.Init()
    {
    _obj_opts_apps_opuninstall_isntinstallable_text_=''
    _obj_opts_apps_opuninstall_isntinstallable_flag_=false
    _obj_opts_apps_opuninstall_isntinstallable_changes_flag_=true
    _obj_opts_apps_opuninstall_isntinstallable_enable_=false
    }
Opts.Apps.OpUninstall.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstallable_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntinstallable_flag_=true
    [[ $_obj_opts_apps_opuninstall_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntinstallable_flag_
    }
Opts.Apps.OpUninstall.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isntinstallable_text_"
    fi
    }
Opts.Apps.OpUninstall.IsNtInstallable.Init

Opts.Apps.OpUpgrade.IsInstallable.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstallable_flag_=false
    [[ $_obj_opts_apps_opupgrade_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isinstallable_flag_
    }
Opts.Apps.OpUpgrade.IsInstallable.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstallable_enable_=false
    [[ $_obj_opts_apps_opupgrade_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isinstallable_enable_
    }
Opts.Apps.OpUpgrade.IsInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstallable_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsInstallable.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstallable_enable_=true
    [[ $_obj_opts_apps_opupgrade_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isinstallable_enable_
    }
Opts.Apps.OpUpgrade.IsInstallable.Init()
    {
    _obj_opts_apps_opupgrade_isinstallable_text_=''
    _obj_opts_apps_opupgrade_isinstallable_flag_=false
    _obj_opts_apps_opupgrade_isinstallable_changes_flag_=true
    _obj_opts_apps_opupgrade_isinstallable_enable_=false
    }
Opts.Apps.OpUpgrade.IsInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstallable_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsInstallable.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isinstallable_flag_=true
    [[ $_obj_opts_apps_opupgrade_isinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isinstallable_flag_
    }
Opts.Apps.OpUpgrade.IsInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isinstallable_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsInstallable.Init

Opts.Apps.OpUpgrade.IsNtInstallable.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstallable_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstallable_flag_=false
    [[ $_obj_opts_apps_opupgrade_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntinstallable_flag_
    }
Opts.Apps.OpUpgrade.IsNtInstallable.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstallable_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstallable_enable_=false
    [[ $_obj_opts_apps_opupgrade_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntinstallable_enable_
    }
Opts.Apps.OpUpgrade.IsNtInstallable.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstallable_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstallable_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsNtInstallable.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstallable_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstallable_enable_=true
    [[ $_obj_opts_apps_opupgrade_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntinstallable_enable_
    }
Opts.Apps.OpUpgrade.IsNtInstallable.Init()
    {
    _obj_opts_apps_opupgrade_isntinstallable_text_=''
    _obj_opts_apps_opupgrade_isntinstallable_flag_=false
    _obj_opts_apps_opupgrade_isntinstallable_changes_flag_=true
    _obj_opts_apps_opupgrade_isntinstallable_enable_=false
    }
Opts.Apps.OpUpgrade.IsNtInstallable.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstallable_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtInstallable.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstallable_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtInstallable.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstallable_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtInstallable.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstallable_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtInstallable.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstallable_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstallable_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsNtInstallable.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isntinstallable_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntinstallable_flag_=true
    [[ $_obj_opts_apps_opupgrade_isntinstallable_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntinstallable_flag_
    }
Opts.Apps.OpUpgrade.IsNtInstallable.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isntinstallable_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isntinstallable_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsNtInstallable.Init

Opts.Apps.OpBackup.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_opbackup_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_ismissing_flag_=false
    [[ $_obj_opts_apps_opbackup_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_ismissing_flag_
    }
Opts.Apps.OpBackup.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_opbackup_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_ismissing_enable_=false
    [[ $_obj_opts_apps_opbackup_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_ismissing_enable_
    }
Opts.Apps.OpBackup.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_ismissing_changes_flag_=false
    }
Opts.Apps.OpBackup.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_opbackup_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_ismissing_enable_=true
    [[ $_obj_opts_apps_opbackup_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_ismissing_enable_
    }
Opts.Apps.OpBackup.IsMissing.Init()
    {
    _obj_opts_apps_opbackup_ismissing_text_=''
    _obj_opts_apps_opbackup_ismissing_flag_=false
    _obj_opts_apps_opbackup_ismissing_changes_flag_=true
    _obj_opts_apps_opbackup_ismissing_enable_=false
    }
Opts.Apps.OpBackup.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_ismissing_changes_flag_=true
    }
Opts.Apps.OpBackup.IsMissing.Set()
    {
    [[ $_obj_opts_apps_opbackup_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_ismissing_flag_=true
    [[ $_obj_opts_apps_opbackup_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_ismissing_flag_
    }
Opts.Apps.OpBackup.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_ismissing_text_"
    fi
    }
Opts.Apps.OpBackup.IsMissing.Init

Opts.Apps.OpBackup.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntmissing_flag_=false
    [[ $_obj_opts_apps_opbackup_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntmissing_flag_
    }
Opts.Apps.OpBackup.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntmissing_enable_=false
    [[ $_obj_opts_apps_opbackup_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntmissing_enable_
    }
Opts.Apps.OpBackup.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntmissing_changes_flag_=false
    }
Opts.Apps.OpBackup.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntmissing_enable_=true
    [[ $_obj_opts_apps_opbackup_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntmissing_enable_
    }
Opts.Apps.OpBackup.IsNtMissing.Init()
    {
    _obj_opts_apps_opbackup_isntmissing_text_=''
    _obj_opts_apps_opbackup_isntmissing_flag_=false
    _obj_opts_apps_opbackup_isntmissing_changes_flag_=true
    _obj_opts_apps_opbackup_isntmissing_enable_=false
    }
Opts.Apps.OpBackup.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntmissing_changes_flag_=true
    }
Opts.Apps.OpBackup.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_opbackup_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntmissing_flag_=true
    [[ $_obj_opts_apps_opbackup_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntmissing_flag_
    }
Opts.Apps.OpBackup.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isntmissing_text_"
    fi
    }
Opts.Apps.OpBackup.IsNtMissing.Init

Opts.Apps.OpDownload.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_opdownload_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_ismissing_flag_=false
    [[ $_obj_opts_apps_opdownload_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_ismissing_flag_
    }
Opts.Apps.OpDownload.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_opdownload_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_ismissing_enable_=false
    [[ $_obj_opts_apps_opdownload_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_ismissing_enable_
    }
Opts.Apps.OpDownload.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_ismissing_changes_flag_=false
    }
Opts.Apps.OpDownload.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_opdownload_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_ismissing_enable_=true
    [[ $_obj_opts_apps_opdownload_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_ismissing_enable_
    }
Opts.Apps.OpDownload.IsMissing.Init()
    {
    _obj_opts_apps_opdownload_ismissing_text_=''
    _obj_opts_apps_opdownload_ismissing_flag_=false
    _obj_opts_apps_opdownload_ismissing_changes_flag_=true
    _obj_opts_apps_opdownload_ismissing_enable_=false
    }
Opts.Apps.OpDownload.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_ismissing_changes_flag_=true
    }
Opts.Apps.OpDownload.IsMissing.Set()
    {
    [[ $_obj_opts_apps_opdownload_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_ismissing_flag_=true
    [[ $_obj_opts_apps_opdownload_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_ismissing_flag_
    }
Opts.Apps.OpDownload.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_ismissing_text_"
    fi
    }
Opts.Apps.OpDownload.IsMissing.Init

Opts.Apps.OpDownload.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntmissing_flag_=false
    [[ $_obj_opts_apps_opdownload_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntmissing_flag_
    }
Opts.Apps.OpDownload.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntmissing_enable_=false
    [[ $_obj_opts_apps_opdownload_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntmissing_enable_
    }
Opts.Apps.OpDownload.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntmissing_changes_flag_=false
    }
Opts.Apps.OpDownload.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntmissing_enable_=true
    [[ $_obj_opts_apps_opdownload_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntmissing_enable_
    }
Opts.Apps.OpDownload.IsNtMissing.Init()
    {
    _obj_opts_apps_opdownload_isntmissing_text_=''
    _obj_opts_apps_opdownload_isntmissing_flag_=false
    _obj_opts_apps_opdownload_isntmissing_changes_flag_=true
    _obj_opts_apps_opdownload_isntmissing_enable_=false
    }
Opts.Apps.OpDownload.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntmissing_changes_flag_=true
    }
Opts.Apps.OpDownload.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_opdownload_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntmissing_flag_=true
    [[ $_obj_opts_apps_opdownload_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntmissing_flag_
    }
Opts.Apps.OpDownload.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isntmissing_text_"
    fi
    }
Opts.Apps.OpDownload.IsNtMissing.Init

Opts.Apps.OpInstall.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_opinstall_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_ismissing_flag_=false
    [[ $_obj_opts_apps_opinstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_ismissing_flag_
    }
Opts.Apps.OpInstall.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_opinstall_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_ismissing_enable_=false
    [[ $_obj_opts_apps_opinstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_ismissing_enable_
    }
Opts.Apps.OpInstall.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_ismissing_changes_flag_=false
    }
Opts.Apps.OpInstall.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_opinstall_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_ismissing_enable_=true
    [[ $_obj_opts_apps_opinstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_ismissing_enable_
    }
Opts.Apps.OpInstall.IsMissing.Init()
    {
    _obj_opts_apps_opinstall_ismissing_text_=''
    _obj_opts_apps_opinstall_ismissing_flag_=false
    _obj_opts_apps_opinstall_ismissing_changes_flag_=true
    _obj_opts_apps_opinstall_ismissing_enable_=false
    }
Opts.Apps.OpInstall.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_ismissing_changes_flag_=true
    }
Opts.Apps.OpInstall.IsMissing.Set()
    {
    [[ $_obj_opts_apps_opinstall_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_ismissing_flag_=true
    [[ $_obj_opts_apps_opinstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_ismissing_flag_
    }
Opts.Apps.OpInstall.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_ismissing_text_"
    fi
    }
Opts.Apps.OpInstall.IsMissing.Init

Opts.Apps.OpInstall.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntmissing_flag_=false
    [[ $_obj_opts_apps_opinstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntmissing_flag_
    }
Opts.Apps.OpInstall.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntmissing_enable_=false
    [[ $_obj_opts_apps_opinstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntmissing_enable_
    }
Opts.Apps.OpInstall.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntmissing_changes_flag_=false
    }
Opts.Apps.OpInstall.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntmissing_enable_=true
    [[ $_obj_opts_apps_opinstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntmissing_enable_
    }
Opts.Apps.OpInstall.IsNtMissing.Init()
    {
    _obj_opts_apps_opinstall_isntmissing_text_=''
    _obj_opts_apps_opinstall_isntmissing_flag_=false
    _obj_opts_apps_opinstall_isntmissing_changes_flag_=true
    _obj_opts_apps_opinstall_isntmissing_enable_=false
    }
Opts.Apps.OpInstall.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntmissing_changes_flag_=true
    }
Opts.Apps.OpInstall.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_opinstall_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntmissing_flag_=true
    [[ $_obj_opts_apps_opinstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntmissing_flag_
    }
Opts.Apps.OpInstall.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isntmissing_text_"
    fi
    }
Opts.Apps.OpInstall.IsNtMissing.Init

Opts.Apps.OpRebuild.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_ismissing_flag_=false
    [[ $_obj_opts_apps_oprebuild_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_ismissing_flag_
    }
Opts.Apps.OpRebuild.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_ismissing_enable_=false
    [[ $_obj_opts_apps_oprebuild_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_ismissing_enable_
    }
Opts.Apps.OpRebuild.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_ismissing_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_ismissing_enable_=true
    [[ $_obj_opts_apps_oprebuild_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_ismissing_enable_
    }
Opts.Apps.OpRebuild.IsMissing.Init()
    {
    _obj_opts_apps_oprebuild_ismissing_text_=''
    _obj_opts_apps_oprebuild_ismissing_flag_=false
    _obj_opts_apps_oprebuild_ismissing_changes_flag_=true
    _obj_opts_apps_oprebuild_ismissing_enable_=false
    }
Opts.Apps.OpRebuild.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_ismissing_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsMissing.Set()
    {
    [[ $_obj_opts_apps_oprebuild_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_ismissing_flag_=true
    [[ $_obj_opts_apps_oprebuild_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_ismissing_flag_
    }
Opts.Apps.OpRebuild.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_ismissing_text_"
    fi
    }
Opts.Apps.OpRebuild.IsMissing.Init

Opts.Apps.OpRebuild.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntmissing_flag_=false
    [[ $_obj_opts_apps_oprebuild_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntmissing_flag_
    }
Opts.Apps.OpRebuild.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntmissing_enable_=false
    [[ $_obj_opts_apps_oprebuild_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntmissing_enable_
    }
Opts.Apps.OpRebuild.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntmissing_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntmissing_enable_=true
    [[ $_obj_opts_apps_oprebuild_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntmissing_enable_
    }
Opts.Apps.OpRebuild.IsNtMissing.Init()
    {
    _obj_opts_apps_oprebuild_isntmissing_text_=''
    _obj_opts_apps_oprebuild_isntmissing_flag_=false
    _obj_opts_apps_oprebuild_isntmissing_changes_flag_=true
    _obj_opts_apps_oprebuild_isntmissing_enable_=false
    }
Opts.Apps.OpRebuild.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntmissing_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntmissing_flag_=true
    [[ $_obj_opts_apps_oprebuild_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntmissing_flag_
    }
Opts.Apps.OpRebuild.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isntmissing_text_"
    fi
    }
Opts.Apps.OpRebuild.IsNtMissing.Init

Opts.Apps.OpReinstall.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_ismissing_flag_=false
    [[ $_obj_opts_apps_opreinstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_ismissing_flag_
    }
Opts.Apps.OpReinstall.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_ismissing_enable_=false
    [[ $_obj_opts_apps_opreinstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_ismissing_enable_
    }
Opts.Apps.OpReinstall.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_ismissing_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_ismissing_enable_=true
    [[ $_obj_opts_apps_opreinstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_ismissing_enable_
    }
Opts.Apps.OpReinstall.IsMissing.Init()
    {
    _obj_opts_apps_opreinstall_ismissing_text_=''
    _obj_opts_apps_opreinstall_ismissing_flag_=false
    _obj_opts_apps_opreinstall_ismissing_changes_flag_=true
    _obj_opts_apps_opreinstall_ismissing_enable_=false
    }
Opts.Apps.OpReinstall.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_ismissing_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsMissing.Set()
    {
    [[ $_obj_opts_apps_opreinstall_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_ismissing_flag_=true
    [[ $_obj_opts_apps_opreinstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_ismissing_flag_
    }
Opts.Apps.OpReinstall.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_ismissing_text_"
    fi
    }
Opts.Apps.OpReinstall.IsMissing.Init

Opts.Apps.OpReinstall.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntmissing_flag_=false
    [[ $_obj_opts_apps_opreinstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntmissing_flag_
    }
Opts.Apps.OpReinstall.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntmissing_enable_=false
    [[ $_obj_opts_apps_opreinstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntmissing_enable_
    }
Opts.Apps.OpReinstall.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntmissing_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntmissing_enable_=true
    [[ $_obj_opts_apps_opreinstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntmissing_enable_
    }
Opts.Apps.OpReinstall.IsNtMissing.Init()
    {
    _obj_opts_apps_opreinstall_isntmissing_text_=''
    _obj_opts_apps_opreinstall_isntmissing_flag_=false
    _obj_opts_apps_opreinstall_isntmissing_changes_flag_=true
    _obj_opts_apps_opreinstall_isntmissing_enable_=false
    }
Opts.Apps.OpReinstall.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntmissing_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntmissing_flag_=true
    [[ $_obj_opts_apps_opreinstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntmissing_flag_
    }
Opts.Apps.OpReinstall.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isntmissing_text_"
    fi
    }
Opts.Apps.OpReinstall.IsNtMissing.Init

Opts.Apps.OpRestart.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_oprestart_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_ismissing_flag_=false
    [[ $_obj_opts_apps_oprestart_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_ismissing_flag_
    }
Opts.Apps.OpRestart.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_oprestart_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_ismissing_enable_=false
    [[ $_obj_opts_apps_oprestart_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_ismissing_enable_
    }
Opts.Apps.OpRestart.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_ismissing_changes_flag_=false
    }
Opts.Apps.OpRestart.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_oprestart_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_ismissing_enable_=true
    [[ $_obj_opts_apps_oprestart_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_ismissing_enable_
    }
Opts.Apps.OpRestart.IsMissing.Init()
    {
    _obj_opts_apps_oprestart_ismissing_text_=''
    _obj_opts_apps_oprestart_ismissing_flag_=false
    _obj_opts_apps_oprestart_ismissing_changes_flag_=true
    _obj_opts_apps_oprestart_ismissing_enable_=false
    }
Opts.Apps.OpRestart.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_ismissing_changes_flag_=true
    }
Opts.Apps.OpRestart.IsMissing.Set()
    {
    [[ $_obj_opts_apps_oprestart_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_ismissing_flag_=true
    [[ $_obj_opts_apps_oprestart_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_ismissing_flag_
    }
Opts.Apps.OpRestart.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_ismissing_text_"
    fi
    }
Opts.Apps.OpRestart.IsMissing.Init

Opts.Apps.OpRestart.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntmissing_flag_=false
    [[ $_obj_opts_apps_oprestart_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntmissing_flag_
    }
Opts.Apps.OpRestart.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntmissing_enable_=false
    [[ $_obj_opts_apps_oprestart_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntmissing_enable_
    }
Opts.Apps.OpRestart.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntmissing_changes_flag_=false
    }
Opts.Apps.OpRestart.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntmissing_enable_=true
    [[ $_obj_opts_apps_oprestart_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntmissing_enable_
    }
Opts.Apps.OpRestart.IsNtMissing.Init()
    {
    _obj_opts_apps_oprestart_isntmissing_text_=''
    _obj_opts_apps_oprestart_isntmissing_flag_=false
    _obj_opts_apps_oprestart_isntmissing_changes_flag_=true
    _obj_opts_apps_oprestart_isntmissing_enable_=false
    }
Opts.Apps.OpRestart.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntmissing_changes_flag_=true
    }
Opts.Apps.OpRestart.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_oprestart_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntmissing_flag_=true
    [[ $_obj_opts_apps_oprestart_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntmissing_flag_
    }
Opts.Apps.OpRestart.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isntmissing_text_"
    fi
    }
Opts.Apps.OpRestart.IsNtMissing.Init

Opts.Apps.OpRestore.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_oprestore_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_ismissing_flag_=false
    [[ $_obj_opts_apps_oprestore_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_ismissing_flag_
    }
Opts.Apps.OpRestore.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_oprestore_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_ismissing_enable_=false
    [[ $_obj_opts_apps_oprestore_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_ismissing_enable_
    }
Opts.Apps.OpRestore.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_ismissing_changes_flag_=false
    }
Opts.Apps.OpRestore.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_oprestore_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_ismissing_enable_=true
    [[ $_obj_opts_apps_oprestore_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_ismissing_enable_
    }
Opts.Apps.OpRestore.IsMissing.Init()
    {
    _obj_opts_apps_oprestore_ismissing_text_=''
    _obj_opts_apps_oprestore_ismissing_flag_=false
    _obj_opts_apps_oprestore_ismissing_changes_flag_=true
    _obj_opts_apps_oprestore_ismissing_enable_=false
    }
Opts.Apps.OpRestore.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_ismissing_changes_flag_=true
    }
Opts.Apps.OpRestore.IsMissing.Set()
    {
    [[ $_obj_opts_apps_oprestore_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_ismissing_flag_=true
    [[ $_obj_opts_apps_oprestore_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_ismissing_flag_
    }
Opts.Apps.OpRestore.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_ismissing_text_"
    fi
    }
Opts.Apps.OpRestore.IsMissing.Init

Opts.Apps.OpRestore.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntmissing_flag_=false
    [[ $_obj_opts_apps_oprestore_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntmissing_flag_
    }
Opts.Apps.OpRestore.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntmissing_enable_=false
    [[ $_obj_opts_apps_oprestore_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntmissing_enable_
    }
Opts.Apps.OpRestore.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntmissing_changes_flag_=false
    }
Opts.Apps.OpRestore.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntmissing_enable_=true
    [[ $_obj_opts_apps_oprestore_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntmissing_enable_
    }
Opts.Apps.OpRestore.IsNtMissing.Init()
    {
    _obj_opts_apps_oprestore_isntmissing_text_=''
    _obj_opts_apps_oprestore_isntmissing_flag_=false
    _obj_opts_apps_oprestore_isntmissing_changes_flag_=true
    _obj_opts_apps_oprestore_isntmissing_enable_=false
    }
Opts.Apps.OpRestore.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntmissing_changes_flag_=true
    }
Opts.Apps.OpRestore.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_oprestore_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntmissing_flag_=true
    [[ $_obj_opts_apps_oprestore_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntmissing_flag_
    }
Opts.Apps.OpRestore.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isntmissing_text_"
    fi
    }
Opts.Apps.OpRestore.IsNtMissing.Init

Opts.Apps.OpStart.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_opstart_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_ismissing_flag_=false
    [[ $_obj_opts_apps_opstart_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_ismissing_flag_
    }
Opts.Apps.OpStart.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_opstart_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_ismissing_enable_=false
    [[ $_obj_opts_apps_opstart_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_ismissing_enable_
    }
Opts.Apps.OpStart.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_ismissing_changes_flag_=false
    }
Opts.Apps.OpStart.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_opstart_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_ismissing_enable_=true
    [[ $_obj_opts_apps_opstart_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_ismissing_enable_
    }
Opts.Apps.OpStart.IsMissing.Init()
    {
    _obj_opts_apps_opstart_ismissing_text_=''
    _obj_opts_apps_opstart_ismissing_flag_=false
    _obj_opts_apps_opstart_ismissing_changes_flag_=true
    _obj_opts_apps_opstart_ismissing_enable_=false
    }
Opts.Apps.OpStart.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_opstart_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_opstart_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_ismissing_changes_flag_=true
    }
Opts.Apps.OpStart.IsMissing.Set()
    {
    [[ $_obj_opts_apps_opstart_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_ismissing_flag_=true
    [[ $_obj_opts_apps_opstart_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_ismissing_flag_
    }
Opts.Apps.OpStart.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_ismissing_text_"
    fi
    }
Opts.Apps.OpStart.IsMissing.Init

Opts.Apps.OpStart.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_opstart_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntmissing_flag_=false
    [[ $_obj_opts_apps_opstart_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntmissing_flag_
    }
Opts.Apps.OpStart.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_opstart_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntmissing_enable_=false
    [[ $_obj_opts_apps_opstart_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntmissing_enable_
    }
Opts.Apps.OpStart.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntmissing_changes_flag_=false
    }
Opts.Apps.OpStart.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_opstart_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntmissing_enable_=true
    [[ $_obj_opts_apps_opstart_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntmissing_enable_
    }
Opts.Apps.OpStart.IsNtMissing.Init()
    {
    _obj_opts_apps_opstart_isntmissing_text_=''
    _obj_opts_apps_opstart_isntmissing_flag_=false
    _obj_opts_apps_opstart_isntmissing_changes_flag_=true
    _obj_opts_apps_opstart_isntmissing_enable_=false
    }
Opts.Apps.OpStart.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntmissing_changes_flag_=true
    }
Opts.Apps.OpStart.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_opstart_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntmissing_flag_=true
    [[ $_obj_opts_apps_opstart_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntmissing_flag_
    }
Opts.Apps.OpStart.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isntmissing_text_"
    fi
    }
Opts.Apps.OpStart.IsNtMissing.Init

Opts.Apps.OpStop.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_opstop_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_ismissing_flag_=false
    [[ $_obj_opts_apps_opstop_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_ismissing_flag_
    }
Opts.Apps.OpStop.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_opstop_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_ismissing_enable_=false
    [[ $_obj_opts_apps_opstop_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_ismissing_enable_
    }
Opts.Apps.OpStop.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_ismissing_changes_flag_=false
    }
Opts.Apps.OpStop.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_opstop_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_ismissing_enable_=true
    [[ $_obj_opts_apps_opstop_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_ismissing_enable_
    }
Opts.Apps.OpStop.IsMissing.Init()
    {
    _obj_opts_apps_opstop_ismissing_text_=''
    _obj_opts_apps_opstop_ismissing_flag_=false
    _obj_opts_apps_opstop_ismissing_changes_flag_=true
    _obj_opts_apps_opstop_ismissing_enable_=false
    }
Opts.Apps.OpStop.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_opstop_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_opstop_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_ismissing_changes_flag_=true
    }
Opts.Apps.OpStop.IsMissing.Set()
    {
    [[ $_obj_opts_apps_opstop_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_ismissing_flag_=true
    [[ $_obj_opts_apps_opstop_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_ismissing_flag_
    }
Opts.Apps.OpStop.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_ismissing_text_"
    fi
    }
Opts.Apps.OpStop.IsMissing.Init

Opts.Apps.OpStop.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_opstop_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntmissing_flag_=false
    [[ $_obj_opts_apps_opstop_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntmissing_flag_
    }
Opts.Apps.OpStop.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_opstop_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntmissing_enable_=false
    [[ $_obj_opts_apps_opstop_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntmissing_enable_
    }
Opts.Apps.OpStop.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntmissing_changes_flag_=false
    }
Opts.Apps.OpStop.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_opstop_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntmissing_enable_=true
    [[ $_obj_opts_apps_opstop_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntmissing_enable_
    }
Opts.Apps.OpStop.IsNtMissing.Init()
    {
    _obj_opts_apps_opstop_isntmissing_text_=''
    _obj_opts_apps_opstop_isntmissing_flag_=false
    _obj_opts_apps_opstop_isntmissing_changes_flag_=true
    _obj_opts_apps_opstop_isntmissing_enable_=false
    }
Opts.Apps.OpStop.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntmissing_changes_flag_=true
    }
Opts.Apps.OpStop.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_opstop_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntmissing_flag_=true
    [[ $_obj_opts_apps_opstop_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntmissing_flag_
    }
Opts.Apps.OpStop.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isntmissing_text_"
    fi
    }
Opts.Apps.OpStop.IsNtMissing.Init

Opts.Apps.OpUninstall.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_ismissing_flag_=false
    [[ $_obj_opts_apps_opuninstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_ismissing_flag_
    }
Opts.Apps.OpUninstall.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_ismissing_enable_=false
    [[ $_obj_opts_apps_opuninstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_ismissing_enable_
    }
Opts.Apps.OpUninstall.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_ismissing_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_ismissing_enable_=true
    [[ $_obj_opts_apps_opuninstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_ismissing_enable_
    }
Opts.Apps.OpUninstall.IsMissing.Init()
    {
    _obj_opts_apps_opuninstall_ismissing_text_=''
    _obj_opts_apps_opuninstall_ismissing_flag_=false
    _obj_opts_apps_opuninstall_ismissing_changes_flag_=true
    _obj_opts_apps_opuninstall_ismissing_enable_=false
    }
Opts.Apps.OpUninstall.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_ismissing_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsMissing.Set()
    {
    [[ $_obj_opts_apps_opuninstall_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_ismissing_flag_=true
    [[ $_obj_opts_apps_opuninstall_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_ismissing_flag_
    }
Opts.Apps.OpUninstall.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_ismissing_text_"
    fi
    }
Opts.Apps.OpUninstall.IsMissing.Init

Opts.Apps.OpUninstall.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntmissing_flag_=false
    [[ $_obj_opts_apps_opuninstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntmissing_flag_
    }
Opts.Apps.OpUninstall.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntmissing_enable_=false
    [[ $_obj_opts_apps_opuninstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntmissing_enable_
    }
Opts.Apps.OpUninstall.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntmissing_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntmissing_enable_=true
    [[ $_obj_opts_apps_opuninstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntmissing_enable_
    }
Opts.Apps.OpUninstall.IsNtMissing.Init()
    {
    _obj_opts_apps_opuninstall_isntmissing_text_=''
    _obj_opts_apps_opuninstall_isntmissing_flag_=false
    _obj_opts_apps_opuninstall_isntmissing_changes_flag_=true
    _obj_opts_apps_opuninstall_isntmissing_enable_=false
    }
Opts.Apps.OpUninstall.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntmissing_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntmissing_flag_=true
    [[ $_obj_opts_apps_opuninstall_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntmissing_flag_
    }
Opts.Apps.OpUninstall.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isntmissing_text_"
    fi
    }
Opts.Apps.OpUninstall.IsNtMissing.Init

Opts.Apps.OpUpgrade.IsMissing.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_ismissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_ismissing_flag_=false
    [[ $_obj_opts_apps_opupgrade_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_ismissing_flag_
    }
Opts.Apps.OpUpgrade.IsMissing.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_ismissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_ismissing_enable_=false
    [[ $_obj_opts_apps_opupgrade_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_ismissing_enable_
    }
Opts.Apps.OpUpgrade.IsMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_ismissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_ismissing_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsMissing.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_ismissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_ismissing_enable_=true
    [[ $_obj_opts_apps_opupgrade_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_ismissing_enable_
    }
Opts.Apps.OpUpgrade.IsMissing.Init()
    {
    _obj_opts_apps_opupgrade_ismissing_text_=''
    _obj_opts_apps_opupgrade_ismissing_flag_=false
    _obj_opts_apps_opupgrade_ismissing_changes_flag_=true
    _obj_opts_apps_opupgrade_ismissing_enable_=false
    }
Opts.Apps.OpUpgrade.IsMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_ismissing_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_ismissing_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsMissing.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_ismissing_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsMissing.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_ismissing_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_ismissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_ismissing_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsMissing.Set()
    {
    [[ $_obj_opts_apps_opupgrade_ismissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_ismissing_flag_=true
    [[ $_obj_opts_apps_opupgrade_ismissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_ismissing_flag_
    }
Opts.Apps.OpUpgrade.IsMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_ismissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_ismissing_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsMissing.Init

Opts.Apps.OpUpgrade.IsNtMissing.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isntmissing_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntmissing_flag_=false
    [[ $_obj_opts_apps_opupgrade_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntmissing_flag_
    }
Opts.Apps.OpUpgrade.IsNtMissing.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isntmissing_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntmissing_enable_=false
    [[ $_obj_opts_apps_opupgrade_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntmissing_enable_
    }
Opts.Apps.OpUpgrade.IsNtMissing.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntmissing_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntmissing_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsNtMissing.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isntmissing_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntmissing_enable_=true
    [[ $_obj_opts_apps_opupgrade_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntmissing_enable_
    }
Opts.Apps.OpUpgrade.IsNtMissing.Init()
    {
    _obj_opts_apps_opupgrade_isntmissing_text_=''
    _obj_opts_apps_opupgrade_isntmissing_flag_=false
    _obj_opts_apps_opupgrade_isntmissing_changes_flag_=true
    _obj_opts_apps_opupgrade_isntmissing_enable_=false
    }
Opts.Apps.OpUpgrade.IsNtMissing.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntmissing_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtMissing.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntmissing_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtMissing.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isntmissing_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtMissing.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isntmissing_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtMissing.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntmissing_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntmissing_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsNtMissing.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isntmissing_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntmissing_flag_=true
    [[ $_obj_opts_apps_opupgrade_isntmissing_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntmissing_flag_
    }
Opts.Apps.OpUpgrade.IsNtMissing.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isntmissing_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isntmissing_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsNtMissing.Init

Opts.Apps.OpBackup.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstarting_flag_=false
    [[ $_obj_opts_apps_opbackup_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstarting_flag_
    }
Opts.Apps.OpBackup.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstarting_enable_=false
    [[ $_obj_opts_apps_opbackup_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstarting_enable_
    }
Opts.Apps.OpBackup.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstarting_changes_flag_=false
    }
Opts.Apps.OpBackup.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstarting_enable_=true
    [[ $_obj_opts_apps_opbackup_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstarting_enable_
    }
Opts.Apps.OpBackup.IsStarting.Init()
    {
    _obj_opts_apps_opbackup_isstarting_text_=''
    _obj_opts_apps_opbackup_isstarting_flag_=false
    _obj_opts_apps_opbackup_isstarting_changes_flag_=true
    _obj_opts_apps_opbackup_isstarting_enable_=false
    }
Opts.Apps.OpBackup.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstarting_changes_flag_=true
    }
Opts.Apps.OpBackup.IsStarting.Set()
    {
    [[ $_obj_opts_apps_opbackup_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstarting_flag_=true
    [[ $_obj_opts_apps_opbackup_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstarting_flag_
    }
Opts.Apps.OpBackup.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isstarting_text_"
    fi
    }
Opts.Apps.OpBackup.IsStarting.Init

Opts.Apps.OpBackup.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarting_flag_=false
    [[ $_obj_opts_apps_opbackup_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstarting_flag_
    }
Opts.Apps.OpBackup.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarting_enable_=false
    [[ $_obj_opts_apps_opbackup_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstarting_enable_
    }
Opts.Apps.OpBackup.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarting_changes_flag_=false
    }
Opts.Apps.OpBackup.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarting_enable_=true
    [[ $_obj_opts_apps_opbackup_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstarting_enable_
    }
Opts.Apps.OpBackup.IsNtStarting.Init()
    {
    _obj_opts_apps_opbackup_isntstarting_text_=''
    _obj_opts_apps_opbackup_isntstarting_flag_=false
    _obj_opts_apps_opbackup_isntstarting_changes_flag_=true
    _obj_opts_apps_opbackup_isntstarting_enable_=false
    }
Opts.Apps.OpBackup.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarting_changes_flag_=true
    }
Opts.Apps.OpBackup.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_opbackup_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarting_flag_=true
    [[ $_obj_opts_apps_opbackup_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstarting_flag_
    }
Opts.Apps.OpBackup.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isntstarting_text_"
    fi
    }
Opts.Apps.OpBackup.IsNtStarting.Init

Opts.Apps.OpDownload.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstarting_flag_=false
    [[ $_obj_opts_apps_opdownload_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstarting_flag_
    }
Opts.Apps.OpDownload.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstarting_enable_=false
    [[ $_obj_opts_apps_opdownload_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstarting_enable_
    }
Opts.Apps.OpDownload.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstarting_changes_flag_=false
    }
Opts.Apps.OpDownload.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstarting_enable_=true
    [[ $_obj_opts_apps_opdownload_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstarting_enable_
    }
Opts.Apps.OpDownload.IsStarting.Init()
    {
    _obj_opts_apps_opdownload_isstarting_text_=''
    _obj_opts_apps_opdownload_isstarting_flag_=false
    _obj_opts_apps_opdownload_isstarting_changes_flag_=true
    _obj_opts_apps_opdownload_isstarting_enable_=false
    }
Opts.Apps.OpDownload.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstarting_changes_flag_=true
    }
Opts.Apps.OpDownload.IsStarting.Set()
    {
    [[ $_obj_opts_apps_opdownload_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstarting_flag_=true
    [[ $_obj_opts_apps_opdownload_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstarting_flag_
    }
Opts.Apps.OpDownload.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isstarting_text_"
    fi
    }
Opts.Apps.OpDownload.IsStarting.Init

Opts.Apps.OpDownload.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarting_flag_=false
    [[ $_obj_opts_apps_opdownload_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstarting_flag_
    }
Opts.Apps.OpDownload.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarting_enable_=false
    [[ $_obj_opts_apps_opdownload_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstarting_enable_
    }
Opts.Apps.OpDownload.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarting_changes_flag_=false
    }
Opts.Apps.OpDownload.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarting_enable_=true
    [[ $_obj_opts_apps_opdownload_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstarting_enable_
    }
Opts.Apps.OpDownload.IsNtStarting.Init()
    {
    _obj_opts_apps_opdownload_isntstarting_text_=''
    _obj_opts_apps_opdownload_isntstarting_flag_=false
    _obj_opts_apps_opdownload_isntstarting_changes_flag_=true
    _obj_opts_apps_opdownload_isntstarting_enable_=false
    }
Opts.Apps.OpDownload.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarting_changes_flag_=true
    }
Opts.Apps.OpDownload.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_opdownload_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarting_flag_=true
    [[ $_obj_opts_apps_opdownload_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstarting_flag_
    }
Opts.Apps.OpDownload.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isntstarting_text_"
    fi
    }
Opts.Apps.OpDownload.IsNtStarting.Init

Opts.Apps.OpInstall.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstarting_flag_=false
    [[ $_obj_opts_apps_opinstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstarting_flag_
    }
Opts.Apps.OpInstall.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstarting_enable_=false
    [[ $_obj_opts_apps_opinstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstarting_enable_
    }
Opts.Apps.OpInstall.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstarting_changes_flag_=false
    }
Opts.Apps.OpInstall.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstarting_enable_=true
    [[ $_obj_opts_apps_opinstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstarting_enable_
    }
Opts.Apps.OpInstall.IsStarting.Init()
    {
    _obj_opts_apps_opinstall_isstarting_text_=''
    _obj_opts_apps_opinstall_isstarting_flag_=false
    _obj_opts_apps_opinstall_isstarting_changes_flag_=true
    _obj_opts_apps_opinstall_isstarting_enable_=false
    }
Opts.Apps.OpInstall.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstarting_changes_flag_=true
    }
Opts.Apps.OpInstall.IsStarting.Set()
    {
    [[ $_obj_opts_apps_opinstall_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstarting_flag_=true
    [[ $_obj_opts_apps_opinstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstarting_flag_
    }
Opts.Apps.OpInstall.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isstarting_text_"
    fi
    }
Opts.Apps.OpInstall.IsStarting.Init

Opts.Apps.OpInstall.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarting_flag_=false
    [[ $_obj_opts_apps_opinstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstarting_flag_
    }
Opts.Apps.OpInstall.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarting_enable_=false
    [[ $_obj_opts_apps_opinstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstarting_enable_
    }
Opts.Apps.OpInstall.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarting_changes_flag_=false
    }
Opts.Apps.OpInstall.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarting_enable_=true
    [[ $_obj_opts_apps_opinstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstarting_enable_
    }
Opts.Apps.OpInstall.IsNtStarting.Init()
    {
    _obj_opts_apps_opinstall_isntstarting_text_=''
    _obj_opts_apps_opinstall_isntstarting_flag_=false
    _obj_opts_apps_opinstall_isntstarting_changes_flag_=true
    _obj_opts_apps_opinstall_isntstarting_enable_=false
    }
Opts.Apps.OpInstall.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarting_changes_flag_=true
    }
Opts.Apps.OpInstall.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_opinstall_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarting_flag_=true
    [[ $_obj_opts_apps_opinstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstarting_flag_
    }
Opts.Apps.OpInstall.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isntstarting_text_"
    fi
    }
Opts.Apps.OpInstall.IsNtStarting.Init

Opts.Apps.OpRebuild.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarting_flag_=false
    [[ $_obj_opts_apps_oprebuild_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstarting_flag_
    }
Opts.Apps.OpRebuild.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarting_enable_=false
    [[ $_obj_opts_apps_oprebuild_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstarting_enable_
    }
Opts.Apps.OpRebuild.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarting_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarting_enable_=true
    [[ $_obj_opts_apps_oprebuild_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstarting_enable_
    }
Opts.Apps.OpRebuild.IsStarting.Init()
    {
    _obj_opts_apps_oprebuild_isstarting_text_=''
    _obj_opts_apps_oprebuild_isstarting_flag_=false
    _obj_opts_apps_oprebuild_isstarting_changes_flag_=true
    _obj_opts_apps_oprebuild_isstarting_enable_=false
    }
Opts.Apps.OpRebuild.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarting_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsStarting.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarting_flag_=true
    [[ $_obj_opts_apps_oprebuild_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstarting_flag_
    }
Opts.Apps.OpRebuild.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isstarting_text_"
    fi
    }
Opts.Apps.OpRebuild.IsStarting.Init

Opts.Apps.OpRebuild.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarting_flag_=false
    [[ $_obj_opts_apps_oprebuild_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstarting_flag_
    }
Opts.Apps.OpRebuild.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarting_enable_=false
    [[ $_obj_opts_apps_oprebuild_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstarting_enable_
    }
Opts.Apps.OpRebuild.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarting_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarting_enable_=true
    [[ $_obj_opts_apps_oprebuild_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstarting_enable_
    }
Opts.Apps.OpRebuild.IsNtStarting.Init()
    {
    _obj_opts_apps_oprebuild_isntstarting_text_=''
    _obj_opts_apps_oprebuild_isntstarting_flag_=false
    _obj_opts_apps_oprebuild_isntstarting_changes_flag_=true
    _obj_opts_apps_oprebuild_isntstarting_enable_=false
    }
Opts.Apps.OpRebuild.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarting_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarting_flag_=true
    [[ $_obj_opts_apps_oprebuild_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstarting_flag_
    }
Opts.Apps.OpRebuild.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isntstarting_text_"
    fi
    }
Opts.Apps.OpRebuild.IsNtStarting.Init

Opts.Apps.OpReinstall.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarting_flag_=false
    [[ $_obj_opts_apps_opreinstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstarting_flag_
    }
Opts.Apps.OpReinstall.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarting_enable_=false
    [[ $_obj_opts_apps_opreinstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstarting_enable_
    }
Opts.Apps.OpReinstall.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarting_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarting_enable_=true
    [[ $_obj_opts_apps_opreinstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstarting_enable_
    }
Opts.Apps.OpReinstall.IsStarting.Init()
    {
    _obj_opts_apps_opreinstall_isstarting_text_=''
    _obj_opts_apps_opreinstall_isstarting_flag_=false
    _obj_opts_apps_opreinstall_isstarting_changes_flag_=true
    _obj_opts_apps_opreinstall_isstarting_enable_=false
    }
Opts.Apps.OpReinstall.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarting_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsStarting.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarting_flag_=true
    [[ $_obj_opts_apps_opreinstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstarting_flag_
    }
Opts.Apps.OpReinstall.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isstarting_text_"
    fi
    }
Opts.Apps.OpReinstall.IsStarting.Init

Opts.Apps.OpReinstall.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarting_flag_=false
    [[ $_obj_opts_apps_opreinstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstarting_flag_
    }
Opts.Apps.OpReinstall.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarting_enable_=false
    [[ $_obj_opts_apps_opreinstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstarting_enable_
    }
Opts.Apps.OpReinstall.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarting_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarting_enable_=true
    [[ $_obj_opts_apps_opreinstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstarting_enable_
    }
Opts.Apps.OpReinstall.IsNtStarting.Init()
    {
    _obj_opts_apps_opreinstall_isntstarting_text_=''
    _obj_opts_apps_opreinstall_isntstarting_flag_=false
    _obj_opts_apps_opreinstall_isntstarting_changes_flag_=true
    _obj_opts_apps_opreinstall_isntstarting_enable_=false
    }
Opts.Apps.OpReinstall.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarting_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarting_flag_=true
    [[ $_obj_opts_apps_opreinstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstarting_flag_
    }
Opts.Apps.OpReinstall.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isntstarting_text_"
    fi
    }
Opts.Apps.OpReinstall.IsNtStarting.Init

Opts.Apps.OpRestart.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstarting_flag_=false
    [[ $_obj_opts_apps_oprestart_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstarting_flag_
    }
Opts.Apps.OpRestart.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstarting_enable_=false
    [[ $_obj_opts_apps_oprestart_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstarting_enable_
    }
Opts.Apps.OpRestart.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstarting_changes_flag_=false
    }
Opts.Apps.OpRestart.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstarting_enable_=true
    [[ $_obj_opts_apps_oprestart_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstarting_enable_
    }
Opts.Apps.OpRestart.IsStarting.Init()
    {
    _obj_opts_apps_oprestart_isstarting_text_=''
    _obj_opts_apps_oprestart_isstarting_flag_=false
    _obj_opts_apps_oprestart_isstarting_changes_flag_=true
    _obj_opts_apps_oprestart_isstarting_enable_=false
    }
Opts.Apps.OpRestart.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstarting_changes_flag_=true
    }
Opts.Apps.OpRestart.IsStarting.Set()
    {
    [[ $_obj_opts_apps_oprestart_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstarting_flag_=true
    [[ $_obj_opts_apps_oprestart_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstarting_flag_
    }
Opts.Apps.OpRestart.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isstarting_text_"
    fi
    }
Opts.Apps.OpRestart.IsStarting.Init

Opts.Apps.OpRestart.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarting_flag_=false
    [[ $_obj_opts_apps_oprestart_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstarting_flag_
    }
Opts.Apps.OpRestart.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarting_enable_=false
    [[ $_obj_opts_apps_oprestart_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstarting_enable_
    }
Opts.Apps.OpRestart.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarting_changes_flag_=false
    }
Opts.Apps.OpRestart.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarting_enable_=true
    [[ $_obj_opts_apps_oprestart_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstarting_enable_
    }
Opts.Apps.OpRestart.IsNtStarting.Init()
    {
    _obj_opts_apps_oprestart_isntstarting_text_=''
    _obj_opts_apps_oprestart_isntstarting_flag_=false
    _obj_opts_apps_oprestart_isntstarting_changes_flag_=true
    _obj_opts_apps_oprestart_isntstarting_enable_=false
    }
Opts.Apps.OpRestart.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarting_changes_flag_=true
    }
Opts.Apps.OpRestart.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_oprestart_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarting_flag_=true
    [[ $_obj_opts_apps_oprestart_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstarting_flag_
    }
Opts.Apps.OpRestart.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isntstarting_text_"
    fi
    }
Opts.Apps.OpRestart.IsNtStarting.Init

Opts.Apps.OpRestore.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstarting_flag_=false
    [[ $_obj_opts_apps_oprestore_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstarting_flag_
    }
Opts.Apps.OpRestore.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstarting_enable_=false
    [[ $_obj_opts_apps_oprestore_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstarting_enable_
    }
Opts.Apps.OpRestore.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstarting_changes_flag_=false
    }
Opts.Apps.OpRestore.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstarting_enable_=true
    [[ $_obj_opts_apps_oprestore_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstarting_enable_
    }
Opts.Apps.OpRestore.IsStarting.Init()
    {
    _obj_opts_apps_oprestore_isstarting_text_=''
    _obj_opts_apps_oprestore_isstarting_flag_=false
    _obj_opts_apps_oprestore_isstarting_changes_flag_=true
    _obj_opts_apps_oprestore_isstarting_enable_=false
    }
Opts.Apps.OpRestore.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstarting_changes_flag_=true
    }
Opts.Apps.OpRestore.IsStarting.Set()
    {
    [[ $_obj_opts_apps_oprestore_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstarting_flag_=true
    [[ $_obj_opts_apps_oprestore_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstarting_flag_
    }
Opts.Apps.OpRestore.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isstarting_text_"
    fi
    }
Opts.Apps.OpRestore.IsStarting.Init

Opts.Apps.OpRestore.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarting_flag_=false
    [[ $_obj_opts_apps_oprestore_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstarting_flag_
    }
Opts.Apps.OpRestore.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarting_enable_=false
    [[ $_obj_opts_apps_oprestore_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstarting_enable_
    }
Opts.Apps.OpRestore.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarting_changes_flag_=false
    }
Opts.Apps.OpRestore.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarting_enable_=true
    [[ $_obj_opts_apps_oprestore_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstarting_enable_
    }
Opts.Apps.OpRestore.IsNtStarting.Init()
    {
    _obj_opts_apps_oprestore_isntstarting_text_=''
    _obj_opts_apps_oprestore_isntstarting_flag_=false
    _obj_opts_apps_oprestore_isntstarting_changes_flag_=true
    _obj_opts_apps_oprestore_isntstarting_enable_=false
    }
Opts.Apps.OpRestore.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarting_changes_flag_=true
    }
Opts.Apps.OpRestore.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_oprestore_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarting_flag_=true
    [[ $_obj_opts_apps_oprestore_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstarting_flag_
    }
Opts.Apps.OpRestore.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isntstarting_text_"
    fi
    }
Opts.Apps.OpRestore.IsNtStarting.Init

Opts.Apps.OpStart.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_opstart_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstarting_flag_=false
    [[ $_obj_opts_apps_opstart_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstarting_flag_
    }
Opts.Apps.OpStart.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_opstart_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstarting_enable_=false
    [[ $_obj_opts_apps_opstart_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstarting_enable_
    }
Opts.Apps.OpStart.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstarting_changes_flag_=false
    }
Opts.Apps.OpStart.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_opstart_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstarting_enable_=true
    [[ $_obj_opts_apps_opstart_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstarting_enable_
    }
Opts.Apps.OpStart.IsStarting.Init()
    {
    _obj_opts_apps_opstart_isstarting_text_=''
    _obj_opts_apps_opstart_isstarting_flag_=false
    _obj_opts_apps_opstart_isstarting_changes_flag_=true
    _obj_opts_apps_opstart_isstarting_enable_=false
    }
Opts.Apps.OpStart.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstarting_changes_flag_=true
    }
Opts.Apps.OpStart.IsStarting.Set()
    {
    [[ $_obj_opts_apps_opstart_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstarting_flag_=true
    [[ $_obj_opts_apps_opstart_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstarting_flag_
    }
Opts.Apps.OpStart.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isstarting_text_"
    fi
    }
Opts.Apps.OpStart.IsStarting.Init

Opts.Apps.OpStart.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_opstart_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstarting_flag_=false
    [[ $_obj_opts_apps_opstart_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstarting_flag_
    }
Opts.Apps.OpStart.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_opstart_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstarting_enable_=false
    [[ $_obj_opts_apps_opstart_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstarting_enable_
    }
Opts.Apps.OpStart.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstarting_changes_flag_=false
    }
Opts.Apps.OpStart.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_opstart_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstarting_enable_=true
    [[ $_obj_opts_apps_opstart_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstarting_enable_
    }
Opts.Apps.OpStart.IsNtStarting.Init()
    {
    _obj_opts_apps_opstart_isntstarting_text_=''
    _obj_opts_apps_opstart_isntstarting_flag_=false
    _obj_opts_apps_opstart_isntstarting_changes_flag_=true
    _obj_opts_apps_opstart_isntstarting_enable_=false
    }
Opts.Apps.OpStart.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstarting_changes_flag_=true
    }
Opts.Apps.OpStart.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_opstart_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstarting_flag_=true
    [[ $_obj_opts_apps_opstart_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstarting_flag_
    }
Opts.Apps.OpStart.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isntstarting_text_"
    fi
    }
Opts.Apps.OpStart.IsNtStarting.Init

Opts.Apps.OpStop.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_opstop_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstarting_flag_=false
    [[ $_obj_opts_apps_opstop_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstarting_flag_
    }
Opts.Apps.OpStop.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_opstop_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstarting_enable_=false
    [[ $_obj_opts_apps_opstop_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstarting_enable_
    }
Opts.Apps.OpStop.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstarting_changes_flag_=false
    }
Opts.Apps.OpStop.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_opstop_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstarting_enable_=true
    [[ $_obj_opts_apps_opstop_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstarting_enable_
    }
Opts.Apps.OpStop.IsStarting.Init()
    {
    _obj_opts_apps_opstop_isstarting_text_=''
    _obj_opts_apps_opstop_isstarting_flag_=false
    _obj_opts_apps_opstop_isstarting_changes_flag_=true
    _obj_opts_apps_opstop_isstarting_enable_=false
    }
Opts.Apps.OpStop.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstarting_changes_flag_=true
    }
Opts.Apps.OpStop.IsStarting.Set()
    {
    [[ $_obj_opts_apps_opstop_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstarting_flag_=true
    [[ $_obj_opts_apps_opstop_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstarting_flag_
    }
Opts.Apps.OpStop.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isstarting_text_"
    fi
    }
Opts.Apps.OpStop.IsStarting.Init

Opts.Apps.OpStop.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_opstop_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstarting_flag_=false
    [[ $_obj_opts_apps_opstop_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstarting_flag_
    }
Opts.Apps.OpStop.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_opstop_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstarting_enable_=false
    [[ $_obj_opts_apps_opstop_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstarting_enable_
    }
Opts.Apps.OpStop.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstarting_changes_flag_=false
    }
Opts.Apps.OpStop.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_opstop_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstarting_enable_=true
    [[ $_obj_opts_apps_opstop_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstarting_enable_
    }
Opts.Apps.OpStop.IsNtStarting.Init()
    {
    _obj_opts_apps_opstop_isntstarting_text_=''
    _obj_opts_apps_opstop_isntstarting_flag_=false
    _obj_opts_apps_opstop_isntstarting_changes_flag_=true
    _obj_opts_apps_opstop_isntstarting_enable_=false
    }
Opts.Apps.OpStop.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstarting_changes_flag_=true
    }
Opts.Apps.OpStop.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_opstop_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstarting_flag_=true
    [[ $_obj_opts_apps_opstop_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstarting_flag_
    }
Opts.Apps.OpStop.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isntstarting_text_"
    fi
    }
Opts.Apps.OpStop.IsNtStarting.Init

Opts.Apps.OpUninstall.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarting_flag_=false
    [[ $_obj_opts_apps_opuninstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstarting_flag_
    }
Opts.Apps.OpUninstall.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarting_enable_=false
    [[ $_obj_opts_apps_opuninstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstarting_enable_
    }
Opts.Apps.OpUninstall.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarting_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarting_enable_=true
    [[ $_obj_opts_apps_opuninstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstarting_enable_
    }
Opts.Apps.OpUninstall.IsStarting.Init()
    {
    _obj_opts_apps_opuninstall_isstarting_text_=''
    _obj_opts_apps_opuninstall_isstarting_flag_=false
    _obj_opts_apps_opuninstall_isstarting_changes_flag_=true
    _obj_opts_apps_opuninstall_isstarting_enable_=false
    }
Opts.Apps.OpUninstall.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarting_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsStarting.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarting_flag_=true
    [[ $_obj_opts_apps_opuninstall_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstarting_flag_
    }
Opts.Apps.OpUninstall.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isstarting_text_"
    fi
    }
Opts.Apps.OpUninstall.IsStarting.Init

Opts.Apps.OpUninstall.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarting_flag_=false
    [[ $_obj_opts_apps_opuninstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstarting_flag_
    }
Opts.Apps.OpUninstall.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarting_enable_=false
    [[ $_obj_opts_apps_opuninstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstarting_enable_
    }
Opts.Apps.OpUninstall.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarting_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarting_enable_=true
    [[ $_obj_opts_apps_opuninstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstarting_enable_
    }
Opts.Apps.OpUninstall.IsNtStarting.Init()
    {
    _obj_opts_apps_opuninstall_isntstarting_text_=''
    _obj_opts_apps_opuninstall_isntstarting_flag_=false
    _obj_opts_apps_opuninstall_isntstarting_changes_flag_=true
    _obj_opts_apps_opuninstall_isntstarting_enable_=false
    }
Opts.Apps.OpUninstall.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarting_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarting_flag_=true
    [[ $_obj_opts_apps_opuninstall_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstarting_flag_
    }
Opts.Apps.OpUninstall.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isntstarting_text_"
    fi
    }
Opts.Apps.OpUninstall.IsNtStarting.Init

Opts.Apps.OpUpgrade.IsStarting.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarting_flag_=false
    [[ $_obj_opts_apps_opupgrade_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstarting_flag_
    }
Opts.Apps.OpUpgrade.IsStarting.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarting_enable_=false
    [[ $_obj_opts_apps_opupgrade_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstarting_enable_
    }
Opts.Apps.OpUpgrade.IsStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarting_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsStarting.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarting_enable_=true
    [[ $_obj_opts_apps_opupgrade_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstarting_enable_
    }
Opts.Apps.OpUpgrade.IsStarting.Init()
    {
    _obj_opts_apps_opupgrade_isstarting_text_=''
    _obj_opts_apps_opupgrade_isstarting_flag_=false
    _obj_opts_apps_opupgrade_isstarting_changes_flag_=true
    _obj_opts_apps_opupgrade_isstarting_enable_=false
    }
Opts.Apps.OpUpgrade.IsStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStarting.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStarting.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarting_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsStarting.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarting_flag_=true
    [[ $_obj_opts_apps_opupgrade_isstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstarting_flag_
    }
Opts.Apps.OpUpgrade.IsStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isstarting_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsStarting.Init

Opts.Apps.OpUpgrade.IsNtStarting.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarting_flag_=false
    [[ $_obj_opts_apps_opupgrade_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstarting_flag_
    }
Opts.Apps.OpUpgrade.IsNtStarting.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarting_enable_=false
    [[ $_obj_opts_apps_opupgrade_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstarting_enable_
    }
Opts.Apps.OpUpgrade.IsNtStarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarting_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsNtStarting.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarting_enable_=true
    [[ $_obj_opts_apps_opupgrade_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstarting_enable_
    }
Opts.Apps.OpUpgrade.IsNtStarting.Init()
    {
    _obj_opts_apps_opupgrade_isntstarting_text_=''
    _obj_opts_apps_opupgrade_isntstarting_flag_=false
    _obj_opts_apps_opupgrade_isntstarting_changes_flag_=true
    _obj_opts_apps_opupgrade_isntstarting_enable_=false
    }
Opts.Apps.OpUpgrade.IsNtStarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarting_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarting_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStarting.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarting_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStarting.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarting_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStarting.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarting_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsNtStarting.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarting_flag_=true
    [[ $_obj_opts_apps_opupgrade_isntstarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstarting_flag_
    }
Opts.Apps.OpUpgrade.IsNtStarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isntstarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isntstarting_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsNtStarting.Init

Opts.Apps.OpBackup.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstarted_flag_=false
    [[ $_obj_opts_apps_opbackup_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstarted_flag_
    }
Opts.Apps.OpBackup.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstarted_enable_=false
    [[ $_obj_opts_apps_opbackup_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstarted_enable_
    }
Opts.Apps.OpBackup.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstarted_changes_flag_=false
    }
Opts.Apps.OpBackup.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstarted_enable_=true
    [[ $_obj_opts_apps_opbackup_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstarted_enable_
    }
Opts.Apps.OpBackup.IsStarted.Init()
    {
    _obj_opts_apps_opbackup_isstarted_text_=''
    _obj_opts_apps_opbackup_isstarted_flag_=false
    _obj_opts_apps_opbackup_isstarted_changes_flag_=true
    _obj_opts_apps_opbackup_isstarted_enable_=false
    }
Opts.Apps.OpBackup.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstarted_changes_flag_=true
    }
Opts.Apps.OpBackup.IsStarted.Set()
    {
    [[ $_obj_opts_apps_opbackup_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstarted_flag_=true
    [[ $_obj_opts_apps_opbackup_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstarted_flag_
    }
Opts.Apps.OpBackup.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isstarted_text_"
    fi
    }
Opts.Apps.OpBackup.IsStarted.Init

Opts.Apps.OpBackup.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarted_flag_=false
    [[ $_obj_opts_apps_opbackup_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstarted_flag_
    }
Opts.Apps.OpBackup.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarted_enable_=false
    [[ $_obj_opts_apps_opbackup_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstarted_enable_
    }
Opts.Apps.OpBackup.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarted_changes_flag_=false
    }
Opts.Apps.OpBackup.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarted_enable_=true
    [[ $_obj_opts_apps_opbackup_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstarted_enable_
    }
Opts.Apps.OpBackup.IsNtStarted.Init()
    {
    _obj_opts_apps_opbackup_isntstarted_text_=''
    _obj_opts_apps_opbackup_isntstarted_flag_=false
    _obj_opts_apps_opbackup_isntstarted_changes_flag_=true
    _obj_opts_apps_opbackup_isntstarted_enable_=false
    }
Opts.Apps.OpBackup.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarted_changes_flag_=true
    }
Opts.Apps.OpBackup.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_opbackup_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstarted_flag_=true
    [[ $_obj_opts_apps_opbackup_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstarted_flag_
    }
Opts.Apps.OpBackup.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isntstarted_text_"
    fi
    }
Opts.Apps.OpBackup.IsNtStarted.Init

Opts.Apps.OpDownload.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstarted_flag_=false
    [[ $_obj_opts_apps_opdownload_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstarted_flag_
    }
Opts.Apps.OpDownload.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstarted_enable_=false
    [[ $_obj_opts_apps_opdownload_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstarted_enable_
    }
Opts.Apps.OpDownload.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstarted_changes_flag_=false
    }
Opts.Apps.OpDownload.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstarted_enable_=true
    [[ $_obj_opts_apps_opdownload_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstarted_enable_
    }
Opts.Apps.OpDownload.IsStarted.Init()
    {
    _obj_opts_apps_opdownload_isstarted_text_=''
    _obj_opts_apps_opdownload_isstarted_flag_=false
    _obj_opts_apps_opdownload_isstarted_changes_flag_=true
    _obj_opts_apps_opdownload_isstarted_enable_=false
    }
Opts.Apps.OpDownload.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstarted_changes_flag_=true
    }
Opts.Apps.OpDownload.IsStarted.Set()
    {
    [[ $_obj_opts_apps_opdownload_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstarted_flag_=true
    [[ $_obj_opts_apps_opdownload_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstarted_flag_
    }
Opts.Apps.OpDownload.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isstarted_text_"
    fi
    }
Opts.Apps.OpDownload.IsStarted.Init

Opts.Apps.OpDownload.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarted_flag_=false
    [[ $_obj_opts_apps_opdownload_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstarted_flag_
    }
Opts.Apps.OpDownload.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarted_enable_=false
    [[ $_obj_opts_apps_opdownload_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstarted_enable_
    }
Opts.Apps.OpDownload.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarted_changes_flag_=false
    }
Opts.Apps.OpDownload.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarted_enable_=true
    [[ $_obj_opts_apps_opdownload_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstarted_enable_
    }
Opts.Apps.OpDownload.IsNtStarted.Init()
    {
    _obj_opts_apps_opdownload_isntstarted_text_=''
    _obj_opts_apps_opdownload_isntstarted_flag_=false
    _obj_opts_apps_opdownload_isntstarted_changes_flag_=true
    _obj_opts_apps_opdownload_isntstarted_enable_=false
    }
Opts.Apps.OpDownload.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarted_changes_flag_=true
    }
Opts.Apps.OpDownload.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_opdownload_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstarted_flag_=true
    [[ $_obj_opts_apps_opdownload_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstarted_flag_
    }
Opts.Apps.OpDownload.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isntstarted_text_"
    fi
    }
Opts.Apps.OpDownload.IsNtStarted.Init

Opts.Apps.OpInstall.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstarted_flag_=false
    [[ $_obj_opts_apps_opinstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstarted_flag_
    }
Opts.Apps.OpInstall.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstarted_enable_=false
    [[ $_obj_opts_apps_opinstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstarted_enable_
    }
Opts.Apps.OpInstall.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstarted_changes_flag_=false
    }
Opts.Apps.OpInstall.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstarted_enable_=true
    [[ $_obj_opts_apps_opinstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstarted_enable_
    }
Opts.Apps.OpInstall.IsStarted.Init()
    {
    _obj_opts_apps_opinstall_isstarted_text_=''
    _obj_opts_apps_opinstall_isstarted_flag_=false
    _obj_opts_apps_opinstall_isstarted_changes_flag_=true
    _obj_opts_apps_opinstall_isstarted_enable_=false
    }
Opts.Apps.OpInstall.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstarted_changes_flag_=true
    }
Opts.Apps.OpInstall.IsStarted.Set()
    {
    [[ $_obj_opts_apps_opinstall_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstarted_flag_=true
    [[ $_obj_opts_apps_opinstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstarted_flag_
    }
Opts.Apps.OpInstall.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isstarted_text_"
    fi
    }
Opts.Apps.OpInstall.IsStarted.Init

Opts.Apps.OpInstall.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarted_flag_=false
    [[ $_obj_opts_apps_opinstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstarted_flag_
    }
Opts.Apps.OpInstall.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarted_enable_=false
    [[ $_obj_opts_apps_opinstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstarted_enable_
    }
Opts.Apps.OpInstall.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarted_changes_flag_=false
    }
Opts.Apps.OpInstall.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarted_enable_=true
    [[ $_obj_opts_apps_opinstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstarted_enable_
    }
Opts.Apps.OpInstall.IsNtStarted.Init()
    {
    _obj_opts_apps_opinstall_isntstarted_text_=''
    _obj_opts_apps_opinstall_isntstarted_flag_=false
    _obj_opts_apps_opinstall_isntstarted_changes_flag_=true
    _obj_opts_apps_opinstall_isntstarted_enable_=false
    }
Opts.Apps.OpInstall.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarted_changes_flag_=true
    }
Opts.Apps.OpInstall.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_opinstall_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstarted_flag_=true
    [[ $_obj_opts_apps_opinstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstarted_flag_
    }
Opts.Apps.OpInstall.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isntstarted_text_"
    fi
    }
Opts.Apps.OpInstall.IsNtStarted.Init

Opts.Apps.OpRebuild.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarted_flag_=false
    [[ $_obj_opts_apps_oprebuild_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstarted_flag_
    }
Opts.Apps.OpRebuild.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarted_enable_=false
    [[ $_obj_opts_apps_oprebuild_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstarted_enable_
    }
Opts.Apps.OpRebuild.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarted_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarted_enable_=true
    [[ $_obj_opts_apps_oprebuild_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstarted_enable_
    }
Opts.Apps.OpRebuild.IsStarted.Init()
    {
    _obj_opts_apps_oprebuild_isstarted_text_=''
    _obj_opts_apps_oprebuild_isstarted_flag_=false
    _obj_opts_apps_oprebuild_isstarted_changes_flag_=true
    _obj_opts_apps_oprebuild_isstarted_enable_=false
    }
Opts.Apps.OpRebuild.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarted_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsStarted.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstarted_flag_=true
    [[ $_obj_opts_apps_oprebuild_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstarted_flag_
    }
Opts.Apps.OpRebuild.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isstarted_text_"
    fi
    }
Opts.Apps.OpRebuild.IsStarted.Init

Opts.Apps.OpRebuild.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarted_flag_=false
    [[ $_obj_opts_apps_oprebuild_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstarted_flag_
    }
Opts.Apps.OpRebuild.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarted_enable_=false
    [[ $_obj_opts_apps_oprebuild_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstarted_enable_
    }
Opts.Apps.OpRebuild.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarted_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarted_enable_=true
    [[ $_obj_opts_apps_oprebuild_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstarted_enable_
    }
Opts.Apps.OpRebuild.IsNtStarted.Init()
    {
    _obj_opts_apps_oprebuild_isntstarted_text_=''
    _obj_opts_apps_oprebuild_isntstarted_flag_=false
    _obj_opts_apps_oprebuild_isntstarted_changes_flag_=true
    _obj_opts_apps_oprebuild_isntstarted_enable_=false
    }
Opts.Apps.OpRebuild.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarted_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstarted_flag_=true
    [[ $_obj_opts_apps_oprebuild_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstarted_flag_
    }
Opts.Apps.OpRebuild.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isntstarted_text_"
    fi
    }
Opts.Apps.OpRebuild.IsNtStarted.Init

Opts.Apps.OpReinstall.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarted_flag_=false
    [[ $_obj_opts_apps_opreinstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstarted_flag_
    }
Opts.Apps.OpReinstall.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarted_enable_=false
    [[ $_obj_opts_apps_opreinstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstarted_enable_
    }
Opts.Apps.OpReinstall.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarted_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarted_enable_=true
    [[ $_obj_opts_apps_opreinstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstarted_enable_
    }
Opts.Apps.OpReinstall.IsStarted.Init()
    {
    _obj_opts_apps_opreinstall_isstarted_text_=''
    _obj_opts_apps_opreinstall_isstarted_flag_=false
    _obj_opts_apps_opreinstall_isstarted_changes_flag_=true
    _obj_opts_apps_opreinstall_isstarted_enable_=false
    }
Opts.Apps.OpReinstall.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarted_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsStarted.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstarted_flag_=true
    [[ $_obj_opts_apps_opreinstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstarted_flag_
    }
Opts.Apps.OpReinstall.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isstarted_text_"
    fi
    }
Opts.Apps.OpReinstall.IsStarted.Init

Opts.Apps.OpReinstall.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarted_flag_=false
    [[ $_obj_opts_apps_opreinstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstarted_flag_
    }
Opts.Apps.OpReinstall.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarted_enable_=false
    [[ $_obj_opts_apps_opreinstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstarted_enable_
    }
Opts.Apps.OpReinstall.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarted_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarted_enable_=true
    [[ $_obj_opts_apps_opreinstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstarted_enable_
    }
Opts.Apps.OpReinstall.IsNtStarted.Init()
    {
    _obj_opts_apps_opreinstall_isntstarted_text_=''
    _obj_opts_apps_opreinstall_isntstarted_flag_=false
    _obj_opts_apps_opreinstall_isntstarted_changes_flag_=true
    _obj_opts_apps_opreinstall_isntstarted_enable_=false
    }
Opts.Apps.OpReinstall.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarted_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstarted_flag_=true
    [[ $_obj_opts_apps_opreinstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstarted_flag_
    }
Opts.Apps.OpReinstall.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isntstarted_text_"
    fi
    }
Opts.Apps.OpReinstall.IsNtStarted.Init

Opts.Apps.OpRestart.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstarted_flag_=false
    [[ $_obj_opts_apps_oprestart_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstarted_flag_
    }
Opts.Apps.OpRestart.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstarted_enable_=false
    [[ $_obj_opts_apps_oprestart_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstarted_enable_
    }
Opts.Apps.OpRestart.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstarted_changes_flag_=false
    }
Opts.Apps.OpRestart.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstarted_enable_=true
    [[ $_obj_opts_apps_oprestart_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstarted_enable_
    }
Opts.Apps.OpRestart.IsStarted.Init()
    {
    _obj_opts_apps_oprestart_isstarted_text_=''
    _obj_opts_apps_oprestart_isstarted_flag_=false
    _obj_opts_apps_oprestart_isstarted_changes_flag_=true
    _obj_opts_apps_oprestart_isstarted_enable_=false
    }
Opts.Apps.OpRestart.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstarted_changes_flag_=true
    }
Opts.Apps.OpRestart.IsStarted.Set()
    {
    [[ $_obj_opts_apps_oprestart_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstarted_flag_=true
    [[ $_obj_opts_apps_oprestart_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstarted_flag_
    }
Opts.Apps.OpRestart.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isstarted_text_"
    fi
    }
Opts.Apps.OpRestart.IsStarted.Init

Opts.Apps.OpRestart.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarted_flag_=false
    [[ $_obj_opts_apps_oprestart_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstarted_flag_
    }
Opts.Apps.OpRestart.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarted_enable_=false
    [[ $_obj_opts_apps_oprestart_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstarted_enable_
    }
Opts.Apps.OpRestart.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarted_changes_flag_=false
    }
Opts.Apps.OpRestart.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarted_enable_=true
    [[ $_obj_opts_apps_oprestart_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstarted_enable_
    }
Opts.Apps.OpRestart.IsNtStarted.Init()
    {
    _obj_opts_apps_oprestart_isntstarted_text_=''
    _obj_opts_apps_oprestart_isntstarted_flag_=false
    _obj_opts_apps_oprestart_isntstarted_changes_flag_=true
    _obj_opts_apps_oprestart_isntstarted_enable_=false
    }
Opts.Apps.OpRestart.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarted_changes_flag_=true
    }
Opts.Apps.OpRestart.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_oprestart_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstarted_flag_=true
    [[ $_obj_opts_apps_oprestart_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstarted_flag_
    }
Opts.Apps.OpRestart.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isntstarted_text_"
    fi
    }
Opts.Apps.OpRestart.IsNtStarted.Init

Opts.Apps.OpRestore.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstarted_flag_=false
    [[ $_obj_opts_apps_oprestore_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstarted_flag_
    }
Opts.Apps.OpRestore.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstarted_enable_=false
    [[ $_obj_opts_apps_oprestore_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstarted_enable_
    }
Opts.Apps.OpRestore.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstarted_changes_flag_=false
    }
Opts.Apps.OpRestore.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstarted_enable_=true
    [[ $_obj_opts_apps_oprestore_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstarted_enable_
    }
Opts.Apps.OpRestore.IsStarted.Init()
    {
    _obj_opts_apps_oprestore_isstarted_text_=''
    _obj_opts_apps_oprestore_isstarted_flag_=false
    _obj_opts_apps_oprestore_isstarted_changes_flag_=true
    _obj_opts_apps_oprestore_isstarted_enable_=false
    }
Opts.Apps.OpRestore.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstarted_changes_flag_=true
    }
Opts.Apps.OpRestore.IsStarted.Set()
    {
    [[ $_obj_opts_apps_oprestore_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstarted_flag_=true
    [[ $_obj_opts_apps_oprestore_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstarted_flag_
    }
Opts.Apps.OpRestore.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isstarted_text_"
    fi
    }
Opts.Apps.OpRestore.IsStarted.Init

Opts.Apps.OpRestore.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarted_flag_=false
    [[ $_obj_opts_apps_oprestore_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstarted_flag_
    }
Opts.Apps.OpRestore.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarted_enable_=false
    [[ $_obj_opts_apps_oprestore_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstarted_enable_
    }
Opts.Apps.OpRestore.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarted_changes_flag_=false
    }
Opts.Apps.OpRestore.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarted_enable_=true
    [[ $_obj_opts_apps_oprestore_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstarted_enable_
    }
Opts.Apps.OpRestore.IsNtStarted.Init()
    {
    _obj_opts_apps_oprestore_isntstarted_text_=''
    _obj_opts_apps_oprestore_isntstarted_flag_=false
    _obj_opts_apps_oprestore_isntstarted_changes_flag_=true
    _obj_opts_apps_oprestore_isntstarted_enable_=false
    }
Opts.Apps.OpRestore.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarted_changes_flag_=true
    }
Opts.Apps.OpRestore.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_oprestore_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstarted_flag_=true
    [[ $_obj_opts_apps_oprestore_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstarted_flag_
    }
Opts.Apps.OpRestore.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isntstarted_text_"
    fi
    }
Opts.Apps.OpRestore.IsNtStarted.Init

Opts.Apps.OpStart.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_opstart_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstarted_flag_=false
    [[ $_obj_opts_apps_opstart_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstarted_flag_
    }
Opts.Apps.OpStart.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_opstart_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstarted_enable_=false
    [[ $_obj_opts_apps_opstart_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstarted_enable_
    }
Opts.Apps.OpStart.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstarted_changes_flag_=false
    }
Opts.Apps.OpStart.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_opstart_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstarted_enable_=true
    [[ $_obj_opts_apps_opstart_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstarted_enable_
    }
Opts.Apps.OpStart.IsStarted.Init()
    {
    _obj_opts_apps_opstart_isstarted_text_=''
    _obj_opts_apps_opstart_isstarted_flag_=false
    _obj_opts_apps_opstart_isstarted_changes_flag_=true
    _obj_opts_apps_opstart_isstarted_enable_=false
    }
Opts.Apps.OpStart.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstarted_changes_flag_=true
    }
Opts.Apps.OpStart.IsStarted.Set()
    {
    [[ $_obj_opts_apps_opstart_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstarted_flag_=true
    [[ $_obj_opts_apps_opstart_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstarted_flag_
    }
Opts.Apps.OpStart.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isstarted_text_"
    fi
    }
Opts.Apps.OpStart.IsStarted.Init

Opts.Apps.OpStart.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_opstart_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstarted_flag_=false
    [[ $_obj_opts_apps_opstart_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstarted_flag_
    }
Opts.Apps.OpStart.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_opstart_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstarted_enable_=false
    [[ $_obj_opts_apps_opstart_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstarted_enable_
    }
Opts.Apps.OpStart.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstarted_changes_flag_=false
    }
Opts.Apps.OpStart.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_opstart_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstarted_enable_=true
    [[ $_obj_opts_apps_opstart_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstarted_enable_
    }
Opts.Apps.OpStart.IsNtStarted.Init()
    {
    _obj_opts_apps_opstart_isntstarted_text_=''
    _obj_opts_apps_opstart_isntstarted_flag_=false
    _obj_opts_apps_opstart_isntstarted_changes_flag_=true
    _obj_opts_apps_opstart_isntstarted_enable_=false
    }
Opts.Apps.OpStart.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstarted_changes_flag_=true
    }
Opts.Apps.OpStart.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_opstart_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstarted_flag_=true
    [[ $_obj_opts_apps_opstart_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstarted_flag_
    }
Opts.Apps.OpStart.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isntstarted_text_"
    fi
    }
Opts.Apps.OpStart.IsNtStarted.Init

Opts.Apps.OpStop.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_opstop_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstarted_flag_=false
    [[ $_obj_opts_apps_opstop_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstarted_flag_
    }
Opts.Apps.OpStop.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_opstop_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstarted_enable_=false
    [[ $_obj_opts_apps_opstop_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstarted_enable_
    }
Opts.Apps.OpStop.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstarted_changes_flag_=false
    }
Opts.Apps.OpStop.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_opstop_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstarted_enable_=true
    [[ $_obj_opts_apps_opstop_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstarted_enable_
    }
Opts.Apps.OpStop.IsStarted.Init()
    {
    _obj_opts_apps_opstop_isstarted_text_=''
    _obj_opts_apps_opstop_isstarted_flag_=false
    _obj_opts_apps_opstop_isstarted_changes_flag_=true
    _obj_opts_apps_opstop_isstarted_enable_=false
    }
Opts.Apps.OpStop.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstarted_changes_flag_=true
    }
Opts.Apps.OpStop.IsStarted.Set()
    {
    [[ $_obj_opts_apps_opstop_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstarted_flag_=true
    [[ $_obj_opts_apps_opstop_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstarted_flag_
    }
Opts.Apps.OpStop.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isstarted_text_"
    fi
    }
Opts.Apps.OpStop.IsStarted.Init

Opts.Apps.OpStop.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_opstop_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstarted_flag_=false
    [[ $_obj_opts_apps_opstop_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstarted_flag_
    }
Opts.Apps.OpStop.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_opstop_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstarted_enable_=false
    [[ $_obj_opts_apps_opstop_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstarted_enable_
    }
Opts.Apps.OpStop.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstarted_changes_flag_=false
    }
Opts.Apps.OpStop.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_opstop_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstarted_enable_=true
    [[ $_obj_opts_apps_opstop_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstarted_enable_
    }
Opts.Apps.OpStop.IsNtStarted.Init()
    {
    _obj_opts_apps_opstop_isntstarted_text_=''
    _obj_opts_apps_opstop_isntstarted_flag_=false
    _obj_opts_apps_opstop_isntstarted_changes_flag_=true
    _obj_opts_apps_opstop_isntstarted_enable_=false
    }
Opts.Apps.OpStop.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstarted_changes_flag_=true
    }
Opts.Apps.OpStop.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_opstop_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstarted_flag_=true
    [[ $_obj_opts_apps_opstop_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstarted_flag_
    }
Opts.Apps.OpStop.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isntstarted_text_"
    fi
    }
Opts.Apps.OpStop.IsNtStarted.Init

Opts.Apps.OpUninstall.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarted_flag_=false
    [[ $_obj_opts_apps_opuninstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstarted_flag_
    }
Opts.Apps.OpUninstall.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarted_enable_=false
    [[ $_obj_opts_apps_opuninstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstarted_enable_
    }
Opts.Apps.OpUninstall.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarted_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarted_enable_=true
    [[ $_obj_opts_apps_opuninstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstarted_enable_
    }
Opts.Apps.OpUninstall.IsStarted.Init()
    {
    _obj_opts_apps_opuninstall_isstarted_text_=''
    _obj_opts_apps_opuninstall_isstarted_flag_=false
    _obj_opts_apps_opuninstall_isstarted_changes_flag_=true
    _obj_opts_apps_opuninstall_isstarted_enable_=false
    }
Opts.Apps.OpUninstall.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarted_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsStarted.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstarted_flag_=true
    [[ $_obj_opts_apps_opuninstall_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstarted_flag_
    }
Opts.Apps.OpUninstall.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isstarted_text_"
    fi
    }
Opts.Apps.OpUninstall.IsStarted.Init

Opts.Apps.OpUninstall.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarted_flag_=false
    [[ $_obj_opts_apps_opuninstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstarted_flag_
    }
Opts.Apps.OpUninstall.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarted_enable_=false
    [[ $_obj_opts_apps_opuninstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstarted_enable_
    }
Opts.Apps.OpUninstall.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarted_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarted_enable_=true
    [[ $_obj_opts_apps_opuninstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstarted_enable_
    }
Opts.Apps.OpUninstall.IsNtStarted.Init()
    {
    _obj_opts_apps_opuninstall_isntstarted_text_=''
    _obj_opts_apps_opuninstall_isntstarted_flag_=false
    _obj_opts_apps_opuninstall_isntstarted_changes_flag_=true
    _obj_opts_apps_opuninstall_isntstarted_enable_=false
    }
Opts.Apps.OpUninstall.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarted_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstarted_flag_=true
    [[ $_obj_opts_apps_opuninstall_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstarted_flag_
    }
Opts.Apps.OpUninstall.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isntstarted_text_"
    fi
    }
Opts.Apps.OpUninstall.IsNtStarted.Init

Opts.Apps.OpUpgrade.IsStarted.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarted_flag_=false
    [[ $_obj_opts_apps_opupgrade_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstarted_flag_
    }
Opts.Apps.OpUpgrade.IsStarted.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarted_enable_=false
    [[ $_obj_opts_apps_opupgrade_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstarted_enable_
    }
Opts.Apps.OpUpgrade.IsStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarted_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsStarted.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarted_enable_=true
    [[ $_obj_opts_apps_opupgrade_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstarted_enable_
    }
Opts.Apps.OpUpgrade.IsStarted.Init()
    {
    _obj_opts_apps_opupgrade_isstarted_text_=''
    _obj_opts_apps_opupgrade_isstarted_flag_=false
    _obj_opts_apps_opupgrade_isstarted_changes_flag_=true
    _obj_opts_apps_opupgrade_isstarted_enable_=false
    }
Opts.Apps.OpUpgrade.IsStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStarted.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStarted.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarted_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsStarted.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstarted_flag_=true
    [[ $_obj_opts_apps_opupgrade_isstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstarted_flag_
    }
Opts.Apps.OpUpgrade.IsStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isstarted_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsStarted.Init

Opts.Apps.OpUpgrade.IsNtStarted.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarted_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarted_flag_=false
    [[ $_obj_opts_apps_opupgrade_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstarted_flag_
    }
Opts.Apps.OpUpgrade.IsNtStarted.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarted_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarted_enable_=false
    [[ $_obj_opts_apps_opupgrade_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstarted_enable_
    }
Opts.Apps.OpUpgrade.IsNtStarted.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarted_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarted_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsNtStarted.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarted_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarted_enable_=true
    [[ $_obj_opts_apps_opupgrade_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstarted_enable_
    }
Opts.Apps.OpUpgrade.IsNtStarted.Init()
    {
    _obj_opts_apps_opupgrade_isntstarted_text_=''
    _obj_opts_apps_opupgrade_isntstarted_flag_=false
    _obj_opts_apps_opupgrade_isntstarted_changes_flag_=true
    _obj_opts_apps_opupgrade_isntstarted_enable_=false
    }
Opts.Apps.OpUpgrade.IsNtStarted.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarted_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStarted.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarted_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStarted.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarted_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStarted.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarted_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStarted.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarted_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarted_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsNtStarted.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isntstarted_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstarted_flag_=true
    [[ $_obj_opts_apps_opupgrade_isntstarted_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstarted_flag_
    }
Opts.Apps.OpUpgrade.IsNtStarted.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isntstarted_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isntstarted_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsNtStarted.Init

Opts.Apps.OpBackup.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstopping_flag_=false
    [[ $_obj_opts_apps_opbackup_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstopping_flag_
    }
Opts.Apps.OpBackup.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstopping_enable_=false
    [[ $_obj_opts_apps_opbackup_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstopping_enable_
    }
Opts.Apps.OpBackup.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstopping_changes_flag_=false
    }
Opts.Apps.OpBackup.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstopping_enable_=true
    [[ $_obj_opts_apps_opbackup_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstopping_enable_
    }
Opts.Apps.OpBackup.IsStopping.Init()
    {
    _obj_opts_apps_opbackup_isstopping_text_=''
    _obj_opts_apps_opbackup_isstopping_flag_=false
    _obj_opts_apps_opbackup_isstopping_changes_flag_=true
    _obj_opts_apps_opbackup_isstopping_enable_=false
    }
Opts.Apps.OpBackup.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstopping_changes_flag_=true
    }
Opts.Apps.OpBackup.IsStopping.Set()
    {
    [[ $_obj_opts_apps_opbackup_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstopping_flag_=true
    [[ $_obj_opts_apps_opbackup_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstopping_flag_
    }
Opts.Apps.OpBackup.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isstopping_text_"
    fi
    }
Opts.Apps.OpBackup.IsStopping.Init

Opts.Apps.OpBackup.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopping_flag_=false
    [[ $_obj_opts_apps_opbackup_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstopping_flag_
    }
Opts.Apps.OpBackup.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopping_enable_=false
    [[ $_obj_opts_apps_opbackup_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstopping_enable_
    }
Opts.Apps.OpBackup.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopping_changes_flag_=false
    }
Opts.Apps.OpBackup.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopping_enable_=true
    [[ $_obj_opts_apps_opbackup_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstopping_enable_
    }
Opts.Apps.OpBackup.IsNtStopping.Init()
    {
    _obj_opts_apps_opbackup_isntstopping_text_=''
    _obj_opts_apps_opbackup_isntstopping_flag_=false
    _obj_opts_apps_opbackup_isntstopping_changes_flag_=true
    _obj_opts_apps_opbackup_isntstopping_enable_=false
    }
Opts.Apps.OpBackup.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopping_changes_flag_=true
    }
Opts.Apps.OpBackup.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_opbackup_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopping_flag_=true
    [[ $_obj_opts_apps_opbackup_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstopping_flag_
    }
Opts.Apps.OpBackup.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isntstopping_text_"
    fi
    }
Opts.Apps.OpBackup.IsNtStopping.Init

Opts.Apps.OpDownload.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstopping_flag_=false
    [[ $_obj_opts_apps_opdownload_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstopping_flag_
    }
Opts.Apps.OpDownload.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstopping_enable_=false
    [[ $_obj_opts_apps_opdownload_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstopping_enable_
    }
Opts.Apps.OpDownload.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstopping_changes_flag_=false
    }
Opts.Apps.OpDownload.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstopping_enable_=true
    [[ $_obj_opts_apps_opdownload_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstopping_enable_
    }
Opts.Apps.OpDownload.IsStopping.Init()
    {
    _obj_opts_apps_opdownload_isstopping_text_=''
    _obj_opts_apps_opdownload_isstopping_flag_=false
    _obj_opts_apps_opdownload_isstopping_changes_flag_=true
    _obj_opts_apps_opdownload_isstopping_enable_=false
    }
Opts.Apps.OpDownload.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstopping_changes_flag_=true
    }
Opts.Apps.OpDownload.IsStopping.Set()
    {
    [[ $_obj_opts_apps_opdownload_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstopping_flag_=true
    [[ $_obj_opts_apps_opdownload_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstopping_flag_
    }
Opts.Apps.OpDownload.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isstopping_text_"
    fi
    }
Opts.Apps.OpDownload.IsStopping.Init

Opts.Apps.OpDownload.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopping_flag_=false
    [[ $_obj_opts_apps_opdownload_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstopping_flag_
    }
Opts.Apps.OpDownload.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopping_enable_=false
    [[ $_obj_opts_apps_opdownload_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstopping_enable_
    }
Opts.Apps.OpDownload.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopping_changes_flag_=false
    }
Opts.Apps.OpDownload.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopping_enable_=true
    [[ $_obj_opts_apps_opdownload_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstopping_enable_
    }
Opts.Apps.OpDownload.IsNtStopping.Init()
    {
    _obj_opts_apps_opdownload_isntstopping_text_=''
    _obj_opts_apps_opdownload_isntstopping_flag_=false
    _obj_opts_apps_opdownload_isntstopping_changes_flag_=true
    _obj_opts_apps_opdownload_isntstopping_enable_=false
    }
Opts.Apps.OpDownload.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopping_changes_flag_=true
    }
Opts.Apps.OpDownload.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_opdownload_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopping_flag_=true
    [[ $_obj_opts_apps_opdownload_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstopping_flag_
    }
Opts.Apps.OpDownload.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isntstopping_text_"
    fi
    }
Opts.Apps.OpDownload.IsNtStopping.Init

Opts.Apps.OpInstall.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstopping_flag_=false
    [[ $_obj_opts_apps_opinstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstopping_flag_
    }
Opts.Apps.OpInstall.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstopping_enable_=false
    [[ $_obj_opts_apps_opinstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstopping_enable_
    }
Opts.Apps.OpInstall.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstopping_changes_flag_=false
    }
Opts.Apps.OpInstall.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstopping_enable_=true
    [[ $_obj_opts_apps_opinstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstopping_enable_
    }
Opts.Apps.OpInstall.IsStopping.Init()
    {
    _obj_opts_apps_opinstall_isstopping_text_=''
    _obj_opts_apps_opinstall_isstopping_flag_=false
    _obj_opts_apps_opinstall_isstopping_changes_flag_=true
    _obj_opts_apps_opinstall_isstopping_enable_=false
    }
Opts.Apps.OpInstall.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstopping_changes_flag_=true
    }
Opts.Apps.OpInstall.IsStopping.Set()
    {
    [[ $_obj_opts_apps_opinstall_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstopping_flag_=true
    [[ $_obj_opts_apps_opinstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstopping_flag_
    }
Opts.Apps.OpInstall.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isstopping_text_"
    fi
    }
Opts.Apps.OpInstall.IsStopping.Init

Opts.Apps.OpInstall.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopping_flag_=false
    [[ $_obj_opts_apps_opinstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstopping_flag_
    }
Opts.Apps.OpInstall.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopping_enable_=false
    [[ $_obj_opts_apps_opinstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstopping_enable_
    }
Opts.Apps.OpInstall.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopping_changes_flag_=false
    }
Opts.Apps.OpInstall.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopping_enable_=true
    [[ $_obj_opts_apps_opinstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstopping_enable_
    }
Opts.Apps.OpInstall.IsNtStopping.Init()
    {
    _obj_opts_apps_opinstall_isntstopping_text_=''
    _obj_opts_apps_opinstall_isntstopping_flag_=false
    _obj_opts_apps_opinstall_isntstopping_changes_flag_=true
    _obj_opts_apps_opinstall_isntstopping_enable_=false
    }
Opts.Apps.OpInstall.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopping_changes_flag_=true
    }
Opts.Apps.OpInstall.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_opinstall_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopping_flag_=true
    [[ $_obj_opts_apps_opinstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstopping_flag_
    }
Opts.Apps.OpInstall.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isntstopping_text_"
    fi
    }
Opts.Apps.OpInstall.IsNtStopping.Init

Opts.Apps.OpRebuild.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopping_flag_=false
    [[ $_obj_opts_apps_oprebuild_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstopping_flag_
    }
Opts.Apps.OpRebuild.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopping_enable_=false
    [[ $_obj_opts_apps_oprebuild_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstopping_enable_
    }
Opts.Apps.OpRebuild.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopping_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopping_enable_=true
    [[ $_obj_opts_apps_oprebuild_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstopping_enable_
    }
Opts.Apps.OpRebuild.IsStopping.Init()
    {
    _obj_opts_apps_oprebuild_isstopping_text_=''
    _obj_opts_apps_oprebuild_isstopping_flag_=false
    _obj_opts_apps_oprebuild_isstopping_changes_flag_=true
    _obj_opts_apps_oprebuild_isstopping_enable_=false
    }
Opts.Apps.OpRebuild.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopping_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsStopping.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopping_flag_=true
    [[ $_obj_opts_apps_oprebuild_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstopping_flag_
    }
Opts.Apps.OpRebuild.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isstopping_text_"
    fi
    }
Opts.Apps.OpRebuild.IsStopping.Init

Opts.Apps.OpRebuild.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopping_flag_=false
    [[ $_obj_opts_apps_oprebuild_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstopping_flag_
    }
Opts.Apps.OpRebuild.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopping_enable_=false
    [[ $_obj_opts_apps_oprebuild_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstopping_enable_
    }
Opts.Apps.OpRebuild.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopping_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopping_enable_=true
    [[ $_obj_opts_apps_oprebuild_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstopping_enable_
    }
Opts.Apps.OpRebuild.IsNtStopping.Init()
    {
    _obj_opts_apps_oprebuild_isntstopping_text_=''
    _obj_opts_apps_oprebuild_isntstopping_flag_=false
    _obj_opts_apps_oprebuild_isntstopping_changes_flag_=true
    _obj_opts_apps_oprebuild_isntstopping_enable_=false
    }
Opts.Apps.OpRebuild.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopping_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopping_flag_=true
    [[ $_obj_opts_apps_oprebuild_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstopping_flag_
    }
Opts.Apps.OpRebuild.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isntstopping_text_"
    fi
    }
Opts.Apps.OpRebuild.IsNtStopping.Init

Opts.Apps.OpReinstall.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopping_flag_=false
    [[ $_obj_opts_apps_opreinstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstopping_flag_
    }
Opts.Apps.OpReinstall.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopping_enable_=false
    [[ $_obj_opts_apps_opreinstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstopping_enable_
    }
Opts.Apps.OpReinstall.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopping_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopping_enable_=true
    [[ $_obj_opts_apps_opreinstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstopping_enable_
    }
Opts.Apps.OpReinstall.IsStopping.Init()
    {
    _obj_opts_apps_opreinstall_isstopping_text_=''
    _obj_opts_apps_opreinstall_isstopping_flag_=false
    _obj_opts_apps_opreinstall_isstopping_changes_flag_=true
    _obj_opts_apps_opreinstall_isstopping_enable_=false
    }
Opts.Apps.OpReinstall.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopping_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsStopping.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopping_flag_=true
    [[ $_obj_opts_apps_opreinstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstopping_flag_
    }
Opts.Apps.OpReinstall.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isstopping_text_"
    fi
    }
Opts.Apps.OpReinstall.IsStopping.Init

Opts.Apps.OpReinstall.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopping_flag_=false
    [[ $_obj_opts_apps_opreinstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstopping_flag_
    }
Opts.Apps.OpReinstall.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopping_enable_=false
    [[ $_obj_opts_apps_opreinstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstopping_enable_
    }
Opts.Apps.OpReinstall.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopping_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopping_enable_=true
    [[ $_obj_opts_apps_opreinstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstopping_enable_
    }
Opts.Apps.OpReinstall.IsNtStopping.Init()
    {
    _obj_opts_apps_opreinstall_isntstopping_text_=''
    _obj_opts_apps_opreinstall_isntstopping_flag_=false
    _obj_opts_apps_opreinstall_isntstopping_changes_flag_=true
    _obj_opts_apps_opreinstall_isntstopping_enable_=false
    }
Opts.Apps.OpReinstall.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopping_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopping_flag_=true
    [[ $_obj_opts_apps_opreinstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstopping_flag_
    }
Opts.Apps.OpReinstall.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isntstopping_text_"
    fi
    }
Opts.Apps.OpReinstall.IsNtStopping.Init

Opts.Apps.OpRestart.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstopping_flag_=false
    [[ $_obj_opts_apps_oprestart_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstopping_flag_
    }
Opts.Apps.OpRestart.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstopping_enable_=false
    [[ $_obj_opts_apps_oprestart_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstopping_enable_
    }
Opts.Apps.OpRestart.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstopping_changes_flag_=false
    }
Opts.Apps.OpRestart.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstopping_enable_=true
    [[ $_obj_opts_apps_oprestart_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstopping_enable_
    }
Opts.Apps.OpRestart.IsStopping.Init()
    {
    _obj_opts_apps_oprestart_isstopping_text_=''
    _obj_opts_apps_oprestart_isstopping_flag_=false
    _obj_opts_apps_oprestart_isstopping_changes_flag_=true
    _obj_opts_apps_oprestart_isstopping_enable_=false
    }
Opts.Apps.OpRestart.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstopping_changes_flag_=true
    }
Opts.Apps.OpRestart.IsStopping.Set()
    {
    [[ $_obj_opts_apps_oprestart_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstopping_flag_=true
    [[ $_obj_opts_apps_oprestart_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstopping_flag_
    }
Opts.Apps.OpRestart.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isstopping_text_"
    fi
    }
Opts.Apps.OpRestart.IsStopping.Init

Opts.Apps.OpRestart.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopping_flag_=false
    [[ $_obj_opts_apps_oprestart_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstopping_flag_
    }
Opts.Apps.OpRestart.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopping_enable_=false
    [[ $_obj_opts_apps_oprestart_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstopping_enable_
    }
Opts.Apps.OpRestart.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopping_changes_flag_=false
    }
Opts.Apps.OpRestart.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopping_enable_=true
    [[ $_obj_opts_apps_oprestart_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstopping_enable_
    }
Opts.Apps.OpRestart.IsNtStopping.Init()
    {
    _obj_opts_apps_oprestart_isntstopping_text_=''
    _obj_opts_apps_oprestart_isntstopping_flag_=false
    _obj_opts_apps_oprestart_isntstopping_changes_flag_=true
    _obj_opts_apps_oprestart_isntstopping_enable_=false
    }
Opts.Apps.OpRestart.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopping_changes_flag_=true
    }
Opts.Apps.OpRestart.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_oprestart_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopping_flag_=true
    [[ $_obj_opts_apps_oprestart_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstopping_flag_
    }
Opts.Apps.OpRestart.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isntstopping_text_"
    fi
    }
Opts.Apps.OpRestart.IsNtStopping.Init

Opts.Apps.OpRestore.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstopping_flag_=false
    [[ $_obj_opts_apps_oprestore_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstopping_flag_
    }
Opts.Apps.OpRestore.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstopping_enable_=false
    [[ $_obj_opts_apps_oprestore_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstopping_enable_
    }
Opts.Apps.OpRestore.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstopping_changes_flag_=false
    }
Opts.Apps.OpRestore.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstopping_enable_=true
    [[ $_obj_opts_apps_oprestore_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstopping_enable_
    }
Opts.Apps.OpRestore.IsStopping.Init()
    {
    _obj_opts_apps_oprestore_isstopping_text_=''
    _obj_opts_apps_oprestore_isstopping_flag_=false
    _obj_opts_apps_oprestore_isstopping_changes_flag_=true
    _obj_opts_apps_oprestore_isstopping_enable_=false
    }
Opts.Apps.OpRestore.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstopping_changes_flag_=true
    }
Opts.Apps.OpRestore.IsStopping.Set()
    {
    [[ $_obj_opts_apps_oprestore_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstopping_flag_=true
    [[ $_obj_opts_apps_oprestore_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstopping_flag_
    }
Opts.Apps.OpRestore.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isstopping_text_"
    fi
    }
Opts.Apps.OpRestore.IsStopping.Init

Opts.Apps.OpRestore.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopping_flag_=false
    [[ $_obj_opts_apps_oprestore_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstopping_flag_
    }
Opts.Apps.OpRestore.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopping_enable_=false
    [[ $_obj_opts_apps_oprestore_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstopping_enable_
    }
Opts.Apps.OpRestore.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopping_changes_flag_=false
    }
Opts.Apps.OpRestore.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopping_enable_=true
    [[ $_obj_opts_apps_oprestore_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstopping_enable_
    }
Opts.Apps.OpRestore.IsNtStopping.Init()
    {
    _obj_opts_apps_oprestore_isntstopping_text_=''
    _obj_opts_apps_oprestore_isntstopping_flag_=false
    _obj_opts_apps_oprestore_isntstopping_changes_flag_=true
    _obj_opts_apps_oprestore_isntstopping_enable_=false
    }
Opts.Apps.OpRestore.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopping_changes_flag_=true
    }
Opts.Apps.OpRestore.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_oprestore_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopping_flag_=true
    [[ $_obj_opts_apps_oprestore_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstopping_flag_
    }
Opts.Apps.OpRestore.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isntstopping_text_"
    fi
    }
Opts.Apps.OpRestore.IsNtStopping.Init

Opts.Apps.OpStart.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_opstart_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstopping_flag_=false
    [[ $_obj_opts_apps_opstart_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstopping_flag_
    }
Opts.Apps.OpStart.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_opstart_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstopping_enable_=false
    [[ $_obj_opts_apps_opstart_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstopping_enable_
    }
Opts.Apps.OpStart.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstopping_changes_flag_=false
    }
Opts.Apps.OpStart.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_opstart_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstopping_enable_=true
    [[ $_obj_opts_apps_opstart_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstopping_enable_
    }
Opts.Apps.OpStart.IsStopping.Init()
    {
    _obj_opts_apps_opstart_isstopping_text_=''
    _obj_opts_apps_opstart_isstopping_flag_=false
    _obj_opts_apps_opstart_isstopping_changes_flag_=true
    _obj_opts_apps_opstart_isstopping_enable_=false
    }
Opts.Apps.OpStart.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstopping_changes_flag_=true
    }
Opts.Apps.OpStart.IsStopping.Set()
    {
    [[ $_obj_opts_apps_opstart_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstopping_flag_=true
    [[ $_obj_opts_apps_opstart_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstopping_flag_
    }
Opts.Apps.OpStart.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isstopping_text_"
    fi
    }
Opts.Apps.OpStart.IsStopping.Init

Opts.Apps.OpStart.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_opstart_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstopping_flag_=false
    [[ $_obj_opts_apps_opstart_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstopping_flag_
    }
Opts.Apps.OpStart.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_opstart_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstopping_enable_=false
    [[ $_obj_opts_apps_opstart_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstopping_enable_
    }
Opts.Apps.OpStart.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstopping_changes_flag_=false
    }
Opts.Apps.OpStart.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_opstart_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstopping_enable_=true
    [[ $_obj_opts_apps_opstart_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstopping_enable_
    }
Opts.Apps.OpStart.IsNtStopping.Init()
    {
    _obj_opts_apps_opstart_isntstopping_text_=''
    _obj_opts_apps_opstart_isntstopping_flag_=false
    _obj_opts_apps_opstart_isntstopping_changes_flag_=true
    _obj_opts_apps_opstart_isntstopping_enable_=false
    }
Opts.Apps.OpStart.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstopping_changes_flag_=true
    }
Opts.Apps.OpStart.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_opstart_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstopping_flag_=true
    [[ $_obj_opts_apps_opstart_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstopping_flag_
    }
Opts.Apps.OpStart.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isntstopping_text_"
    fi
    }
Opts.Apps.OpStart.IsNtStopping.Init

Opts.Apps.OpStop.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_opstop_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstopping_flag_=false
    [[ $_obj_opts_apps_opstop_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstopping_flag_
    }
Opts.Apps.OpStop.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_opstop_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstopping_enable_=false
    [[ $_obj_opts_apps_opstop_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstopping_enable_
    }
Opts.Apps.OpStop.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstopping_changes_flag_=false
    }
Opts.Apps.OpStop.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_opstop_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstopping_enable_=true
    [[ $_obj_opts_apps_opstop_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstopping_enable_
    }
Opts.Apps.OpStop.IsStopping.Init()
    {
    _obj_opts_apps_opstop_isstopping_text_=''
    _obj_opts_apps_opstop_isstopping_flag_=false
    _obj_opts_apps_opstop_isstopping_changes_flag_=true
    _obj_opts_apps_opstop_isstopping_enable_=false
    }
Opts.Apps.OpStop.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstopping_changes_flag_=true
    }
Opts.Apps.OpStop.IsStopping.Set()
    {
    [[ $_obj_opts_apps_opstop_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstopping_flag_=true
    [[ $_obj_opts_apps_opstop_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstopping_flag_
    }
Opts.Apps.OpStop.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isstopping_text_"
    fi
    }
Opts.Apps.OpStop.IsStopping.Init

Opts.Apps.OpStop.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_opstop_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstopping_flag_=false
    [[ $_obj_opts_apps_opstop_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstopping_flag_
    }
Opts.Apps.OpStop.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_opstop_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstopping_enable_=false
    [[ $_obj_opts_apps_opstop_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstopping_enable_
    }
Opts.Apps.OpStop.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstopping_changes_flag_=false
    }
Opts.Apps.OpStop.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_opstop_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstopping_enable_=true
    [[ $_obj_opts_apps_opstop_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstopping_enable_
    }
Opts.Apps.OpStop.IsNtStopping.Init()
    {
    _obj_opts_apps_opstop_isntstopping_text_=''
    _obj_opts_apps_opstop_isntstopping_flag_=false
    _obj_opts_apps_opstop_isntstopping_changes_flag_=true
    _obj_opts_apps_opstop_isntstopping_enable_=false
    }
Opts.Apps.OpStop.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstopping_changes_flag_=true
    }
Opts.Apps.OpStop.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_opstop_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstopping_flag_=true
    [[ $_obj_opts_apps_opstop_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstopping_flag_
    }
Opts.Apps.OpStop.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isntstopping_text_"
    fi
    }
Opts.Apps.OpStop.IsNtStopping.Init

Opts.Apps.OpUninstall.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopping_flag_=false
    [[ $_obj_opts_apps_opuninstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstopping_flag_
    }
Opts.Apps.OpUninstall.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopping_enable_=false
    [[ $_obj_opts_apps_opuninstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstopping_enable_
    }
Opts.Apps.OpUninstall.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopping_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopping_enable_=true
    [[ $_obj_opts_apps_opuninstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstopping_enable_
    }
Opts.Apps.OpUninstall.IsStopping.Init()
    {
    _obj_opts_apps_opuninstall_isstopping_text_=''
    _obj_opts_apps_opuninstall_isstopping_flag_=false
    _obj_opts_apps_opuninstall_isstopping_changes_flag_=true
    _obj_opts_apps_opuninstall_isstopping_enable_=false
    }
Opts.Apps.OpUninstall.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopping_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsStopping.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopping_flag_=true
    [[ $_obj_opts_apps_opuninstall_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstopping_flag_
    }
Opts.Apps.OpUninstall.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isstopping_text_"
    fi
    }
Opts.Apps.OpUninstall.IsStopping.Init

Opts.Apps.OpUninstall.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopping_flag_=false
    [[ $_obj_opts_apps_opuninstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstopping_flag_
    }
Opts.Apps.OpUninstall.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopping_enable_=false
    [[ $_obj_opts_apps_opuninstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstopping_enable_
    }
Opts.Apps.OpUninstall.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopping_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopping_enable_=true
    [[ $_obj_opts_apps_opuninstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstopping_enable_
    }
Opts.Apps.OpUninstall.IsNtStopping.Init()
    {
    _obj_opts_apps_opuninstall_isntstopping_text_=''
    _obj_opts_apps_opuninstall_isntstopping_flag_=false
    _obj_opts_apps_opuninstall_isntstopping_changes_flag_=true
    _obj_opts_apps_opuninstall_isntstopping_enable_=false
    }
Opts.Apps.OpUninstall.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopping_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopping_flag_=true
    [[ $_obj_opts_apps_opuninstall_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstopping_flag_
    }
Opts.Apps.OpUninstall.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isntstopping_text_"
    fi
    }
Opts.Apps.OpUninstall.IsNtStopping.Init

Opts.Apps.OpUpgrade.IsStopping.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopping_flag_=false
    [[ $_obj_opts_apps_opupgrade_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstopping_flag_
    }
Opts.Apps.OpUpgrade.IsStopping.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopping_enable_=false
    [[ $_obj_opts_apps_opupgrade_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstopping_enable_
    }
Opts.Apps.OpUpgrade.IsStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopping_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsStopping.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopping_enable_=true
    [[ $_obj_opts_apps_opupgrade_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstopping_enable_
    }
Opts.Apps.OpUpgrade.IsStopping.Init()
    {
    _obj_opts_apps_opupgrade_isstopping_text_=''
    _obj_opts_apps_opupgrade_isstopping_flag_=false
    _obj_opts_apps_opupgrade_isstopping_changes_flag_=true
    _obj_opts_apps_opupgrade_isstopping_enable_=false
    }
Opts.Apps.OpUpgrade.IsStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStopping.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStopping.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopping_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsStopping.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopping_flag_=true
    [[ $_obj_opts_apps_opupgrade_isstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstopping_flag_
    }
Opts.Apps.OpUpgrade.IsStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isstopping_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsStopping.Init

Opts.Apps.OpUpgrade.IsNtStopping.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopping_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopping_flag_=false
    [[ $_obj_opts_apps_opupgrade_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstopping_flag_
    }
Opts.Apps.OpUpgrade.IsNtStopping.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopping_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopping_enable_=false
    [[ $_obj_opts_apps_opupgrade_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstopping_enable_
    }
Opts.Apps.OpUpgrade.IsNtStopping.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopping_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopping_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsNtStopping.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopping_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopping_enable_=true
    [[ $_obj_opts_apps_opupgrade_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstopping_enable_
    }
Opts.Apps.OpUpgrade.IsNtStopping.Init()
    {
    _obj_opts_apps_opupgrade_isntstopping_text_=''
    _obj_opts_apps_opupgrade_isntstopping_flag_=false
    _obj_opts_apps_opupgrade_isntstopping_changes_flag_=true
    _obj_opts_apps_opupgrade_isntstopping_enable_=false
    }
Opts.Apps.OpUpgrade.IsNtStopping.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopping_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStopping.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopping_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStopping.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopping_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStopping.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopping_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStopping.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopping_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopping_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsNtStopping.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopping_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopping_flag_=true
    [[ $_obj_opts_apps_opupgrade_isntstopping_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstopping_flag_
    }
Opts.Apps.OpUpgrade.IsNtStopping.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isntstopping_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isntstopping_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsNtStopping.Init

Opts.Apps.OpBackup.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstopped_flag_=false
    [[ $_obj_opts_apps_opbackup_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstopped_flag_
    }
Opts.Apps.OpBackup.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstopped_enable_=false
    [[ $_obj_opts_apps_opbackup_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstopped_enable_
    }
Opts.Apps.OpBackup.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isstopped_changes_flag_=false
    }
Opts.Apps.OpBackup.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstopped_enable_=true
    [[ $_obj_opts_apps_opbackup_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstopped_enable_
    }
Opts.Apps.OpBackup.IsStopped.Init()
    {
    _obj_opts_apps_opbackup_isstopped_text_=''
    _obj_opts_apps_opbackup_isstopped_flag_=false
    _obj_opts_apps_opbackup_isstopped_changes_flag_=true
    _obj_opts_apps_opbackup_isstopped_enable_=false
    }
Opts.Apps.OpBackup.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstopped_changes_flag_=true
    }
Opts.Apps.OpBackup.IsStopped.Set()
    {
    [[ $_obj_opts_apps_opbackup_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isstopped_flag_=true
    [[ $_obj_opts_apps_opbackup_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isstopped_flag_
    }
Opts.Apps.OpBackup.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isstopped_text_"
    fi
    }
Opts.Apps.OpBackup.IsStopped.Init

Opts.Apps.OpBackup.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopped_flag_=false
    [[ $_obj_opts_apps_opbackup_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstopped_flag_
    }
Opts.Apps.OpBackup.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopped_enable_=false
    [[ $_obj_opts_apps_opbackup_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstopped_enable_
    }
Opts.Apps.OpBackup.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopped_changes_flag_=false
    }
Opts.Apps.OpBackup.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopped_enable_=true
    [[ $_obj_opts_apps_opbackup_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstopped_enable_
    }
Opts.Apps.OpBackup.IsNtStopped.Init()
    {
    _obj_opts_apps_opbackup_isntstopped_text_=''
    _obj_opts_apps_opbackup_isntstopped_flag_=false
    _obj_opts_apps_opbackup_isntstopped_changes_flag_=true
    _obj_opts_apps_opbackup_isntstopped_enable_=false
    }
Opts.Apps.OpBackup.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopped_changes_flag_=true
    }
Opts.Apps.OpBackup.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_opbackup_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntstopped_flag_=true
    [[ $_obj_opts_apps_opbackup_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntstopped_flag_
    }
Opts.Apps.OpBackup.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isntstopped_text_"
    fi
    }
Opts.Apps.OpBackup.IsNtStopped.Init

Opts.Apps.OpDownload.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstopped_flag_=false
    [[ $_obj_opts_apps_opdownload_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstopped_flag_
    }
Opts.Apps.OpDownload.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstopped_enable_=false
    [[ $_obj_opts_apps_opdownload_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstopped_enable_
    }
Opts.Apps.OpDownload.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isstopped_changes_flag_=false
    }
Opts.Apps.OpDownload.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstopped_enable_=true
    [[ $_obj_opts_apps_opdownload_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstopped_enable_
    }
Opts.Apps.OpDownload.IsStopped.Init()
    {
    _obj_opts_apps_opdownload_isstopped_text_=''
    _obj_opts_apps_opdownload_isstopped_flag_=false
    _obj_opts_apps_opdownload_isstopped_changes_flag_=true
    _obj_opts_apps_opdownload_isstopped_enable_=false
    }
Opts.Apps.OpDownload.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstopped_changes_flag_=true
    }
Opts.Apps.OpDownload.IsStopped.Set()
    {
    [[ $_obj_opts_apps_opdownload_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isstopped_flag_=true
    [[ $_obj_opts_apps_opdownload_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isstopped_flag_
    }
Opts.Apps.OpDownload.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isstopped_text_"
    fi
    }
Opts.Apps.OpDownload.IsStopped.Init

Opts.Apps.OpDownload.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopped_flag_=false
    [[ $_obj_opts_apps_opdownload_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstopped_flag_
    }
Opts.Apps.OpDownload.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopped_enable_=false
    [[ $_obj_opts_apps_opdownload_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstopped_enable_
    }
Opts.Apps.OpDownload.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopped_changes_flag_=false
    }
Opts.Apps.OpDownload.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopped_enable_=true
    [[ $_obj_opts_apps_opdownload_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstopped_enable_
    }
Opts.Apps.OpDownload.IsNtStopped.Init()
    {
    _obj_opts_apps_opdownload_isntstopped_text_=''
    _obj_opts_apps_opdownload_isntstopped_flag_=false
    _obj_opts_apps_opdownload_isntstopped_changes_flag_=true
    _obj_opts_apps_opdownload_isntstopped_enable_=false
    }
Opts.Apps.OpDownload.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopped_changes_flag_=true
    }
Opts.Apps.OpDownload.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_opdownload_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntstopped_flag_=true
    [[ $_obj_opts_apps_opdownload_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntstopped_flag_
    }
Opts.Apps.OpDownload.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isntstopped_text_"
    fi
    }
Opts.Apps.OpDownload.IsNtStopped.Init

Opts.Apps.OpInstall.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstopped_flag_=false
    [[ $_obj_opts_apps_opinstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstopped_flag_
    }
Opts.Apps.OpInstall.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstopped_enable_=false
    [[ $_obj_opts_apps_opinstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstopped_enable_
    }
Opts.Apps.OpInstall.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isstopped_changes_flag_=false
    }
Opts.Apps.OpInstall.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstopped_enable_=true
    [[ $_obj_opts_apps_opinstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstopped_enable_
    }
Opts.Apps.OpInstall.IsStopped.Init()
    {
    _obj_opts_apps_opinstall_isstopped_text_=''
    _obj_opts_apps_opinstall_isstopped_flag_=false
    _obj_opts_apps_opinstall_isstopped_changes_flag_=true
    _obj_opts_apps_opinstall_isstopped_enable_=false
    }
Opts.Apps.OpInstall.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstopped_changes_flag_=true
    }
Opts.Apps.OpInstall.IsStopped.Set()
    {
    [[ $_obj_opts_apps_opinstall_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isstopped_flag_=true
    [[ $_obj_opts_apps_opinstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isstopped_flag_
    }
Opts.Apps.OpInstall.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isstopped_text_"
    fi
    }
Opts.Apps.OpInstall.IsStopped.Init

Opts.Apps.OpInstall.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopped_flag_=false
    [[ $_obj_opts_apps_opinstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstopped_flag_
    }
Opts.Apps.OpInstall.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopped_enable_=false
    [[ $_obj_opts_apps_opinstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstopped_enable_
    }
Opts.Apps.OpInstall.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopped_changes_flag_=false
    }
Opts.Apps.OpInstall.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopped_enable_=true
    [[ $_obj_opts_apps_opinstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstopped_enable_
    }
Opts.Apps.OpInstall.IsNtStopped.Init()
    {
    _obj_opts_apps_opinstall_isntstopped_text_=''
    _obj_opts_apps_opinstall_isntstopped_flag_=false
    _obj_opts_apps_opinstall_isntstopped_changes_flag_=true
    _obj_opts_apps_opinstall_isntstopped_enable_=false
    }
Opts.Apps.OpInstall.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopped_changes_flag_=true
    }
Opts.Apps.OpInstall.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_opinstall_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntstopped_flag_=true
    [[ $_obj_opts_apps_opinstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntstopped_flag_
    }
Opts.Apps.OpInstall.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isntstopped_text_"
    fi
    }
Opts.Apps.OpInstall.IsNtStopped.Init

Opts.Apps.OpRebuild.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopped_flag_=false
    [[ $_obj_opts_apps_oprebuild_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstopped_flag_
    }
Opts.Apps.OpRebuild.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopped_enable_=false
    [[ $_obj_opts_apps_oprebuild_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstopped_enable_
    }
Opts.Apps.OpRebuild.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopped_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopped_enable_=true
    [[ $_obj_opts_apps_oprebuild_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstopped_enable_
    }
Opts.Apps.OpRebuild.IsStopped.Init()
    {
    _obj_opts_apps_oprebuild_isstopped_text_=''
    _obj_opts_apps_oprebuild_isstopped_flag_=false
    _obj_opts_apps_oprebuild_isstopped_changes_flag_=true
    _obj_opts_apps_oprebuild_isstopped_enable_=false
    }
Opts.Apps.OpRebuild.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopped_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsStopped.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isstopped_flag_=true
    [[ $_obj_opts_apps_oprebuild_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isstopped_flag_
    }
Opts.Apps.OpRebuild.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isstopped_text_"
    fi
    }
Opts.Apps.OpRebuild.IsStopped.Init

Opts.Apps.OpRebuild.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopped_flag_=false
    [[ $_obj_opts_apps_oprebuild_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstopped_flag_
    }
Opts.Apps.OpRebuild.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopped_enable_=false
    [[ $_obj_opts_apps_oprebuild_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstopped_enable_
    }
Opts.Apps.OpRebuild.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopped_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopped_enable_=true
    [[ $_obj_opts_apps_oprebuild_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstopped_enable_
    }
Opts.Apps.OpRebuild.IsNtStopped.Init()
    {
    _obj_opts_apps_oprebuild_isntstopped_text_=''
    _obj_opts_apps_oprebuild_isntstopped_flag_=false
    _obj_opts_apps_oprebuild_isntstopped_changes_flag_=true
    _obj_opts_apps_oprebuild_isntstopped_enable_=false
    }
Opts.Apps.OpRebuild.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopped_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntstopped_flag_=true
    [[ $_obj_opts_apps_oprebuild_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntstopped_flag_
    }
Opts.Apps.OpRebuild.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isntstopped_text_"
    fi
    }
Opts.Apps.OpRebuild.IsNtStopped.Init

Opts.Apps.OpReinstall.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopped_flag_=false
    [[ $_obj_opts_apps_opreinstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstopped_flag_
    }
Opts.Apps.OpReinstall.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopped_enable_=false
    [[ $_obj_opts_apps_opreinstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstopped_enable_
    }
Opts.Apps.OpReinstall.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopped_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopped_enable_=true
    [[ $_obj_opts_apps_opreinstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstopped_enable_
    }
Opts.Apps.OpReinstall.IsStopped.Init()
    {
    _obj_opts_apps_opreinstall_isstopped_text_=''
    _obj_opts_apps_opreinstall_isstopped_flag_=false
    _obj_opts_apps_opreinstall_isstopped_changes_flag_=true
    _obj_opts_apps_opreinstall_isstopped_enable_=false
    }
Opts.Apps.OpReinstall.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopped_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsStopped.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isstopped_flag_=true
    [[ $_obj_opts_apps_opreinstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isstopped_flag_
    }
Opts.Apps.OpReinstall.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isstopped_text_"
    fi
    }
Opts.Apps.OpReinstall.IsStopped.Init

Opts.Apps.OpReinstall.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopped_flag_=false
    [[ $_obj_opts_apps_opreinstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstopped_flag_
    }
Opts.Apps.OpReinstall.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopped_enable_=false
    [[ $_obj_opts_apps_opreinstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstopped_enable_
    }
Opts.Apps.OpReinstall.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopped_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopped_enable_=true
    [[ $_obj_opts_apps_opreinstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstopped_enable_
    }
Opts.Apps.OpReinstall.IsNtStopped.Init()
    {
    _obj_opts_apps_opreinstall_isntstopped_text_=''
    _obj_opts_apps_opreinstall_isntstopped_flag_=false
    _obj_opts_apps_opreinstall_isntstopped_changes_flag_=true
    _obj_opts_apps_opreinstall_isntstopped_enable_=false
    }
Opts.Apps.OpReinstall.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopped_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntstopped_flag_=true
    [[ $_obj_opts_apps_opreinstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntstopped_flag_
    }
Opts.Apps.OpReinstall.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isntstopped_text_"
    fi
    }
Opts.Apps.OpReinstall.IsNtStopped.Init

Opts.Apps.OpRestart.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstopped_flag_=false
    [[ $_obj_opts_apps_oprestart_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstopped_flag_
    }
Opts.Apps.OpRestart.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstopped_enable_=false
    [[ $_obj_opts_apps_oprestart_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstopped_enable_
    }
Opts.Apps.OpRestart.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isstopped_changes_flag_=false
    }
Opts.Apps.OpRestart.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstopped_enable_=true
    [[ $_obj_opts_apps_oprestart_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstopped_enable_
    }
Opts.Apps.OpRestart.IsStopped.Init()
    {
    _obj_opts_apps_oprestart_isstopped_text_=''
    _obj_opts_apps_oprestart_isstopped_flag_=false
    _obj_opts_apps_oprestart_isstopped_changes_flag_=true
    _obj_opts_apps_oprestart_isstopped_enable_=false
    }
Opts.Apps.OpRestart.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstopped_changes_flag_=true
    }
Opts.Apps.OpRestart.IsStopped.Set()
    {
    [[ $_obj_opts_apps_oprestart_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isstopped_flag_=true
    [[ $_obj_opts_apps_oprestart_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isstopped_flag_
    }
Opts.Apps.OpRestart.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isstopped_text_"
    fi
    }
Opts.Apps.OpRestart.IsStopped.Init

Opts.Apps.OpRestart.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopped_flag_=false
    [[ $_obj_opts_apps_oprestart_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstopped_flag_
    }
Opts.Apps.OpRestart.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopped_enable_=false
    [[ $_obj_opts_apps_oprestart_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstopped_enable_
    }
Opts.Apps.OpRestart.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopped_changes_flag_=false
    }
Opts.Apps.OpRestart.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopped_enable_=true
    [[ $_obj_opts_apps_oprestart_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstopped_enable_
    }
Opts.Apps.OpRestart.IsNtStopped.Init()
    {
    _obj_opts_apps_oprestart_isntstopped_text_=''
    _obj_opts_apps_oprestart_isntstopped_flag_=false
    _obj_opts_apps_oprestart_isntstopped_changes_flag_=true
    _obj_opts_apps_oprestart_isntstopped_enable_=false
    }
Opts.Apps.OpRestart.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopped_changes_flag_=true
    }
Opts.Apps.OpRestart.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_oprestart_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntstopped_flag_=true
    [[ $_obj_opts_apps_oprestart_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntstopped_flag_
    }
Opts.Apps.OpRestart.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isntstopped_text_"
    fi
    }
Opts.Apps.OpRestart.IsNtStopped.Init

Opts.Apps.OpRestore.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstopped_flag_=false
    [[ $_obj_opts_apps_oprestore_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstopped_flag_
    }
Opts.Apps.OpRestore.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstopped_enable_=false
    [[ $_obj_opts_apps_oprestore_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstopped_enable_
    }
Opts.Apps.OpRestore.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isstopped_changes_flag_=false
    }
Opts.Apps.OpRestore.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstopped_enable_=true
    [[ $_obj_opts_apps_oprestore_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstopped_enable_
    }
Opts.Apps.OpRestore.IsStopped.Init()
    {
    _obj_opts_apps_oprestore_isstopped_text_=''
    _obj_opts_apps_oprestore_isstopped_flag_=false
    _obj_opts_apps_oprestore_isstopped_changes_flag_=true
    _obj_opts_apps_oprestore_isstopped_enable_=false
    }
Opts.Apps.OpRestore.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstopped_changes_flag_=true
    }
Opts.Apps.OpRestore.IsStopped.Set()
    {
    [[ $_obj_opts_apps_oprestore_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isstopped_flag_=true
    [[ $_obj_opts_apps_oprestore_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isstopped_flag_
    }
Opts.Apps.OpRestore.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isstopped_text_"
    fi
    }
Opts.Apps.OpRestore.IsStopped.Init

Opts.Apps.OpRestore.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopped_flag_=false
    [[ $_obj_opts_apps_oprestore_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstopped_flag_
    }
Opts.Apps.OpRestore.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopped_enable_=false
    [[ $_obj_opts_apps_oprestore_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstopped_enable_
    }
Opts.Apps.OpRestore.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopped_changes_flag_=false
    }
Opts.Apps.OpRestore.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopped_enable_=true
    [[ $_obj_opts_apps_oprestore_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstopped_enable_
    }
Opts.Apps.OpRestore.IsNtStopped.Init()
    {
    _obj_opts_apps_oprestore_isntstopped_text_=''
    _obj_opts_apps_oprestore_isntstopped_flag_=false
    _obj_opts_apps_oprestore_isntstopped_changes_flag_=true
    _obj_opts_apps_oprestore_isntstopped_enable_=false
    }
Opts.Apps.OpRestore.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopped_changes_flag_=true
    }
Opts.Apps.OpRestore.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_oprestore_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntstopped_flag_=true
    [[ $_obj_opts_apps_oprestore_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntstopped_flag_
    }
Opts.Apps.OpRestore.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isntstopped_text_"
    fi
    }
Opts.Apps.OpRestore.IsNtStopped.Init

Opts.Apps.OpStart.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_opstart_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstopped_flag_=false
    [[ $_obj_opts_apps_opstart_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstopped_flag_
    }
Opts.Apps.OpStart.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_opstart_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstopped_enable_=false
    [[ $_obj_opts_apps_opstart_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstopped_enable_
    }
Opts.Apps.OpStart.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isstopped_changes_flag_=false
    }
Opts.Apps.OpStart.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_opstart_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstopped_enable_=true
    [[ $_obj_opts_apps_opstart_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstopped_enable_
    }
Opts.Apps.OpStart.IsStopped.Init()
    {
    _obj_opts_apps_opstart_isstopped_text_=''
    _obj_opts_apps_opstart_isstopped_flag_=false
    _obj_opts_apps_opstart_isstopped_changes_flag_=true
    _obj_opts_apps_opstart_isstopped_enable_=false
    }
Opts.Apps.OpStart.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstopped_changes_flag_=true
    }
Opts.Apps.OpStart.IsStopped.Set()
    {
    [[ $_obj_opts_apps_opstart_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isstopped_flag_=true
    [[ $_obj_opts_apps_opstart_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isstopped_flag_
    }
Opts.Apps.OpStart.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isstopped_text_"
    fi
    }
Opts.Apps.OpStart.IsStopped.Init

Opts.Apps.OpStart.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_opstart_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstopped_flag_=false
    [[ $_obj_opts_apps_opstart_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstopped_flag_
    }
Opts.Apps.OpStart.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_opstart_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstopped_enable_=false
    [[ $_obj_opts_apps_opstart_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstopped_enable_
    }
Opts.Apps.OpStart.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntstopped_changes_flag_=false
    }
Opts.Apps.OpStart.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_opstart_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstopped_enable_=true
    [[ $_obj_opts_apps_opstart_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstopped_enable_
    }
Opts.Apps.OpStart.IsNtStopped.Init()
    {
    _obj_opts_apps_opstart_isntstopped_text_=''
    _obj_opts_apps_opstart_isntstopped_flag_=false
    _obj_opts_apps_opstart_isntstopped_changes_flag_=true
    _obj_opts_apps_opstart_isntstopped_enable_=false
    }
Opts.Apps.OpStart.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstopped_changes_flag_=true
    }
Opts.Apps.OpStart.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_opstart_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntstopped_flag_=true
    [[ $_obj_opts_apps_opstart_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntstopped_flag_
    }
Opts.Apps.OpStart.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isntstopped_text_"
    fi
    }
Opts.Apps.OpStart.IsNtStopped.Init

Opts.Apps.OpStop.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_opstop_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstopped_flag_=false
    [[ $_obj_opts_apps_opstop_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstopped_flag_
    }
Opts.Apps.OpStop.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_opstop_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstopped_enable_=false
    [[ $_obj_opts_apps_opstop_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstopped_enable_
    }
Opts.Apps.OpStop.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isstopped_changes_flag_=false
    }
Opts.Apps.OpStop.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_opstop_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstopped_enable_=true
    [[ $_obj_opts_apps_opstop_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstopped_enable_
    }
Opts.Apps.OpStop.IsStopped.Init()
    {
    _obj_opts_apps_opstop_isstopped_text_=''
    _obj_opts_apps_opstop_isstopped_flag_=false
    _obj_opts_apps_opstop_isstopped_changes_flag_=true
    _obj_opts_apps_opstop_isstopped_enable_=false
    }
Opts.Apps.OpStop.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstopped_changes_flag_=true
    }
Opts.Apps.OpStop.IsStopped.Set()
    {
    [[ $_obj_opts_apps_opstop_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isstopped_flag_=true
    [[ $_obj_opts_apps_opstop_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isstopped_flag_
    }
Opts.Apps.OpStop.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isstopped_text_"
    fi
    }
Opts.Apps.OpStop.IsStopped.Init

Opts.Apps.OpStop.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_opstop_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstopped_flag_=false
    [[ $_obj_opts_apps_opstop_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstopped_flag_
    }
Opts.Apps.OpStop.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_opstop_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstopped_enable_=false
    [[ $_obj_opts_apps_opstop_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstopped_enable_
    }
Opts.Apps.OpStop.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntstopped_changes_flag_=false
    }
Opts.Apps.OpStop.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_opstop_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstopped_enable_=true
    [[ $_obj_opts_apps_opstop_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstopped_enable_
    }
Opts.Apps.OpStop.IsNtStopped.Init()
    {
    _obj_opts_apps_opstop_isntstopped_text_=''
    _obj_opts_apps_opstop_isntstopped_flag_=false
    _obj_opts_apps_opstop_isntstopped_changes_flag_=true
    _obj_opts_apps_opstop_isntstopped_enable_=false
    }
Opts.Apps.OpStop.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstopped_changes_flag_=true
    }
Opts.Apps.OpStop.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_opstop_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntstopped_flag_=true
    [[ $_obj_opts_apps_opstop_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntstopped_flag_
    }
Opts.Apps.OpStop.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isntstopped_text_"
    fi
    }
Opts.Apps.OpStop.IsNtStopped.Init

Opts.Apps.OpUninstall.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopped_flag_=false
    [[ $_obj_opts_apps_opuninstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstopped_flag_
    }
Opts.Apps.OpUninstall.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopped_enable_=false
    [[ $_obj_opts_apps_opuninstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstopped_enable_
    }
Opts.Apps.OpUninstall.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopped_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopped_enable_=true
    [[ $_obj_opts_apps_opuninstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstopped_enable_
    }
Opts.Apps.OpUninstall.IsStopped.Init()
    {
    _obj_opts_apps_opuninstall_isstopped_text_=''
    _obj_opts_apps_opuninstall_isstopped_flag_=false
    _obj_opts_apps_opuninstall_isstopped_changes_flag_=true
    _obj_opts_apps_opuninstall_isstopped_enable_=false
    }
Opts.Apps.OpUninstall.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopped_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsStopped.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isstopped_flag_=true
    [[ $_obj_opts_apps_opuninstall_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isstopped_flag_
    }
Opts.Apps.OpUninstall.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isstopped_text_"
    fi
    }
Opts.Apps.OpUninstall.IsStopped.Init

Opts.Apps.OpUninstall.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopped_flag_=false
    [[ $_obj_opts_apps_opuninstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstopped_flag_
    }
Opts.Apps.OpUninstall.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopped_enable_=false
    [[ $_obj_opts_apps_opuninstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstopped_enable_
    }
Opts.Apps.OpUninstall.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopped_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopped_enable_=true
    [[ $_obj_opts_apps_opuninstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstopped_enable_
    }
Opts.Apps.OpUninstall.IsNtStopped.Init()
    {
    _obj_opts_apps_opuninstall_isntstopped_text_=''
    _obj_opts_apps_opuninstall_isntstopped_flag_=false
    _obj_opts_apps_opuninstall_isntstopped_changes_flag_=true
    _obj_opts_apps_opuninstall_isntstopped_enable_=false
    }
Opts.Apps.OpUninstall.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopped_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntstopped_flag_=true
    [[ $_obj_opts_apps_opuninstall_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntstopped_flag_
    }
Opts.Apps.OpUninstall.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isntstopped_text_"
    fi
    }
Opts.Apps.OpUninstall.IsNtStopped.Init

Opts.Apps.OpUpgrade.IsStopped.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopped_flag_=false
    [[ $_obj_opts_apps_opupgrade_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstopped_flag_
    }
Opts.Apps.OpUpgrade.IsStopped.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopped_enable_=false
    [[ $_obj_opts_apps_opupgrade_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstopped_enable_
    }
Opts.Apps.OpUpgrade.IsStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopped_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsStopped.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopped_enable_=true
    [[ $_obj_opts_apps_opupgrade_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstopped_enable_
    }
Opts.Apps.OpUpgrade.IsStopped.Init()
    {
    _obj_opts_apps_opupgrade_isstopped_text_=''
    _obj_opts_apps_opupgrade_isstopped_flag_=false
    _obj_opts_apps_opupgrade_isstopped_changes_flag_=true
    _obj_opts_apps_opupgrade_isstopped_enable_=false
    }
Opts.Apps.OpUpgrade.IsStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStopped.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStopped.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopped_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsStopped.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isstopped_flag_=true
    [[ $_obj_opts_apps_opupgrade_isstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isstopped_flag_
    }
Opts.Apps.OpUpgrade.IsStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isstopped_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsStopped.Init

Opts.Apps.OpUpgrade.IsNtStopped.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopped_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopped_flag_=false
    [[ $_obj_opts_apps_opupgrade_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstopped_flag_
    }
Opts.Apps.OpUpgrade.IsNtStopped.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopped_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopped_enable_=false
    [[ $_obj_opts_apps_opupgrade_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstopped_enable_
    }
Opts.Apps.OpUpgrade.IsNtStopped.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopped_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopped_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsNtStopped.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopped_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopped_enable_=true
    [[ $_obj_opts_apps_opupgrade_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstopped_enable_
    }
Opts.Apps.OpUpgrade.IsNtStopped.Init()
    {
    _obj_opts_apps_opupgrade_isntstopped_text_=''
    _obj_opts_apps_opupgrade_isntstopped_flag_=false
    _obj_opts_apps_opupgrade_isntstopped_changes_flag_=true
    _obj_opts_apps_opupgrade_isntstopped_enable_=false
    }
Opts.Apps.OpUpgrade.IsNtStopped.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopped_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStopped.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopped_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStopped.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopped_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStopped.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopped_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtStopped.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopped_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopped_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsNtStopped.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isntstopped_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntstopped_flag_=true
    [[ $_obj_opts_apps_opupgrade_isntstopped_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntstopped_flag_
    }
Opts.Apps.OpUpgrade.IsNtStopped.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isntstopped_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isntstopped_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsNtStopped.Init

Opts.Apps.OpBackup.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isrestarting_flag_=false
    [[ $_obj_opts_apps_opbackup_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isrestarting_flag_
    }
Opts.Apps.OpBackup.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isrestarting_enable_=false
    [[ $_obj_opts_apps_opbackup_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isrestarting_enable_
    }
Opts.Apps.OpBackup.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isrestarting_changes_flag_=false
    }
Opts.Apps.OpBackup.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isrestarting_enable_=true
    [[ $_obj_opts_apps_opbackup_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isrestarting_enable_
    }
Opts.Apps.OpBackup.IsRestarting.Init()
    {
    _obj_opts_apps_opbackup_isrestarting_text_=''
    _obj_opts_apps_opbackup_isrestarting_flag_=false
    _obj_opts_apps_opbackup_isrestarting_changes_flag_=true
    _obj_opts_apps_opbackup_isrestarting_enable_=false
    }
Opts.Apps.OpBackup.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isrestarting_changes_flag_=true
    }
Opts.Apps.OpBackup.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_opbackup_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isrestarting_flag_=true
    [[ $_obj_opts_apps_opbackup_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isrestarting_flag_
    }
Opts.Apps.OpBackup.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isrestarting_text_"
    fi
    }
Opts.Apps.OpBackup.IsRestarting.Init

Opts.Apps.OpBackup.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_opbackup_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntrestarting_flag_=false
    [[ $_obj_opts_apps_opbackup_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntrestarting_flag_
    }
Opts.Apps.OpBackup.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_opbackup_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntrestarting_enable_=false
    [[ $_obj_opts_apps_opbackup_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntrestarting_enable_
    }
Opts.Apps.OpBackup.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opbackup_isntrestarting_changes_flag_=false
    }
Opts.Apps.OpBackup.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_opbackup_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntrestarting_enable_=true
    [[ $_obj_opts_apps_opbackup_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntrestarting_enable_
    }
Opts.Apps.OpBackup.IsNtRestarting.Init()
    {
    _obj_opts_apps_opbackup_isntrestarting_text_=''
    _obj_opts_apps_opbackup_isntrestarting_flag_=false
    _obj_opts_apps_opbackup_isntrestarting_changes_flag_=true
    _obj_opts_apps_opbackup_isntrestarting_enable_=false
    }
Opts.Apps.OpBackup.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opbackup_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opbackup_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opbackup_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpBackup.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opbackup_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpBackup.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opbackup_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntrestarting_changes_flag_=true
    }
Opts.Apps.OpBackup.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_opbackup_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opbackup_isntrestarting_flag_=true
    [[ $_obj_opts_apps_opbackup_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opbackup_isntrestarting_flag_
    }
Opts.Apps.OpBackup.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opbackup_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opbackup_isntrestarting_text_"
    fi
    }
Opts.Apps.OpBackup.IsNtRestarting.Init

Opts.Apps.OpDownload.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isrestarting_flag_=false
    [[ $_obj_opts_apps_opdownload_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isrestarting_flag_
    }
Opts.Apps.OpDownload.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isrestarting_enable_=false
    [[ $_obj_opts_apps_opdownload_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isrestarting_enable_
    }
Opts.Apps.OpDownload.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isrestarting_changes_flag_=false
    }
Opts.Apps.OpDownload.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isrestarting_enable_=true
    [[ $_obj_opts_apps_opdownload_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isrestarting_enable_
    }
Opts.Apps.OpDownload.IsRestarting.Init()
    {
    _obj_opts_apps_opdownload_isrestarting_text_=''
    _obj_opts_apps_opdownload_isrestarting_flag_=false
    _obj_opts_apps_opdownload_isrestarting_changes_flag_=true
    _obj_opts_apps_opdownload_isrestarting_enable_=false
    }
Opts.Apps.OpDownload.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isrestarting_changes_flag_=true
    }
Opts.Apps.OpDownload.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_opdownload_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isrestarting_flag_=true
    [[ $_obj_opts_apps_opdownload_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isrestarting_flag_
    }
Opts.Apps.OpDownload.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isrestarting_text_"
    fi
    }
Opts.Apps.OpDownload.IsRestarting.Init

Opts.Apps.OpDownload.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_opdownload_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntrestarting_flag_=false
    [[ $_obj_opts_apps_opdownload_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntrestarting_flag_
    }
Opts.Apps.OpDownload.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_opdownload_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntrestarting_enable_=false
    [[ $_obj_opts_apps_opdownload_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntrestarting_enable_
    }
Opts.Apps.OpDownload.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opdownload_isntrestarting_changes_flag_=false
    }
Opts.Apps.OpDownload.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_opdownload_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntrestarting_enable_=true
    [[ $_obj_opts_apps_opdownload_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntrestarting_enable_
    }
Opts.Apps.OpDownload.IsNtRestarting.Init()
    {
    _obj_opts_apps_opdownload_isntrestarting_text_=''
    _obj_opts_apps_opdownload_isntrestarting_flag_=false
    _obj_opts_apps_opdownload_isntrestarting_changes_flag_=true
    _obj_opts_apps_opdownload_isntrestarting_enable_=false
    }
Opts.Apps.OpDownload.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opdownload_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opdownload_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opdownload_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpDownload.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opdownload_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpDownload.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opdownload_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntrestarting_changes_flag_=true
    }
Opts.Apps.OpDownload.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_opdownload_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opdownload_isntrestarting_flag_=true
    [[ $_obj_opts_apps_opdownload_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opdownload_isntrestarting_flag_
    }
Opts.Apps.OpDownload.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opdownload_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opdownload_isntrestarting_text_"
    fi
    }
Opts.Apps.OpDownload.IsNtRestarting.Init

Opts.Apps.OpInstall.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isrestarting_flag_=false
    [[ $_obj_opts_apps_opinstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isrestarting_flag_
    }
Opts.Apps.OpInstall.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isrestarting_enable_=false
    [[ $_obj_opts_apps_opinstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isrestarting_enable_
    }
Opts.Apps.OpInstall.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isrestarting_changes_flag_=false
    }
Opts.Apps.OpInstall.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isrestarting_enable_=true
    [[ $_obj_opts_apps_opinstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isrestarting_enable_
    }
Opts.Apps.OpInstall.IsRestarting.Init()
    {
    _obj_opts_apps_opinstall_isrestarting_text_=''
    _obj_opts_apps_opinstall_isrestarting_flag_=false
    _obj_opts_apps_opinstall_isrestarting_changes_flag_=true
    _obj_opts_apps_opinstall_isrestarting_enable_=false
    }
Opts.Apps.OpInstall.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isrestarting_changes_flag_=true
    }
Opts.Apps.OpInstall.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_opinstall_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isrestarting_flag_=true
    [[ $_obj_opts_apps_opinstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isrestarting_flag_
    }
Opts.Apps.OpInstall.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isrestarting_text_"
    fi
    }
Opts.Apps.OpInstall.IsRestarting.Init

Opts.Apps.OpInstall.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_opinstall_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntrestarting_flag_=false
    [[ $_obj_opts_apps_opinstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntrestarting_flag_
    }
Opts.Apps.OpInstall.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_opinstall_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntrestarting_enable_=false
    [[ $_obj_opts_apps_opinstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntrestarting_enable_
    }
Opts.Apps.OpInstall.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opinstall_isntrestarting_changes_flag_=false
    }
Opts.Apps.OpInstall.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_opinstall_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntrestarting_enable_=true
    [[ $_obj_opts_apps_opinstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntrestarting_enable_
    }
Opts.Apps.OpInstall.IsNtRestarting.Init()
    {
    _obj_opts_apps_opinstall_isntrestarting_text_=''
    _obj_opts_apps_opinstall_isntrestarting_flag_=false
    _obj_opts_apps_opinstall_isntrestarting_changes_flag_=true
    _obj_opts_apps_opinstall_isntrestarting_enable_=false
    }
Opts.Apps.OpInstall.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opinstall_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opinstall_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opinstall_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpInstall.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opinstall_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpInstall.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opinstall_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntrestarting_changes_flag_=true
    }
Opts.Apps.OpInstall.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_opinstall_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opinstall_isntrestarting_flag_=true
    [[ $_obj_opts_apps_opinstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opinstall_isntrestarting_flag_
    }
Opts.Apps.OpInstall.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opinstall_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opinstall_isntrestarting_text_"
    fi
    }
Opts.Apps.OpInstall.IsNtRestarting.Init

Opts.Apps.OpRebuild.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isrestarting_flag_=false
    [[ $_obj_opts_apps_oprebuild_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isrestarting_flag_
    }
Opts.Apps.OpRebuild.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isrestarting_enable_=false
    [[ $_obj_opts_apps_oprebuild_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isrestarting_enable_
    }
Opts.Apps.OpRebuild.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isrestarting_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isrestarting_enable_=true
    [[ $_obj_opts_apps_oprebuild_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isrestarting_enable_
    }
Opts.Apps.OpRebuild.IsRestarting.Init()
    {
    _obj_opts_apps_oprebuild_isrestarting_text_=''
    _obj_opts_apps_oprebuild_isrestarting_flag_=false
    _obj_opts_apps_oprebuild_isrestarting_changes_flag_=true
    _obj_opts_apps_oprebuild_isrestarting_enable_=false
    }
Opts.Apps.OpRebuild.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isrestarting_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isrestarting_flag_=true
    [[ $_obj_opts_apps_oprebuild_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isrestarting_flag_
    }
Opts.Apps.OpRebuild.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isrestarting_text_"
    fi
    }
Opts.Apps.OpRebuild.IsRestarting.Init

Opts.Apps.OpRebuild.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_oprebuild_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntrestarting_flag_=false
    [[ $_obj_opts_apps_oprebuild_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntrestarting_flag_
    }
Opts.Apps.OpRebuild.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_oprebuild_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntrestarting_enable_=false
    [[ $_obj_opts_apps_oprebuild_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntrestarting_enable_
    }
Opts.Apps.OpRebuild.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprebuild_isntrestarting_changes_flag_=false
    }
Opts.Apps.OpRebuild.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_oprebuild_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntrestarting_enable_=true
    [[ $_obj_opts_apps_oprebuild_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntrestarting_enable_
    }
Opts.Apps.OpRebuild.IsNtRestarting.Init()
    {
    _obj_opts_apps_oprebuild_isntrestarting_text_=''
    _obj_opts_apps_oprebuild_isntrestarting_flag_=false
    _obj_opts_apps_oprebuild_isntrestarting_changes_flag_=true
    _obj_opts_apps_oprebuild_isntrestarting_enable_=false
    }
Opts.Apps.OpRebuild.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprebuild_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_oprebuild_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_oprebuild_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRebuild.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprebuild_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntrestarting_changes_flag_=true
    }
Opts.Apps.OpRebuild.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_oprebuild_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprebuild_isntrestarting_flag_=true
    [[ $_obj_opts_apps_oprebuild_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprebuild_isntrestarting_flag_
    }
Opts.Apps.OpRebuild.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprebuild_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprebuild_isntrestarting_text_"
    fi
    }
Opts.Apps.OpRebuild.IsNtRestarting.Init

Opts.Apps.OpReinstall.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isrestarting_flag_=false
    [[ $_obj_opts_apps_opreinstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isrestarting_flag_
    }
Opts.Apps.OpReinstall.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isrestarting_enable_=false
    [[ $_obj_opts_apps_opreinstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isrestarting_enable_
    }
Opts.Apps.OpReinstall.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isrestarting_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isrestarting_enable_=true
    [[ $_obj_opts_apps_opreinstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isrestarting_enable_
    }
Opts.Apps.OpReinstall.IsRestarting.Init()
    {
    _obj_opts_apps_opreinstall_isrestarting_text_=''
    _obj_opts_apps_opreinstall_isrestarting_flag_=false
    _obj_opts_apps_opreinstall_isrestarting_changes_flag_=true
    _obj_opts_apps_opreinstall_isrestarting_enable_=false
    }
Opts.Apps.OpReinstall.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isrestarting_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isrestarting_flag_=true
    [[ $_obj_opts_apps_opreinstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isrestarting_flag_
    }
Opts.Apps.OpReinstall.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isrestarting_text_"
    fi
    }
Opts.Apps.OpReinstall.IsRestarting.Init

Opts.Apps.OpReinstall.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_opreinstall_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntrestarting_flag_=false
    [[ $_obj_opts_apps_opreinstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntrestarting_flag_
    }
Opts.Apps.OpReinstall.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_opreinstall_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntrestarting_enable_=false
    [[ $_obj_opts_apps_opreinstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntrestarting_enable_
    }
Opts.Apps.OpReinstall.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opreinstall_isntrestarting_changes_flag_=false
    }
Opts.Apps.OpReinstall.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_opreinstall_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntrestarting_enable_=true
    [[ $_obj_opts_apps_opreinstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntrestarting_enable_
    }
Opts.Apps.OpReinstall.IsNtRestarting.Init()
    {
    _obj_opts_apps_opreinstall_isntrestarting_text_=''
    _obj_opts_apps_opreinstall_isntrestarting_flag_=false
    _obj_opts_apps_opreinstall_isntrestarting_changes_flag_=true
    _obj_opts_apps_opreinstall_isntrestarting_enable_=false
    }
Opts.Apps.OpReinstall.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opreinstall_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opreinstall_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opreinstall_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpReinstall.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opreinstall_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntrestarting_changes_flag_=true
    }
Opts.Apps.OpReinstall.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_opreinstall_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opreinstall_isntrestarting_flag_=true
    [[ $_obj_opts_apps_opreinstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opreinstall_isntrestarting_flag_
    }
Opts.Apps.OpReinstall.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opreinstall_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opreinstall_isntrestarting_text_"
    fi
    }
Opts.Apps.OpReinstall.IsNtRestarting.Init

Opts.Apps.OpRestart.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isrestarting_flag_=false
    [[ $_obj_opts_apps_oprestart_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isrestarting_flag_
    }
Opts.Apps.OpRestart.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isrestarting_enable_=false
    [[ $_obj_opts_apps_oprestart_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isrestarting_enable_
    }
Opts.Apps.OpRestart.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isrestarting_changes_flag_=false
    }
Opts.Apps.OpRestart.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isrestarting_enable_=true
    [[ $_obj_opts_apps_oprestart_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isrestarting_enable_
    }
Opts.Apps.OpRestart.IsRestarting.Init()
    {
    _obj_opts_apps_oprestart_isrestarting_text_=''
    _obj_opts_apps_oprestart_isrestarting_flag_=false
    _obj_opts_apps_oprestart_isrestarting_changes_flag_=true
    _obj_opts_apps_oprestart_isrestarting_enable_=false
    }
Opts.Apps.OpRestart.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isrestarting_changes_flag_=true
    }
Opts.Apps.OpRestart.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_oprestart_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isrestarting_flag_=true
    [[ $_obj_opts_apps_oprestart_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isrestarting_flag_
    }
Opts.Apps.OpRestart.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isrestarting_text_"
    fi
    }
Opts.Apps.OpRestart.IsRestarting.Init

Opts.Apps.OpRestart.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_oprestart_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntrestarting_flag_=false
    [[ $_obj_opts_apps_oprestart_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntrestarting_flag_
    }
Opts.Apps.OpRestart.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_oprestart_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntrestarting_enable_=false
    [[ $_obj_opts_apps_oprestart_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntrestarting_enable_
    }
Opts.Apps.OpRestart.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestart_isntrestarting_changes_flag_=false
    }
Opts.Apps.OpRestart.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_oprestart_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntrestarting_enable_=true
    [[ $_obj_opts_apps_oprestart_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntrestarting_enable_
    }
Opts.Apps.OpRestart.IsNtRestarting.Init()
    {
    _obj_opts_apps_oprestart_isntrestarting_text_=''
    _obj_opts_apps_oprestart_isntrestarting_flag_=false
    _obj_opts_apps_oprestart_isntrestarting_changes_flag_=true
    _obj_opts_apps_oprestart_isntrestarting_enable_=false
    }
Opts.Apps.OpRestart.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestart_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestart_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_oprestart_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRestart.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_oprestart_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRestart.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprestart_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntrestarting_changes_flag_=true
    }
Opts.Apps.OpRestart.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_oprestart_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestart_isntrestarting_flag_=true
    [[ $_obj_opts_apps_oprestart_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestart_isntrestarting_flag_
    }
Opts.Apps.OpRestart.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestart_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestart_isntrestarting_text_"
    fi
    }
Opts.Apps.OpRestart.IsNtRestarting.Init

Opts.Apps.OpRestore.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isrestarting_flag_=false
    [[ $_obj_opts_apps_oprestore_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isrestarting_flag_
    }
Opts.Apps.OpRestore.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isrestarting_enable_=false
    [[ $_obj_opts_apps_oprestore_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isrestarting_enable_
    }
Opts.Apps.OpRestore.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isrestarting_changes_flag_=false
    }
Opts.Apps.OpRestore.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isrestarting_enable_=true
    [[ $_obj_opts_apps_oprestore_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isrestarting_enable_
    }
Opts.Apps.OpRestore.IsRestarting.Init()
    {
    _obj_opts_apps_oprestore_isrestarting_text_=''
    _obj_opts_apps_oprestore_isrestarting_flag_=false
    _obj_opts_apps_oprestore_isrestarting_changes_flag_=true
    _obj_opts_apps_oprestore_isrestarting_enable_=false
    }
Opts.Apps.OpRestore.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isrestarting_changes_flag_=true
    }
Opts.Apps.OpRestore.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_oprestore_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isrestarting_flag_=true
    [[ $_obj_opts_apps_oprestore_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isrestarting_flag_
    }
Opts.Apps.OpRestore.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isrestarting_text_"
    fi
    }
Opts.Apps.OpRestore.IsRestarting.Init

Opts.Apps.OpRestore.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_oprestore_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntrestarting_flag_=false
    [[ $_obj_opts_apps_oprestore_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntrestarting_flag_
    }
Opts.Apps.OpRestore.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_oprestore_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntrestarting_enable_=false
    [[ $_obj_opts_apps_oprestore_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntrestarting_enable_
    }
Opts.Apps.OpRestore.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_oprestore_isntrestarting_changes_flag_=false
    }
Opts.Apps.OpRestore.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_oprestore_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntrestarting_enable_=true
    [[ $_obj_opts_apps_oprestore_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntrestarting_enable_
    }
Opts.Apps.OpRestore.IsNtRestarting.Init()
    {
    _obj_opts_apps_oprestore_isntrestarting_text_=''
    _obj_opts_apps_oprestore_isntrestarting_flag_=false
    _obj_opts_apps_oprestore_isntrestarting_changes_flag_=true
    _obj_opts_apps_oprestore_isntrestarting_enable_=false
    }
Opts.Apps.OpRestore.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_oprestore_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_oprestore_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_oprestore_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpRestore.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_oprestore_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpRestore.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_oprestore_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntrestarting_changes_flag_=true
    }
Opts.Apps.OpRestore.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_oprestore_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_oprestore_isntrestarting_flag_=true
    [[ $_obj_opts_apps_oprestore_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_oprestore_isntrestarting_flag_
    }
Opts.Apps.OpRestore.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_oprestore_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_oprestore_isntrestarting_text_"
    fi
    }
Opts.Apps.OpRestore.IsNtRestarting.Init

Opts.Apps.OpStart.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_opstart_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isrestarting_flag_=false
    [[ $_obj_opts_apps_opstart_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isrestarting_flag_
    }
Opts.Apps.OpStart.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_opstart_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isrestarting_enable_=false
    [[ $_obj_opts_apps_opstart_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isrestarting_enable_
    }
Opts.Apps.OpStart.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isrestarting_changes_flag_=false
    }
Opts.Apps.OpStart.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_opstart_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isrestarting_enable_=true
    [[ $_obj_opts_apps_opstart_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isrestarting_enable_
    }
Opts.Apps.OpStart.IsRestarting.Init()
    {
    _obj_opts_apps_opstart_isrestarting_text_=''
    _obj_opts_apps_opstart_isrestarting_flag_=false
    _obj_opts_apps_opstart_isrestarting_changes_flag_=true
    _obj_opts_apps_opstart_isrestarting_enable_=false
    }
Opts.Apps.OpStart.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isrestarting_changes_flag_=true
    }
Opts.Apps.OpStart.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_opstart_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isrestarting_flag_=true
    [[ $_obj_opts_apps_opstart_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isrestarting_flag_
    }
Opts.Apps.OpStart.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isrestarting_text_"
    fi
    }
Opts.Apps.OpStart.IsRestarting.Init

Opts.Apps.OpStart.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_opstart_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntrestarting_flag_=false
    [[ $_obj_opts_apps_opstart_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntrestarting_flag_
    }
Opts.Apps.OpStart.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_opstart_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntrestarting_enable_=false
    [[ $_obj_opts_apps_opstart_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntrestarting_enable_
    }
Opts.Apps.OpStart.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstart_isntrestarting_changes_flag_=false
    }
Opts.Apps.OpStart.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_opstart_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntrestarting_enable_=true
    [[ $_obj_opts_apps_opstart_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntrestarting_enable_
    }
Opts.Apps.OpStart.IsNtRestarting.Init()
    {
    _obj_opts_apps_opstart_isntrestarting_text_=''
    _obj_opts_apps_opstart_isntrestarting_flag_=false
    _obj_opts_apps_opstart_isntrestarting_changes_flag_=true
    _obj_opts_apps_opstart_isntrestarting_enable_=false
    }
Opts.Apps.OpStart.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opstart_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opstart_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opstart_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpStart.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opstart_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpStart.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opstart_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntrestarting_changes_flag_=true
    }
Opts.Apps.OpStart.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_opstart_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opstart_isntrestarting_flag_=true
    [[ $_obj_opts_apps_opstart_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstart_isntrestarting_flag_
    }
Opts.Apps.OpStart.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstart_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opstart_isntrestarting_text_"
    fi
    }
Opts.Apps.OpStart.IsNtRestarting.Init

Opts.Apps.OpStop.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_opstop_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isrestarting_flag_=false
    [[ $_obj_opts_apps_opstop_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isrestarting_flag_
    }
Opts.Apps.OpStop.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_opstop_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isrestarting_enable_=false
    [[ $_obj_opts_apps_opstop_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isrestarting_enable_
    }
Opts.Apps.OpStop.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isrestarting_changes_flag_=false
    }
Opts.Apps.OpStop.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_opstop_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isrestarting_enable_=true
    [[ $_obj_opts_apps_opstop_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isrestarting_enable_
    }
Opts.Apps.OpStop.IsRestarting.Init()
    {
    _obj_opts_apps_opstop_isrestarting_text_=''
    _obj_opts_apps_opstop_isrestarting_flag_=false
    _obj_opts_apps_opstop_isrestarting_changes_flag_=true
    _obj_opts_apps_opstop_isrestarting_enable_=false
    }
Opts.Apps.OpStop.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isrestarting_changes_flag_=true
    }
Opts.Apps.OpStop.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_opstop_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isrestarting_flag_=true
    [[ $_obj_opts_apps_opstop_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isrestarting_flag_
    }
Opts.Apps.OpStop.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isrestarting_text_"
    fi
    }
Opts.Apps.OpStop.IsRestarting.Init

Opts.Apps.OpStop.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_opstop_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntrestarting_flag_=false
    [[ $_obj_opts_apps_opstop_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntrestarting_flag_
    }
Opts.Apps.OpStop.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_opstop_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntrestarting_enable_=false
    [[ $_obj_opts_apps_opstop_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntrestarting_enable_
    }
Opts.Apps.OpStop.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opstop_isntrestarting_changes_flag_=false
    }
Opts.Apps.OpStop.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_opstop_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntrestarting_enable_=true
    [[ $_obj_opts_apps_opstop_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntrestarting_enable_
    }
Opts.Apps.OpStop.IsNtRestarting.Init()
    {
    _obj_opts_apps_opstop_isntrestarting_text_=''
    _obj_opts_apps_opstop_isntrestarting_flag_=false
    _obj_opts_apps_opstop_isntrestarting_changes_flag_=true
    _obj_opts_apps_opstop_isntrestarting_enable_=false
    }
Opts.Apps.OpStop.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opstop_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opstop_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opstop_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpStop.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opstop_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpStop.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opstop_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntrestarting_changes_flag_=true
    }
Opts.Apps.OpStop.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_opstop_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opstop_isntrestarting_flag_=true
    [[ $_obj_opts_apps_opstop_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opstop_isntrestarting_flag_
    }
Opts.Apps.OpStop.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opstop_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opstop_isntrestarting_text_"
    fi
    }
Opts.Apps.OpStop.IsNtRestarting.Init

Opts.Apps.OpUninstall.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isrestarting_flag_=false
    [[ $_obj_opts_apps_opuninstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isrestarting_flag_
    }
Opts.Apps.OpUninstall.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isrestarting_enable_=false
    [[ $_obj_opts_apps_opuninstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isrestarting_enable_
    }
Opts.Apps.OpUninstall.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isrestarting_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isrestarting_enable_=true
    [[ $_obj_opts_apps_opuninstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isrestarting_enable_
    }
Opts.Apps.OpUninstall.IsRestarting.Init()
    {
    _obj_opts_apps_opuninstall_isrestarting_text_=''
    _obj_opts_apps_opuninstall_isrestarting_flag_=false
    _obj_opts_apps_opuninstall_isrestarting_changes_flag_=true
    _obj_opts_apps_opuninstall_isrestarting_enable_=false
    }
Opts.Apps.OpUninstall.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isrestarting_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isrestarting_flag_=true
    [[ $_obj_opts_apps_opuninstall_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isrestarting_flag_
    }
Opts.Apps.OpUninstall.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isrestarting_text_"
    fi
    }
Opts.Apps.OpUninstall.IsRestarting.Init

Opts.Apps.OpUninstall.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_opuninstall_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntrestarting_flag_=false
    [[ $_obj_opts_apps_opuninstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntrestarting_flag_
    }
Opts.Apps.OpUninstall.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_opuninstall_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntrestarting_enable_=false
    [[ $_obj_opts_apps_opuninstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntrestarting_enable_
    }
Opts.Apps.OpUninstall.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opuninstall_isntrestarting_changes_flag_=false
    }
Opts.Apps.OpUninstall.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_opuninstall_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntrestarting_enable_=true
    [[ $_obj_opts_apps_opuninstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntrestarting_enable_
    }
Opts.Apps.OpUninstall.IsNtRestarting.Init()
    {
    _obj_opts_apps_opuninstall_isntrestarting_text_=''
    _obj_opts_apps_opuninstall_isntrestarting_flag_=false
    _obj_opts_apps_opuninstall_isntrestarting_changes_flag_=true
    _obj_opts_apps_opuninstall_isntrestarting_enable_=false
    }
Opts.Apps.OpUninstall.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opuninstall_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opuninstall_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opuninstall_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpUninstall.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opuninstall_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntrestarting_changes_flag_=true
    }
Opts.Apps.OpUninstall.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_opuninstall_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opuninstall_isntrestarting_flag_=true
    [[ $_obj_opts_apps_opuninstall_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opuninstall_isntrestarting_flag_
    }
Opts.Apps.OpUninstall.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opuninstall_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opuninstall_isntrestarting_text_"
    fi
    }
Opts.Apps.OpUninstall.IsNtRestarting.Init

Opts.Apps.OpUpgrade.IsRestarting.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isrestarting_flag_=false
    [[ $_obj_opts_apps_opupgrade_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isrestarting_flag_
    }
Opts.Apps.OpUpgrade.IsRestarting.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isrestarting_enable_=false
    [[ $_obj_opts_apps_opupgrade_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isrestarting_enable_
    }
Opts.Apps.OpUpgrade.IsRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isrestarting_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsRestarting.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isrestarting_enable_=true
    [[ $_obj_opts_apps_opupgrade_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isrestarting_enable_
    }
Opts.Apps.OpUpgrade.IsRestarting.Init()
    {
    _obj_opts_apps_opupgrade_isrestarting_text_=''
    _obj_opts_apps_opupgrade_isrestarting_flag_=false
    _obj_opts_apps_opupgrade_isrestarting_changes_flag_=true
    _obj_opts_apps_opupgrade_isrestarting_enable_=false
    }
Opts.Apps.OpUpgrade.IsRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isrestarting_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsRestarting.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isrestarting_flag_=true
    [[ $_obj_opts_apps_opupgrade_isrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isrestarting_flag_
    }
Opts.Apps.OpUpgrade.IsRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isrestarting_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsRestarting.Init

Opts.Apps.OpUpgrade.IsNtRestarting.Clear()
    {
    [[ $_obj_opts_apps_opupgrade_isntrestarting_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntrestarting_flag_=false
    [[ $_obj_opts_apps_opupgrade_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntrestarting_flag_
    }
Opts.Apps.OpUpgrade.IsNtRestarting.Disable()
    {
    [[ $_obj_opts_apps_opupgrade_isntrestarting_enable_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntrestarting_enable_=false
    [[ $_obj_opts_apps_opupgrade_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntrestarting_enable_
    }
Opts.Apps.OpUpgrade.IsNtRestarting.DontLogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntrestarting_changes_flag_ != 'true' ]] && return
    _obj_opts_apps_opupgrade_isntrestarting_changes_flag_=false
    }
Opts.Apps.OpUpgrade.IsNtRestarting.Enable()
    {
    [[ $_obj_opts_apps_opupgrade_isntrestarting_enable_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntrestarting_enable_=true
    [[ $_obj_opts_apps_opupgrade_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntrestarting_enable_
    }
Opts.Apps.OpUpgrade.IsNtRestarting.Init()
    {
    _obj_opts_apps_opupgrade_isntrestarting_text_=''
    _obj_opts_apps_opupgrade_isntrestarting_flag_=false
    _obj_opts_apps_opupgrade_isntrestarting_changes_flag_=true
    _obj_opts_apps_opupgrade_isntrestarting_enable_=false
    }
Opts.Apps.OpUpgrade.IsNtRestarting.IsDisabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntrestarting_enable_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtRestarting.IsEnabled()
    {
    [[ $_obj_opts_apps_opupgrade_isntrestarting_enable_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtRestarting.IsNt()
    {
    [[ $_obj_opts_apps_opupgrade_isntrestarting_flag_ != 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtRestarting.IsSet()
    {
    [[ $_obj_opts_apps_opupgrade_isntrestarting_flag_ = 'true' ]]
    }
Opts.Apps.OpUpgrade.IsNtRestarting.LogChanges()
    {
    [[ $_obj_opts_apps_opupgrade_isntrestarting_changes_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntrestarting_changes_flag_=true
    }
Opts.Apps.OpUpgrade.IsNtRestarting.Set()
    {
    [[ $_obj_opts_apps_opupgrade_isntrestarting_flag_ = 'true' ]] && return
    _obj_opts_apps_opupgrade_isntrestarting_flag_=true
    [[ $_obj_opts_apps_opupgrade_isntrestarting_changes_flag_ = 'true' ]] && DebugVar _obj_opts_apps_opupgrade_isntrestarting_flag_
    }
Opts.Apps.OpUpgrade.IsNtRestarting.Text()
    {
    if [[ -n ${1:-} && $1 = "=" ]]; then
        _obj_opts_apps_opupgrade_isntrestarting_text_=$2
    else
        echo -n "$_obj_opts_apps_opupgrade_isntrestarting_text_"
    fi
    }
Opts.Apps.OpUpgrade.IsNtRestarting.Init

Args.Unknown.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_args_unknown_array_[*]+"${_obj_args_unknown_array_[@]}"} " != *"$item"* ]]; then
            _obj_args_unknown_array_+=("$item")
        fi
    done
    }
Args.Unknown.Array()
    {
    echo -n "${_obj_args_unknown_array_[@]+"${_obj_args_unknown_array_[@]}"}"
    }
Args.Unknown.Count()
    {
    echo "${#_obj_args_unknown_array_[@]}"
    }
Args.Unknown.Exist()
    {
    [[ ${_obj_args_unknown_array_[*]:-} == *"$1"* ]]
    }
Args.Unknown.First()
    {
    echo "${_obj_args_unknown_array_[0]}"
    }
Args.Unknown.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_args_unknown_array_[@]} ]] && index=${#_obj_args_unknown_array_[@]}
    echo -n "${_obj_args_unknown_array_[((index-1))]}"
    }
Args.Unknown.Init()
    {
    _obj_args_unknown_size_=0
    _obj_args_unknown_array_=()
    _obj_args_unknown_array_index_=1
    }
Args.Unknown.IsAny()
    {
    [[ ${#_obj_args_unknown_array_[@]} -gt 0 ]]
    }
Args.Unknown.IsNone()
    {
    [[ ${#_obj_args_unknown_array_[@]} -eq 0 ]]
    }
Args.Unknown.List()
    {
    echo -n "${_obj_args_unknown_array_[*]+"${_obj_args_unknown_array_[@]}"}"
    }
Args.Unknown.ListCSV()
    {
    echo -n "${_obj_args_unknown_array_[*]+"${_obj_args_unknown_array_[@]}"}" | tr ' ' ','
    }
Args.Unknown.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_args_unknown_array_[@]+"${_obj_args_unknown_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_args_unknown_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_args_unknown_array_[*]+"${_obj_args_unknown_array_[@]}"} ]] && _obj_args_unknown_array_=()
    }
Args.Unknown.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_args_unknown_size_=$2
    else
        echo -n $_obj_args_unknown_size_
    fi
    }
Args.Unknown.Init

QPKGs.ScAll.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scall_array_[*]+"${_obj_qpkgs_scall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scall_array_+=("$item")
        fi
    done
    }
QPKGs.ScAll.Array()
    {
    echo -n "${_obj_qpkgs_scall_array_[@]+"${_obj_qpkgs_scall_array_[@]}"}"
    }
QPKGs.ScAll.Count()
    {
    echo "${#_obj_qpkgs_scall_array_[@]}"
    }
QPKGs.ScAll.Exist()
    {
    [[ ${_obj_qpkgs_scall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScAll.First()
    {
    echo "${_obj_qpkgs_scall_array_[0]}"
    }
QPKGs.ScAll.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scall_array_[@]} ]] && index=${#_obj_qpkgs_scall_array_[@]}
    echo -n "${_obj_qpkgs_scall_array_[((index-1))]}"
    }
QPKGs.ScAll.Init()
    {
    _obj_qpkgs_scall_size_=0
    _obj_qpkgs_scall_array_=()
    _obj_qpkgs_scall_array_index_=1
    }
QPKGs.ScAll.IsAny()
    {
    [[ ${#_obj_qpkgs_scall_array_[@]} -gt 0 ]]
    }
QPKGs.ScAll.IsNone()
    {
    [[ ${#_obj_qpkgs_scall_array_[@]} -eq 0 ]]
    }
QPKGs.ScAll.List()
    {
    echo -n "${_obj_qpkgs_scall_array_[*]+"${_obj_qpkgs_scall_array_[@]}"}"
    }
QPKGs.ScAll.ListCSV()
    {
    echo -n "${_obj_qpkgs_scall_array_[*]+"${_obj_qpkgs_scall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScAll.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scall_array_[@]+"${_obj_qpkgs_scall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scall_array_[*]+"${_obj_qpkgs_scall_array_[@]}"} ]] && _obj_qpkgs_scall_array_=()
    }
QPKGs.ScAll.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scall_size_=$2
    else
        echo -n $_obj_qpkgs_scall_size_
    fi
    }
QPKGs.ScAll.Init

QPKGs.ScNtAll.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scntall_array_[*]+"${_obj_qpkgs_scntall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scntall_array_+=("$item")
        fi
    done
    }
QPKGs.ScNtAll.Array()
    {
    echo -n "${_obj_qpkgs_scntall_array_[@]+"${_obj_qpkgs_scntall_array_[@]}"}"
    }
QPKGs.ScNtAll.Count()
    {
    echo "${#_obj_qpkgs_scntall_array_[@]}"
    }
QPKGs.ScNtAll.Exist()
    {
    [[ ${_obj_qpkgs_scntall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScNtAll.First()
    {
    echo "${_obj_qpkgs_scntall_array_[0]}"
    }
QPKGs.ScNtAll.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scntall_array_[@]} ]] && index=${#_obj_qpkgs_scntall_array_[@]}
    echo -n "${_obj_qpkgs_scntall_array_[((index-1))]}"
    }
QPKGs.ScNtAll.Init()
    {
    _obj_qpkgs_scntall_size_=0
    _obj_qpkgs_scntall_array_=()
    _obj_qpkgs_scntall_array_index_=1
    }
QPKGs.ScNtAll.IsAny()
    {
    [[ ${#_obj_qpkgs_scntall_array_[@]} -gt 0 ]]
    }
QPKGs.ScNtAll.IsNone()
    {
    [[ ${#_obj_qpkgs_scntall_array_[@]} -eq 0 ]]
    }
QPKGs.ScNtAll.List()
    {
    echo -n "${_obj_qpkgs_scntall_array_[*]+"${_obj_qpkgs_scntall_array_[@]}"}"
    }
QPKGs.ScNtAll.ListCSV()
    {
    echo -n "${_obj_qpkgs_scntall_array_[*]+"${_obj_qpkgs_scntall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScNtAll.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scntall_array_[@]+"${_obj_qpkgs_scntall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scntall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scntall_array_[*]+"${_obj_qpkgs_scntall_array_[@]}"} ]] && _obj_qpkgs_scntall_array_=()
    }
QPKGs.ScNtAll.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scntall_size_=$2
    else
        echo -n $_obj_qpkgs_scntall_size_
    fi
    }
QPKGs.ScNtAll.Init

QPKGs.ScDependent.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scdependent_array_[*]+"${_obj_qpkgs_scdependent_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scdependent_array_+=("$item")
        fi
    done
    }
QPKGs.ScDependent.Array()
    {
    echo -n "${_obj_qpkgs_scdependent_array_[@]+"${_obj_qpkgs_scdependent_array_[@]}"}"
    }
QPKGs.ScDependent.Count()
    {
    echo "${#_obj_qpkgs_scdependent_array_[@]}"
    }
QPKGs.ScDependent.Exist()
    {
    [[ ${_obj_qpkgs_scdependent_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScDependent.First()
    {
    echo "${_obj_qpkgs_scdependent_array_[0]}"
    }
QPKGs.ScDependent.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scdependent_array_[@]} ]] && index=${#_obj_qpkgs_scdependent_array_[@]}
    echo -n "${_obj_qpkgs_scdependent_array_[((index-1))]}"
    }
QPKGs.ScDependent.Init()
    {
    _obj_qpkgs_scdependent_size_=0
    _obj_qpkgs_scdependent_array_=()
    _obj_qpkgs_scdependent_array_index_=1
    }
QPKGs.ScDependent.IsAny()
    {
    [[ ${#_obj_qpkgs_scdependent_array_[@]} -gt 0 ]]
    }
QPKGs.ScDependent.IsNone()
    {
    [[ ${#_obj_qpkgs_scdependent_array_[@]} -eq 0 ]]
    }
QPKGs.ScDependent.List()
    {
    echo -n "${_obj_qpkgs_scdependent_array_[*]+"${_obj_qpkgs_scdependent_array_[@]}"}"
    }
QPKGs.ScDependent.ListCSV()
    {
    echo -n "${_obj_qpkgs_scdependent_array_[*]+"${_obj_qpkgs_scdependent_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScDependent.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scdependent_array_[@]+"${_obj_qpkgs_scdependent_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scdependent_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scdependent_array_[*]+"${_obj_qpkgs_scdependent_array_[@]}"} ]] && _obj_qpkgs_scdependent_array_=()
    }
QPKGs.ScDependent.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scdependent_size_=$2
    else
        echo -n $_obj_qpkgs_scdependent_size_
    fi
    }
QPKGs.ScDependent.Init

QPKGs.ScNtDependent.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scntdependent_array_[*]+"${_obj_qpkgs_scntdependent_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scntdependent_array_+=("$item")
        fi
    done
    }
QPKGs.ScNtDependent.Array()
    {
    echo -n "${_obj_qpkgs_scntdependent_array_[@]+"${_obj_qpkgs_scntdependent_array_[@]}"}"
    }
QPKGs.ScNtDependent.Count()
    {
    echo "${#_obj_qpkgs_scntdependent_array_[@]}"
    }
QPKGs.ScNtDependent.Exist()
    {
    [[ ${_obj_qpkgs_scntdependent_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScNtDependent.First()
    {
    echo "${_obj_qpkgs_scntdependent_array_[0]}"
    }
QPKGs.ScNtDependent.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scntdependent_array_[@]} ]] && index=${#_obj_qpkgs_scntdependent_array_[@]}
    echo -n "${_obj_qpkgs_scntdependent_array_[((index-1))]}"
    }
QPKGs.ScNtDependent.Init()
    {
    _obj_qpkgs_scntdependent_size_=0
    _obj_qpkgs_scntdependent_array_=()
    _obj_qpkgs_scntdependent_array_index_=1
    }
QPKGs.ScNtDependent.IsAny()
    {
    [[ ${#_obj_qpkgs_scntdependent_array_[@]} -gt 0 ]]
    }
QPKGs.ScNtDependent.IsNone()
    {
    [[ ${#_obj_qpkgs_scntdependent_array_[@]} -eq 0 ]]
    }
QPKGs.ScNtDependent.List()
    {
    echo -n "${_obj_qpkgs_scntdependent_array_[*]+"${_obj_qpkgs_scntdependent_array_[@]}"}"
    }
QPKGs.ScNtDependent.ListCSV()
    {
    echo -n "${_obj_qpkgs_scntdependent_array_[*]+"${_obj_qpkgs_scntdependent_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScNtDependent.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scntdependent_array_[@]+"${_obj_qpkgs_scntdependent_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scntdependent_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scntdependent_array_[*]+"${_obj_qpkgs_scntdependent_array_[@]}"} ]] && _obj_qpkgs_scntdependent_array_=()
    }
QPKGs.ScNtDependent.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scntdependent_size_=$2
    else
        echo -n $_obj_qpkgs_scntdependent_size_
    fi
    }
QPKGs.ScNtDependent.Init

QPKGs.ScNames.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scnames_array_[*]+"${_obj_qpkgs_scnames_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scnames_array_+=("$item")
        fi
    done
    }
QPKGs.ScNames.Array()
    {
    echo -n "${_obj_qpkgs_scnames_array_[@]+"${_obj_qpkgs_scnames_array_[@]}"}"
    }
QPKGs.ScNames.Count()
    {
    echo "${#_obj_qpkgs_scnames_array_[@]}"
    }
QPKGs.ScNames.Exist()
    {
    [[ ${_obj_qpkgs_scnames_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScNames.First()
    {
    echo "${_obj_qpkgs_scnames_array_[0]}"
    }
QPKGs.ScNames.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scnames_array_[@]} ]] && index=${#_obj_qpkgs_scnames_array_[@]}
    echo -n "${_obj_qpkgs_scnames_array_[((index-1))]}"
    }
QPKGs.ScNames.Init()
    {
    _obj_qpkgs_scnames_size_=0
    _obj_qpkgs_scnames_array_=()
    _obj_qpkgs_scnames_array_index_=1
    }
QPKGs.ScNames.IsAny()
    {
    [[ ${#_obj_qpkgs_scnames_array_[@]} -gt 0 ]]
    }
QPKGs.ScNames.IsNone()
    {
    [[ ${#_obj_qpkgs_scnames_array_[@]} -eq 0 ]]
    }
QPKGs.ScNames.List()
    {
    echo -n "${_obj_qpkgs_scnames_array_[*]+"${_obj_qpkgs_scnames_array_[@]}"}"
    }
QPKGs.ScNames.ListCSV()
    {
    echo -n "${_obj_qpkgs_scnames_array_[*]+"${_obj_qpkgs_scnames_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScNames.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scnames_array_[@]+"${_obj_qpkgs_scnames_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scnames_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scnames_array_[*]+"${_obj_qpkgs_scnames_array_[@]}"} ]] && _obj_qpkgs_scnames_array_=()
    }
QPKGs.ScNames.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scnames_size_=$2
    else
        echo -n $_obj_qpkgs_scnames_size_
    fi
    }
QPKGs.ScNames.Init

QPKGs.ScNtNames.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scntnames_array_[*]+"${_obj_qpkgs_scntnames_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scntnames_array_+=("$item")
        fi
    done
    }
QPKGs.ScNtNames.Array()
    {
    echo -n "${_obj_qpkgs_scntnames_array_[@]+"${_obj_qpkgs_scntnames_array_[@]}"}"
    }
QPKGs.ScNtNames.Count()
    {
    echo "${#_obj_qpkgs_scntnames_array_[@]}"
    }
QPKGs.ScNtNames.Exist()
    {
    [[ ${_obj_qpkgs_scntnames_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScNtNames.First()
    {
    echo "${_obj_qpkgs_scntnames_array_[0]}"
    }
QPKGs.ScNtNames.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scntnames_array_[@]} ]] && index=${#_obj_qpkgs_scntnames_array_[@]}
    echo -n "${_obj_qpkgs_scntnames_array_[((index-1))]}"
    }
QPKGs.ScNtNames.Init()
    {
    _obj_qpkgs_scntnames_size_=0
    _obj_qpkgs_scntnames_array_=()
    _obj_qpkgs_scntnames_array_index_=1
    }
QPKGs.ScNtNames.IsAny()
    {
    [[ ${#_obj_qpkgs_scntnames_array_[@]} -gt 0 ]]
    }
QPKGs.ScNtNames.IsNone()
    {
    [[ ${#_obj_qpkgs_scntnames_array_[@]} -eq 0 ]]
    }
QPKGs.ScNtNames.List()
    {
    echo -n "${_obj_qpkgs_scntnames_array_[*]+"${_obj_qpkgs_scntnames_array_[@]}"}"
    }
QPKGs.ScNtNames.ListCSV()
    {
    echo -n "${_obj_qpkgs_scntnames_array_[*]+"${_obj_qpkgs_scntnames_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScNtNames.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scntnames_array_[@]+"${_obj_qpkgs_scntnames_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scntnames_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scntnames_array_[*]+"${_obj_qpkgs_scntnames_array_[@]}"} ]] && _obj_qpkgs_scntnames_array_=()
    }
QPKGs.ScNtNames.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scntnames_size_=$2
    else
        echo -n $_obj_qpkgs_scntnames_size_
    fi
    }
QPKGs.ScNtNames.Init

QPKGs.ScStandalone.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scstandalone_array_[*]+"${_obj_qpkgs_scstandalone_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scstandalone_array_+=("$item")
        fi
    done
    }
QPKGs.ScStandalone.Array()
    {
    echo -n "${_obj_qpkgs_scstandalone_array_[@]+"${_obj_qpkgs_scstandalone_array_[@]}"}"
    }
QPKGs.ScStandalone.Count()
    {
    echo "${#_obj_qpkgs_scstandalone_array_[@]}"
    }
QPKGs.ScStandalone.Exist()
    {
    [[ ${_obj_qpkgs_scstandalone_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScStandalone.First()
    {
    echo "${_obj_qpkgs_scstandalone_array_[0]}"
    }
QPKGs.ScStandalone.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scstandalone_array_[@]} ]] && index=${#_obj_qpkgs_scstandalone_array_[@]}
    echo -n "${_obj_qpkgs_scstandalone_array_[((index-1))]}"
    }
QPKGs.ScStandalone.Init()
    {
    _obj_qpkgs_scstandalone_size_=0
    _obj_qpkgs_scstandalone_array_=()
    _obj_qpkgs_scstandalone_array_index_=1
    }
QPKGs.ScStandalone.IsAny()
    {
    [[ ${#_obj_qpkgs_scstandalone_array_[@]} -gt 0 ]]
    }
QPKGs.ScStandalone.IsNone()
    {
    [[ ${#_obj_qpkgs_scstandalone_array_[@]} -eq 0 ]]
    }
QPKGs.ScStandalone.List()
    {
    echo -n "${_obj_qpkgs_scstandalone_array_[*]+"${_obj_qpkgs_scstandalone_array_[@]}"}"
    }
QPKGs.ScStandalone.ListCSV()
    {
    echo -n "${_obj_qpkgs_scstandalone_array_[*]+"${_obj_qpkgs_scstandalone_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScStandalone.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scstandalone_array_[@]+"${_obj_qpkgs_scstandalone_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scstandalone_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scstandalone_array_[*]+"${_obj_qpkgs_scstandalone_array_[@]}"} ]] && _obj_qpkgs_scstandalone_array_=()
    }
QPKGs.ScStandalone.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scstandalone_size_=$2
    else
        echo -n $_obj_qpkgs_scstandalone_size_
    fi
    }
QPKGs.ScStandalone.Init

QPKGs.ScNtStandalone.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scntstandalone_array_[*]+"${_obj_qpkgs_scntstandalone_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scntstandalone_array_+=("$item")
        fi
    done
    }
QPKGs.ScNtStandalone.Array()
    {
    echo -n "${_obj_qpkgs_scntstandalone_array_[@]+"${_obj_qpkgs_scntstandalone_array_[@]}"}"
    }
QPKGs.ScNtStandalone.Count()
    {
    echo "${#_obj_qpkgs_scntstandalone_array_[@]}"
    }
QPKGs.ScNtStandalone.Exist()
    {
    [[ ${_obj_qpkgs_scntstandalone_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScNtStandalone.First()
    {
    echo "${_obj_qpkgs_scntstandalone_array_[0]}"
    }
QPKGs.ScNtStandalone.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scntstandalone_array_[@]} ]] && index=${#_obj_qpkgs_scntstandalone_array_[@]}
    echo -n "${_obj_qpkgs_scntstandalone_array_[((index-1))]}"
    }
QPKGs.ScNtStandalone.Init()
    {
    _obj_qpkgs_scntstandalone_size_=0
    _obj_qpkgs_scntstandalone_array_=()
    _obj_qpkgs_scntstandalone_array_index_=1
    }
QPKGs.ScNtStandalone.IsAny()
    {
    [[ ${#_obj_qpkgs_scntstandalone_array_[@]} -gt 0 ]]
    }
QPKGs.ScNtStandalone.IsNone()
    {
    [[ ${#_obj_qpkgs_scntstandalone_array_[@]} -eq 0 ]]
    }
QPKGs.ScNtStandalone.List()
    {
    echo -n "${_obj_qpkgs_scntstandalone_array_[*]+"${_obj_qpkgs_scntstandalone_array_[@]}"}"
    }
QPKGs.ScNtStandalone.ListCSV()
    {
    echo -n "${_obj_qpkgs_scntstandalone_array_[*]+"${_obj_qpkgs_scntstandalone_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScNtStandalone.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scntstandalone_array_[@]+"${_obj_qpkgs_scntstandalone_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scntstandalone_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scntstandalone_array_[*]+"${_obj_qpkgs_scntstandalone_array_[@]}"} ]] && _obj_qpkgs_scntstandalone_array_=()
    }
QPKGs.ScNtStandalone.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scntstandalone_size_=$2
    else
        echo -n $_obj_qpkgs_scntstandalone_size_
    fi
    }
QPKGs.ScNtStandalone.Init

QPKGs.ScSupportBackup.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scsupportbackup_array_[*]+"${_obj_qpkgs_scsupportbackup_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scsupportbackup_array_+=("$item")
        fi
    done
    }
QPKGs.ScSupportBackup.Array()
    {
    echo -n "${_obj_qpkgs_scsupportbackup_array_[@]+"${_obj_qpkgs_scsupportbackup_array_[@]}"}"
    }
QPKGs.ScSupportBackup.Count()
    {
    echo "${#_obj_qpkgs_scsupportbackup_array_[@]}"
    }
QPKGs.ScSupportBackup.Exist()
    {
    [[ ${_obj_qpkgs_scsupportbackup_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScSupportBackup.First()
    {
    echo "${_obj_qpkgs_scsupportbackup_array_[0]}"
    }
QPKGs.ScSupportBackup.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scsupportbackup_array_[@]} ]] && index=${#_obj_qpkgs_scsupportbackup_array_[@]}
    echo -n "${_obj_qpkgs_scsupportbackup_array_[((index-1))]}"
    }
QPKGs.ScSupportBackup.Init()
    {
    _obj_qpkgs_scsupportbackup_size_=0
    _obj_qpkgs_scsupportbackup_array_=()
    _obj_qpkgs_scsupportbackup_array_index_=1
    }
QPKGs.ScSupportBackup.IsAny()
    {
    [[ ${#_obj_qpkgs_scsupportbackup_array_[@]} -gt 0 ]]
    }
QPKGs.ScSupportBackup.IsNone()
    {
    [[ ${#_obj_qpkgs_scsupportbackup_array_[@]} -eq 0 ]]
    }
QPKGs.ScSupportBackup.List()
    {
    echo -n "${_obj_qpkgs_scsupportbackup_array_[*]+"${_obj_qpkgs_scsupportbackup_array_[@]}"}"
    }
QPKGs.ScSupportBackup.ListCSV()
    {
    echo -n "${_obj_qpkgs_scsupportbackup_array_[*]+"${_obj_qpkgs_scsupportbackup_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScSupportBackup.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scsupportbackup_array_[@]+"${_obj_qpkgs_scsupportbackup_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scsupportbackup_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scsupportbackup_array_[*]+"${_obj_qpkgs_scsupportbackup_array_[@]}"} ]] && _obj_qpkgs_scsupportbackup_array_=()
    }
QPKGs.ScSupportBackup.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scsupportbackup_size_=$2
    else
        echo -n $_obj_qpkgs_scsupportbackup_size_
    fi
    }
QPKGs.ScSupportBackup.Init

QPKGs.ScNtSupportBackup.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scntsupportbackup_array_[*]+"${_obj_qpkgs_scntsupportbackup_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scntsupportbackup_array_+=("$item")
        fi
    done
    }
QPKGs.ScNtSupportBackup.Array()
    {
    echo -n "${_obj_qpkgs_scntsupportbackup_array_[@]+"${_obj_qpkgs_scntsupportbackup_array_[@]}"}"
    }
QPKGs.ScNtSupportBackup.Count()
    {
    echo "${#_obj_qpkgs_scntsupportbackup_array_[@]}"
    }
QPKGs.ScNtSupportBackup.Exist()
    {
    [[ ${_obj_qpkgs_scntsupportbackup_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScNtSupportBackup.First()
    {
    echo "${_obj_qpkgs_scntsupportbackup_array_[0]}"
    }
QPKGs.ScNtSupportBackup.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scntsupportbackup_array_[@]} ]] && index=${#_obj_qpkgs_scntsupportbackup_array_[@]}
    echo -n "${_obj_qpkgs_scntsupportbackup_array_[((index-1))]}"
    }
QPKGs.ScNtSupportBackup.Init()
    {
    _obj_qpkgs_scntsupportbackup_size_=0
    _obj_qpkgs_scntsupportbackup_array_=()
    _obj_qpkgs_scntsupportbackup_array_index_=1
    }
QPKGs.ScNtSupportBackup.IsAny()
    {
    [[ ${#_obj_qpkgs_scntsupportbackup_array_[@]} -gt 0 ]]
    }
QPKGs.ScNtSupportBackup.IsNone()
    {
    [[ ${#_obj_qpkgs_scntsupportbackup_array_[@]} -eq 0 ]]
    }
QPKGs.ScNtSupportBackup.List()
    {
    echo -n "${_obj_qpkgs_scntsupportbackup_array_[*]+"${_obj_qpkgs_scntsupportbackup_array_[@]}"}"
    }
QPKGs.ScNtSupportBackup.ListCSV()
    {
    echo -n "${_obj_qpkgs_scntsupportbackup_array_[*]+"${_obj_qpkgs_scntsupportbackup_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScNtSupportBackup.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scntsupportbackup_array_[@]+"${_obj_qpkgs_scntsupportbackup_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scntsupportbackup_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scntsupportbackup_array_[*]+"${_obj_qpkgs_scntsupportbackup_array_[@]}"} ]] && _obj_qpkgs_scntsupportbackup_array_=()
    }
QPKGs.ScNtSupportBackup.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scntsupportbackup_size_=$2
    else
        echo -n $_obj_qpkgs_scntsupportbackup_size_
    fi
    }
QPKGs.ScNtSupportBackup.Init

QPKGs.ScSupportUpdateOnRestart.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scsupportupdateonrestart_array_[*]+"${_obj_qpkgs_scsupportupdateonrestart_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scsupportupdateonrestart_array_+=("$item")
        fi
    done
    }
QPKGs.ScSupportUpdateOnRestart.Array()
    {
    echo -n "${_obj_qpkgs_scsupportupdateonrestart_array_[@]+"${_obj_qpkgs_scsupportupdateonrestart_array_[@]}"}"
    }
QPKGs.ScSupportUpdateOnRestart.Count()
    {
    echo "${#_obj_qpkgs_scsupportupdateonrestart_array_[@]}"
    }
QPKGs.ScSupportUpdateOnRestart.Exist()
    {
    [[ ${_obj_qpkgs_scsupportupdateonrestart_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScSupportUpdateOnRestart.First()
    {
    echo "${_obj_qpkgs_scsupportupdateonrestart_array_[0]}"
    }
QPKGs.ScSupportUpdateOnRestart.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scsupportupdateonrestart_array_[@]} ]] && index=${#_obj_qpkgs_scsupportupdateonrestart_array_[@]}
    echo -n "${_obj_qpkgs_scsupportupdateonrestart_array_[((index-1))]}"
    }
QPKGs.ScSupportUpdateOnRestart.Init()
    {
    _obj_qpkgs_scsupportupdateonrestart_size_=0
    _obj_qpkgs_scsupportupdateonrestart_array_=()
    _obj_qpkgs_scsupportupdateonrestart_array_index_=1
    }
QPKGs.ScSupportUpdateOnRestart.IsAny()
    {
    [[ ${#_obj_qpkgs_scsupportupdateonrestart_array_[@]} -gt 0 ]]
    }
QPKGs.ScSupportUpdateOnRestart.IsNone()
    {
    [[ ${#_obj_qpkgs_scsupportupdateonrestart_array_[@]} -eq 0 ]]
    }
QPKGs.ScSupportUpdateOnRestart.List()
    {
    echo -n "${_obj_qpkgs_scsupportupdateonrestart_array_[*]+"${_obj_qpkgs_scsupportupdateonrestart_array_[@]}"}"
    }
QPKGs.ScSupportUpdateOnRestart.ListCSV()
    {
    echo -n "${_obj_qpkgs_scsupportupdateonrestart_array_[*]+"${_obj_qpkgs_scsupportupdateonrestart_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScSupportUpdateOnRestart.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scsupportupdateonrestart_array_[@]+"${_obj_qpkgs_scsupportupdateonrestart_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scsupportupdateonrestart_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scsupportupdateonrestart_array_[*]+"${_obj_qpkgs_scsupportupdateonrestart_array_[@]}"} ]] && _obj_qpkgs_scsupportupdateonrestart_array_=()
    }
QPKGs.ScSupportUpdateOnRestart.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scsupportupdateonrestart_size_=$2
    else
        echo -n $_obj_qpkgs_scsupportupdateonrestart_size_
    fi
    }
QPKGs.ScSupportUpdateOnRestart.Init

QPKGs.ScNtSupportUpdateOnRestart.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scntsupportupdateonrestart_array_[*]+"${_obj_qpkgs_scntsupportupdateonrestart_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scntsupportupdateonrestart_array_+=("$item")
        fi
    done
    }
QPKGs.ScNtSupportUpdateOnRestart.Array()
    {
    echo -n "${_obj_qpkgs_scntsupportupdateonrestart_array_[@]+"${_obj_qpkgs_scntsupportupdateonrestart_array_[@]}"}"
    }
QPKGs.ScNtSupportUpdateOnRestart.Count()
    {
    echo "${#_obj_qpkgs_scntsupportupdateonrestart_array_[@]}"
    }
QPKGs.ScNtSupportUpdateOnRestart.Exist()
    {
    [[ ${_obj_qpkgs_scntsupportupdateonrestart_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScNtSupportUpdateOnRestart.First()
    {
    echo "${_obj_qpkgs_scntsupportupdateonrestart_array_[0]}"
    }
QPKGs.ScNtSupportUpdateOnRestart.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scntsupportupdateonrestart_array_[@]} ]] && index=${#_obj_qpkgs_scntsupportupdateonrestart_array_[@]}
    echo -n "${_obj_qpkgs_scntsupportupdateonrestart_array_[((index-1))]}"
    }
QPKGs.ScNtSupportUpdateOnRestart.Init()
    {
    _obj_qpkgs_scntsupportupdateonrestart_size_=0
    _obj_qpkgs_scntsupportupdateonrestart_array_=()
    _obj_qpkgs_scntsupportupdateonrestart_array_index_=1
    }
QPKGs.ScNtSupportUpdateOnRestart.IsAny()
    {
    [[ ${#_obj_qpkgs_scntsupportupdateonrestart_array_[@]} -gt 0 ]]
    }
QPKGs.ScNtSupportUpdateOnRestart.IsNone()
    {
    [[ ${#_obj_qpkgs_scntsupportupdateonrestart_array_[@]} -eq 0 ]]
    }
QPKGs.ScNtSupportUpdateOnRestart.List()
    {
    echo -n "${_obj_qpkgs_scntsupportupdateonrestart_array_[*]+"${_obj_qpkgs_scntsupportupdateonrestart_array_[@]}"}"
    }
QPKGs.ScNtSupportUpdateOnRestart.ListCSV()
    {
    echo -n "${_obj_qpkgs_scntsupportupdateonrestart_array_[*]+"${_obj_qpkgs_scntsupportupdateonrestart_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScNtSupportUpdateOnRestart.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scntsupportupdateonrestart_array_[@]+"${_obj_qpkgs_scntsupportupdateonrestart_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scntsupportupdateonrestart_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scntsupportupdateonrestart_array_[*]+"${_obj_qpkgs_scntsupportupdateonrestart_array_[@]}"} ]] && _obj_qpkgs_scntsupportupdateonrestart_array_=()
    }
QPKGs.ScNtSupportUpdateOnRestart.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scntsupportupdateonrestart_size_=$2
    else
        echo -n $_obj_qpkgs_scntsupportupdateonrestart_size_
    fi
    }
QPKGs.ScNtSupportUpdateOnRestart.Init

QPKGs.ScUpgradable.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scupgradable_array_[*]+"${_obj_qpkgs_scupgradable_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scupgradable_array_+=("$item")
        fi
    done
    }
QPKGs.ScUpgradable.Array()
    {
    echo -n "${_obj_qpkgs_scupgradable_array_[@]+"${_obj_qpkgs_scupgradable_array_[@]}"}"
    }
QPKGs.ScUpgradable.Count()
    {
    echo "${#_obj_qpkgs_scupgradable_array_[@]}"
    }
QPKGs.ScUpgradable.Exist()
    {
    [[ ${_obj_qpkgs_scupgradable_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScUpgradable.First()
    {
    echo "${_obj_qpkgs_scupgradable_array_[0]}"
    }
QPKGs.ScUpgradable.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scupgradable_array_[@]} ]] && index=${#_obj_qpkgs_scupgradable_array_[@]}
    echo -n "${_obj_qpkgs_scupgradable_array_[((index-1))]}"
    }
QPKGs.ScUpgradable.Init()
    {
    _obj_qpkgs_scupgradable_size_=0
    _obj_qpkgs_scupgradable_array_=()
    _obj_qpkgs_scupgradable_array_index_=1
    }
QPKGs.ScUpgradable.IsAny()
    {
    [[ ${#_obj_qpkgs_scupgradable_array_[@]} -gt 0 ]]
    }
QPKGs.ScUpgradable.IsNone()
    {
    [[ ${#_obj_qpkgs_scupgradable_array_[@]} -eq 0 ]]
    }
QPKGs.ScUpgradable.List()
    {
    echo -n "${_obj_qpkgs_scupgradable_array_[*]+"${_obj_qpkgs_scupgradable_array_[@]}"}"
    }
QPKGs.ScUpgradable.ListCSV()
    {
    echo -n "${_obj_qpkgs_scupgradable_array_[*]+"${_obj_qpkgs_scupgradable_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScUpgradable.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scupgradable_array_[@]+"${_obj_qpkgs_scupgradable_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scupgradable_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scupgradable_array_[*]+"${_obj_qpkgs_scupgradable_array_[@]}"} ]] && _obj_qpkgs_scupgradable_array_=()
    }
QPKGs.ScUpgradable.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scupgradable_size_=$2
    else
        echo -n $_obj_qpkgs_scupgradable_size_
    fi
    }
QPKGs.ScUpgradable.Init

QPKGs.ScNtUpgradable.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_scntupgradable_array_[*]+"${_obj_qpkgs_scntupgradable_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_scntupgradable_array_+=("$item")
        fi
    done
    }
QPKGs.ScNtUpgradable.Array()
    {
    echo -n "${_obj_qpkgs_scntupgradable_array_[@]+"${_obj_qpkgs_scntupgradable_array_[@]}"}"
    }
QPKGs.ScNtUpgradable.Count()
    {
    echo "${#_obj_qpkgs_scntupgradable_array_[@]}"
    }
QPKGs.ScNtUpgradable.Exist()
    {
    [[ ${_obj_qpkgs_scntupgradable_array_[*]:-} == *"$1"* ]]
    }
QPKGs.ScNtUpgradable.First()
    {
    echo "${_obj_qpkgs_scntupgradable_array_[0]}"
    }
QPKGs.ScNtUpgradable.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_scntupgradable_array_[@]} ]] && index=${#_obj_qpkgs_scntupgradable_array_[@]}
    echo -n "${_obj_qpkgs_scntupgradable_array_[((index-1))]}"
    }
QPKGs.ScNtUpgradable.Init()
    {
    _obj_qpkgs_scntupgradable_size_=0
    _obj_qpkgs_scntupgradable_array_=()
    _obj_qpkgs_scntupgradable_array_index_=1
    }
QPKGs.ScNtUpgradable.IsAny()
    {
    [[ ${#_obj_qpkgs_scntupgradable_array_[@]} -gt 0 ]]
    }
QPKGs.ScNtUpgradable.IsNone()
    {
    [[ ${#_obj_qpkgs_scntupgradable_array_[@]} -eq 0 ]]
    }
QPKGs.ScNtUpgradable.List()
    {
    echo -n "${_obj_qpkgs_scntupgradable_array_[*]+"${_obj_qpkgs_scntupgradable_array_[@]}"}"
    }
QPKGs.ScNtUpgradable.ListCSV()
    {
    echo -n "${_obj_qpkgs_scntupgradable_array_[*]+"${_obj_qpkgs_scntupgradable_array_[@]}"}" | tr ' ' ','
    }
QPKGs.ScNtUpgradable.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_scntupgradable_array_[@]+"${_obj_qpkgs_scntupgradable_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_scntupgradable_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_scntupgradable_array_[*]+"${_obj_qpkgs_scntupgradable_array_[@]}"} ]] && _obj_qpkgs_scntupgradable_array_=()
    }
QPKGs.ScNtUpgradable.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_scntupgradable_size_=$2
    else
        echo -n $_obj_qpkgs_scntupgradable_size_
    fi
    }
QPKGs.ScNtUpgradable.Init

QPKGs.IsBackedUp.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isbackedup_array_[*]+"${_obj_qpkgs_isbackedup_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isbackedup_array_+=("$item")
        fi
    done
    }
QPKGs.IsBackedUp.Array()
    {
    echo -n "${_obj_qpkgs_isbackedup_array_[@]+"${_obj_qpkgs_isbackedup_array_[@]}"}"
    }
QPKGs.IsBackedUp.Count()
    {
    echo "${#_obj_qpkgs_isbackedup_array_[@]}"
    }
QPKGs.IsBackedUp.Exist()
    {
    [[ ${_obj_qpkgs_isbackedup_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsBackedUp.First()
    {
    echo "${_obj_qpkgs_isbackedup_array_[0]}"
    }
QPKGs.IsBackedUp.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isbackedup_array_[@]} ]] && index=${#_obj_qpkgs_isbackedup_array_[@]}
    echo -n "${_obj_qpkgs_isbackedup_array_[((index-1))]}"
    }
QPKGs.IsBackedUp.Init()
    {
    _obj_qpkgs_isbackedup_size_=0
    _obj_qpkgs_isbackedup_array_=()
    _obj_qpkgs_isbackedup_array_index_=1
    }
QPKGs.IsBackedUp.IsAny()
    {
    [[ ${#_obj_qpkgs_isbackedup_array_[@]} -gt 0 ]]
    }
QPKGs.IsBackedUp.IsNone()
    {
    [[ ${#_obj_qpkgs_isbackedup_array_[@]} -eq 0 ]]
    }
QPKGs.IsBackedUp.List()
    {
    echo -n "${_obj_qpkgs_isbackedup_array_[*]+"${_obj_qpkgs_isbackedup_array_[@]}"}"
    }
QPKGs.IsBackedUp.ListCSV()
    {
    echo -n "${_obj_qpkgs_isbackedup_array_[*]+"${_obj_qpkgs_isbackedup_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsBackedUp.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isbackedup_array_[@]+"${_obj_qpkgs_isbackedup_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isbackedup_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isbackedup_array_[*]+"${_obj_qpkgs_isbackedup_array_[@]}"} ]] && _obj_qpkgs_isbackedup_array_=()
    }
QPKGs.IsBackedUp.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isbackedup_size_=$2
    else
        echo -n $_obj_qpkgs_isbackedup_size_
    fi
    }
QPKGs.IsBackedUp.Init

QPKGs.IsNtBackedUp.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isntbackedup_array_[*]+"${_obj_qpkgs_isntbackedup_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isntbackedup_array_+=("$item")
        fi
    done
    }
QPKGs.IsNtBackedUp.Array()
    {
    echo -n "${_obj_qpkgs_isntbackedup_array_[@]+"${_obj_qpkgs_isntbackedup_array_[@]}"}"
    }
QPKGs.IsNtBackedUp.Count()
    {
    echo "${#_obj_qpkgs_isntbackedup_array_[@]}"
    }
QPKGs.IsNtBackedUp.Exist()
    {
    [[ ${_obj_qpkgs_isntbackedup_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsNtBackedUp.First()
    {
    echo "${_obj_qpkgs_isntbackedup_array_[0]}"
    }
QPKGs.IsNtBackedUp.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isntbackedup_array_[@]} ]] && index=${#_obj_qpkgs_isntbackedup_array_[@]}
    echo -n "${_obj_qpkgs_isntbackedup_array_[((index-1))]}"
    }
QPKGs.IsNtBackedUp.Init()
    {
    _obj_qpkgs_isntbackedup_size_=0
    _obj_qpkgs_isntbackedup_array_=()
    _obj_qpkgs_isntbackedup_array_index_=1
    }
QPKGs.IsNtBackedUp.IsAny()
    {
    [[ ${#_obj_qpkgs_isntbackedup_array_[@]} -gt 0 ]]
    }
QPKGs.IsNtBackedUp.IsNone()
    {
    [[ ${#_obj_qpkgs_isntbackedup_array_[@]} -eq 0 ]]
    }
QPKGs.IsNtBackedUp.List()
    {
    echo -n "${_obj_qpkgs_isntbackedup_array_[*]+"${_obj_qpkgs_isntbackedup_array_[@]}"}"
    }
QPKGs.IsNtBackedUp.ListCSV()
    {
    echo -n "${_obj_qpkgs_isntbackedup_array_[*]+"${_obj_qpkgs_isntbackedup_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsNtBackedUp.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isntbackedup_array_[@]+"${_obj_qpkgs_isntbackedup_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isntbackedup_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isntbackedup_array_[*]+"${_obj_qpkgs_isntbackedup_array_[@]}"} ]] && _obj_qpkgs_isntbackedup_array_=()
    }
QPKGs.IsNtBackedUp.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isntbackedup_size_=$2
    else
        echo -n $_obj_qpkgs_isntbackedup_size_
    fi
    }
QPKGs.IsNtBackedUp.Init

QPKGs.IsDownloaded.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isdownloaded_array_[*]+"${_obj_qpkgs_isdownloaded_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isdownloaded_array_+=("$item")
        fi
    done
    }
QPKGs.IsDownloaded.Array()
    {
    echo -n "${_obj_qpkgs_isdownloaded_array_[@]+"${_obj_qpkgs_isdownloaded_array_[@]}"}"
    }
QPKGs.IsDownloaded.Count()
    {
    echo "${#_obj_qpkgs_isdownloaded_array_[@]}"
    }
QPKGs.IsDownloaded.Exist()
    {
    [[ ${_obj_qpkgs_isdownloaded_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsDownloaded.First()
    {
    echo "${_obj_qpkgs_isdownloaded_array_[0]}"
    }
QPKGs.IsDownloaded.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isdownloaded_array_[@]} ]] && index=${#_obj_qpkgs_isdownloaded_array_[@]}
    echo -n "${_obj_qpkgs_isdownloaded_array_[((index-1))]}"
    }
QPKGs.IsDownloaded.Init()
    {
    _obj_qpkgs_isdownloaded_size_=0
    _obj_qpkgs_isdownloaded_array_=()
    _obj_qpkgs_isdownloaded_array_index_=1
    }
QPKGs.IsDownloaded.IsAny()
    {
    [[ ${#_obj_qpkgs_isdownloaded_array_[@]} -gt 0 ]]
    }
QPKGs.IsDownloaded.IsNone()
    {
    [[ ${#_obj_qpkgs_isdownloaded_array_[@]} -eq 0 ]]
    }
QPKGs.IsDownloaded.List()
    {
    echo -n "${_obj_qpkgs_isdownloaded_array_[*]+"${_obj_qpkgs_isdownloaded_array_[@]}"}"
    }
QPKGs.IsDownloaded.ListCSV()
    {
    echo -n "${_obj_qpkgs_isdownloaded_array_[*]+"${_obj_qpkgs_isdownloaded_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsDownloaded.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isdownloaded_array_[@]+"${_obj_qpkgs_isdownloaded_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isdownloaded_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isdownloaded_array_[*]+"${_obj_qpkgs_isdownloaded_array_[@]}"} ]] && _obj_qpkgs_isdownloaded_array_=()
    }
QPKGs.IsDownloaded.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isdownloaded_size_=$2
    else
        echo -n $_obj_qpkgs_isdownloaded_size_
    fi
    }
QPKGs.IsDownloaded.Init

QPKGs.IsNtDownloaded.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isntdownloaded_array_[*]+"${_obj_qpkgs_isntdownloaded_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isntdownloaded_array_+=("$item")
        fi
    done
    }
QPKGs.IsNtDownloaded.Array()
    {
    echo -n "${_obj_qpkgs_isntdownloaded_array_[@]+"${_obj_qpkgs_isntdownloaded_array_[@]}"}"
    }
QPKGs.IsNtDownloaded.Count()
    {
    echo "${#_obj_qpkgs_isntdownloaded_array_[@]}"
    }
QPKGs.IsNtDownloaded.Exist()
    {
    [[ ${_obj_qpkgs_isntdownloaded_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsNtDownloaded.First()
    {
    echo "${_obj_qpkgs_isntdownloaded_array_[0]}"
    }
QPKGs.IsNtDownloaded.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isntdownloaded_array_[@]} ]] && index=${#_obj_qpkgs_isntdownloaded_array_[@]}
    echo -n "${_obj_qpkgs_isntdownloaded_array_[((index-1))]}"
    }
QPKGs.IsNtDownloaded.Init()
    {
    _obj_qpkgs_isntdownloaded_size_=0
    _obj_qpkgs_isntdownloaded_array_=()
    _obj_qpkgs_isntdownloaded_array_index_=1
    }
QPKGs.IsNtDownloaded.IsAny()
    {
    [[ ${#_obj_qpkgs_isntdownloaded_array_[@]} -gt 0 ]]
    }
QPKGs.IsNtDownloaded.IsNone()
    {
    [[ ${#_obj_qpkgs_isntdownloaded_array_[@]} -eq 0 ]]
    }
QPKGs.IsNtDownloaded.List()
    {
    echo -n "${_obj_qpkgs_isntdownloaded_array_[*]+"${_obj_qpkgs_isntdownloaded_array_[@]}"}"
    }
QPKGs.IsNtDownloaded.ListCSV()
    {
    echo -n "${_obj_qpkgs_isntdownloaded_array_[*]+"${_obj_qpkgs_isntdownloaded_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsNtDownloaded.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isntdownloaded_array_[@]+"${_obj_qpkgs_isntdownloaded_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isntdownloaded_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isntdownloaded_array_[*]+"${_obj_qpkgs_isntdownloaded_array_[@]}"} ]] && _obj_qpkgs_isntdownloaded_array_=()
    }
QPKGs.IsNtDownloaded.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isntdownloaded_size_=$2
    else
        echo -n $_obj_qpkgs_isntdownloaded_size_
    fi
    }
QPKGs.IsNtDownloaded.Init

QPKGs.IsInstalled.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isinstalled_array_[*]+"${_obj_qpkgs_isinstalled_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isinstalled_array_+=("$item")
        fi
    done
    }
QPKGs.IsInstalled.Array()
    {
    echo -n "${_obj_qpkgs_isinstalled_array_[@]+"${_obj_qpkgs_isinstalled_array_[@]}"}"
    }
QPKGs.IsInstalled.Count()
    {
    echo "${#_obj_qpkgs_isinstalled_array_[@]}"
    }
QPKGs.IsInstalled.Exist()
    {
    [[ ${_obj_qpkgs_isinstalled_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsInstalled.First()
    {
    echo "${_obj_qpkgs_isinstalled_array_[0]}"
    }
QPKGs.IsInstalled.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isinstalled_array_[@]} ]] && index=${#_obj_qpkgs_isinstalled_array_[@]}
    echo -n "${_obj_qpkgs_isinstalled_array_[((index-1))]}"
    }
QPKGs.IsInstalled.Init()
    {
    _obj_qpkgs_isinstalled_size_=0
    _obj_qpkgs_isinstalled_array_=()
    _obj_qpkgs_isinstalled_array_index_=1
    }
QPKGs.IsInstalled.IsAny()
    {
    [[ ${#_obj_qpkgs_isinstalled_array_[@]} -gt 0 ]]
    }
QPKGs.IsInstalled.IsNone()
    {
    [[ ${#_obj_qpkgs_isinstalled_array_[@]} -eq 0 ]]
    }
QPKGs.IsInstalled.List()
    {
    echo -n "${_obj_qpkgs_isinstalled_array_[*]+"${_obj_qpkgs_isinstalled_array_[@]}"}"
    }
QPKGs.IsInstalled.ListCSV()
    {
    echo -n "${_obj_qpkgs_isinstalled_array_[*]+"${_obj_qpkgs_isinstalled_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsInstalled.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isinstalled_array_[@]+"${_obj_qpkgs_isinstalled_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isinstalled_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isinstalled_array_[*]+"${_obj_qpkgs_isinstalled_array_[@]}"} ]] && _obj_qpkgs_isinstalled_array_=()
    }
QPKGs.IsInstalled.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isinstalled_size_=$2
    else
        echo -n $_obj_qpkgs_isinstalled_size_
    fi
    }
QPKGs.IsInstalled.Init

QPKGs.IsNtInstalled.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isntinstalled_array_[*]+"${_obj_qpkgs_isntinstalled_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isntinstalled_array_+=("$item")
        fi
    done
    }
QPKGs.IsNtInstalled.Array()
    {
    echo -n "${_obj_qpkgs_isntinstalled_array_[@]+"${_obj_qpkgs_isntinstalled_array_[@]}"}"
    }
QPKGs.IsNtInstalled.Count()
    {
    echo "${#_obj_qpkgs_isntinstalled_array_[@]}"
    }
QPKGs.IsNtInstalled.Exist()
    {
    [[ ${_obj_qpkgs_isntinstalled_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsNtInstalled.First()
    {
    echo "${_obj_qpkgs_isntinstalled_array_[0]}"
    }
QPKGs.IsNtInstalled.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isntinstalled_array_[@]} ]] && index=${#_obj_qpkgs_isntinstalled_array_[@]}
    echo -n "${_obj_qpkgs_isntinstalled_array_[((index-1))]}"
    }
QPKGs.IsNtInstalled.Init()
    {
    _obj_qpkgs_isntinstalled_size_=0
    _obj_qpkgs_isntinstalled_array_=()
    _obj_qpkgs_isntinstalled_array_index_=1
    }
QPKGs.IsNtInstalled.IsAny()
    {
    [[ ${#_obj_qpkgs_isntinstalled_array_[@]} -gt 0 ]]
    }
QPKGs.IsNtInstalled.IsNone()
    {
    [[ ${#_obj_qpkgs_isntinstalled_array_[@]} -eq 0 ]]
    }
QPKGs.IsNtInstalled.List()
    {
    echo -n "${_obj_qpkgs_isntinstalled_array_[*]+"${_obj_qpkgs_isntinstalled_array_[@]}"}"
    }
QPKGs.IsNtInstalled.ListCSV()
    {
    echo -n "${_obj_qpkgs_isntinstalled_array_[*]+"${_obj_qpkgs_isntinstalled_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsNtInstalled.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isntinstalled_array_[@]+"${_obj_qpkgs_isntinstalled_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isntinstalled_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isntinstalled_array_[*]+"${_obj_qpkgs_isntinstalled_array_[@]}"} ]] && _obj_qpkgs_isntinstalled_array_=()
    }
QPKGs.IsNtInstalled.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isntinstalled_size_=$2
    else
        echo -n $_obj_qpkgs_isntinstalled_size_
    fi
    }
QPKGs.IsNtInstalled.Init

QPKGs.IsInstallable.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isinstallable_array_[*]+"${_obj_qpkgs_isinstallable_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isinstallable_array_+=("$item")
        fi
    done
    }
QPKGs.IsInstallable.Array()
    {
    echo -n "${_obj_qpkgs_isinstallable_array_[@]+"${_obj_qpkgs_isinstallable_array_[@]}"}"
    }
QPKGs.IsInstallable.Count()
    {
    echo "${#_obj_qpkgs_isinstallable_array_[@]}"
    }
QPKGs.IsInstallable.Exist()
    {
    [[ ${_obj_qpkgs_isinstallable_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsInstallable.First()
    {
    echo "${_obj_qpkgs_isinstallable_array_[0]}"
    }
QPKGs.IsInstallable.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isinstallable_array_[@]} ]] && index=${#_obj_qpkgs_isinstallable_array_[@]}
    echo -n "${_obj_qpkgs_isinstallable_array_[((index-1))]}"
    }
QPKGs.IsInstallable.Init()
    {
    _obj_qpkgs_isinstallable_size_=0
    _obj_qpkgs_isinstallable_array_=()
    _obj_qpkgs_isinstallable_array_index_=1
    }
QPKGs.IsInstallable.IsAny()
    {
    [[ ${#_obj_qpkgs_isinstallable_array_[@]} -gt 0 ]]
    }
QPKGs.IsInstallable.IsNone()
    {
    [[ ${#_obj_qpkgs_isinstallable_array_[@]} -eq 0 ]]
    }
QPKGs.IsInstallable.List()
    {
    echo -n "${_obj_qpkgs_isinstallable_array_[*]+"${_obj_qpkgs_isinstallable_array_[@]}"}"
    }
QPKGs.IsInstallable.ListCSV()
    {
    echo -n "${_obj_qpkgs_isinstallable_array_[*]+"${_obj_qpkgs_isinstallable_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsInstallable.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isinstallable_array_[@]+"${_obj_qpkgs_isinstallable_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isinstallable_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isinstallable_array_[*]+"${_obj_qpkgs_isinstallable_array_[@]}"} ]] && _obj_qpkgs_isinstallable_array_=()
    }
QPKGs.IsInstallable.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isinstallable_size_=$2
    else
        echo -n $_obj_qpkgs_isinstallable_size_
    fi
    }
QPKGs.IsInstallable.Init

QPKGs.IsNtInstallable.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isntinstallable_array_[*]+"${_obj_qpkgs_isntinstallable_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isntinstallable_array_+=("$item")
        fi
    done
    }
QPKGs.IsNtInstallable.Array()
    {
    echo -n "${_obj_qpkgs_isntinstallable_array_[@]+"${_obj_qpkgs_isntinstallable_array_[@]}"}"
    }
QPKGs.IsNtInstallable.Count()
    {
    echo "${#_obj_qpkgs_isntinstallable_array_[@]}"
    }
QPKGs.IsNtInstallable.Exist()
    {
    [[ ${_obj_qpkgs_isntinstallable_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsNtInstallable.First()
    {
    echo "${_obj_qpkgs_isntinstallable_array_[0]}"
    }
QPKGs.IsNtInstallable.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isntinstallable_array_[@]} ]] && index=${#_obj_qpkgs_isntinstallable_array_[@]}
    echo -n "${_obj_qpkgs_isntinstallable_array_[((index-1))]}"
    }
QPKGs.IsNtInstallable.Init()
    {
    _obj_qpkgs_isntinstallable_size_=0
    _obj_qpkgs_isntinstallable_array_=()
    _obj_qpkgs_isntinstallable_array_index_=1
    }
QPKGs.IsNtInstallable.IsAny()
    {
    [[ ${#_obj_qpkgs_isntinstallable_array_[@]} -gt 0 ]]
    }
QPKGs.IsNtInstallable.IsNone()
    {
    [[ ${#_obj_qpkgs_isntinstallable_array_[@]} -eq 0 ]]
    }
QPKGs.IsNtInstallable.List()
    {
    echo -n "${_obj_qpkgs_isntinstallable_array_[*]+"${_obj_qpkgs_isntinstallable_array_[@]}"}"
    }
QPKGs.IsNtInstallable.ListCSV()
    {
    echo -n "${_obj_qpkgs_isntinstallable_array_[*]+"${_obj_qpkgs_isntinstallable_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsNtInstallable.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isntinstallable_array_[@]+"${_obj_qpkgs_isntinstallable_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isntinstallable_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isntinstallable_array_[*]+"${_obj_qpkgs_isntinstallable_array_[@]}"} ]] && _obj_qpkgs_isntinstallable_array_=()
    }
QPKGs.IsNtInstallable.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isntinstallable_size_=$2
    else
        echo -n $_obj_qpkgs_isntinstallable_size_
    fi
    }
QPKGs.IsNtInstallable.Init

QPKGs.IsMissing.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_ismissing_array_[*]+"${_obj_qpkgs_ismissing_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_ismissing_array_+=("$item")
        fi
    done
    }
QPKGs.IsMissing.Array()
    {
    echo -n "${_obj_qpkgs_ismissing_array_[@]+"${_obj_qpkgs_ismissing_array_[@]}"}"
    }
QPKGs.IsMissing.Count()
    {
    echo "${#_obj_qpkgs_ismissing_array_[@]}"
    }
QPKGs.IsMissing.Exist()
    {
    [[ ${_obj_qpkgs_ismissing_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsMissing.First()
    {
    echo "${_obj_qpkgs_ismissing_array_[0]}"
    }
QPKGs.IsMissing.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_ismissing_array_[@]} ]] && index=${#_obj_qpkgs_ismissing_array_[@]}
    echo -n "${_obj_qpkgs_ismissing_array_[((index-1))]}"
    }
QPKGs.IsMissing.Init()
    {
    _obj_qpkgs_ismissing_size_=0
    _obj_qpkgs_ismissing_array_=()
    _obj_qpkgs_ismissing_array_index_=1
    }
QPKGs.IsMissing.IsAny()
    {
    [[ ${#_obj_qpkgs_ismissing_array_[@]} -gt 0 ]]
    }
QPKGs.IsMissing.IsNone()
    {
    [[ ${#_obj_qpkgs_ismissing_array_[@]} -eq 0 ]]
    }
QPKGs.IsMissing.List()
    {
    echo -n "${_obj_qpkgs_ismissing_array_[*]+"${_obj_qpkgs_ismissing_array_[@]}"}"
    }
QPKGs.IsMissing.ListCSV()
    {
    echo -n "${_obj_qpkgs_ismissing_array_[*]+"${_obj_qpkgs_ismissing_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsMissing.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_ismissing_array_[@]+"${_obj_qpkgs_ismissing_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_ismissing_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_ismissing_array_[*]+"${_obj_qpkgs_ismissing_array_[@]}"} ]] && _obj_qpkgs_ismissing_array_=()
    }
QPKGs.IsMissing.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_ismissing_size_=$2
    else
        echo -n $_obj_qpkgs_ismissing_size_
    fi
    }
QPKGs.IsMissing.Init

QPKGs.IsNtMissing.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isntmissing_array_[*]+"${_obj_qpkgs_isntmissing_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isntmissing_array_+=("$item")
        fi
    done
    }
QPKGs.IsNtMissing.Array()
    {
    echo -n "${_obj_qpkgs_isntmissing_array_[@]+"${_obj_qpkgs_isntmissing_array_[@]}"}"
    }
QPKGs.IsNtMissing.Count()
    {
    echo "${#_obj_qpkgs_isntmissing_array_[@]}"
    }
QPKGs.IsNtMissing.Exist()
    {
    [[ ${_obj_qpkgs_isntmissing_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsNtMissing.First()
    {
    echo "${_obj_qpkgs_isntmissing_array_[0]}"
    }
QPKGs.IsNtMissing.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isntmissing_array_[@]} ]] && index=${#_obj_qpkgs_isntmissing_array_[@]}
    echo -n "${_obj_qpkgs_isntmissing_array_[((index-1))]}"
    }
QPKGs.IsNtMissing.Init()
    {
    _obj_qpkgs_isntmissing_size_=0
    _obj_qpkgs_isntmissing_array_=()
    _obj_qpkgs_isntmissing_array_index_=1
    }
QPKGs.IsNtMissing.IsAny()
    {
    [[ ${#_obj_qpkgs_isntmissing_array_[@]} -gt 0 ]]
    }
QPKGs.IsNtMissing.IsNone()
    {
    [[ ${#_obj_qpkgs_isntmissing_array_[@]} -eq 0 ]]
    }
QPKGs.IsNtMissing.List()
    {
    echo -n "${_obj_qpkgs_isntmissing_array_[*]+"${_obj_qpkgs_isntmissing_array_[@]}"}"
    }
QPKGs.IsNtMissing.ListCSV()
    {
    echo -n "${_obj_qpkgs_isntmissing_array_[*]+"${_obj_qpkgs_isntmissing_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsNtMissing.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isntmissing_array_[@]+"${_obj_qpkgs_isntmissing_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isntmissing_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isntmissing_array_[*]+"${_obj_qpkgs_isntmissing_array_[@]}"} ]] && _obj_qpkgs_isntmissing_array_=()
    }
QPKGs.IsNtMissing.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isntmissing_size_=$2
    else
        echo -n $_obj_qpkgs_isntmissing_size_
    fi
    }
QPKGs.IsNtMissing.Init

QPKGs.IsStarting.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isstarting_array_[*]+"${_obj_qpkgs_isstarting_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isstarting_array_+=("$item")
        fi
    done
    }
QPKGs.IsStarting.Array()
    {
    echo -n "${_obj_qpkgs_isstarting_array_[@]+"${_obj_qpkgs_isstarting_array_[@]}"}"
    }
QPKGs.IsStarting.Count()
    {
    echo "${#_obj_qpkgs_isstarting_array_[@]}"
    }
QPKGs.IsStarting.Exist()
    {
    [[ ${_obj_qpkgs_isstarting_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsStarting.First()
    {
    echo "${_obj_qpkgs_isstarting_array_[0]}"
    }
QPKGs.IsStarting.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isstarting_array_[@]} ]] && index=${#_obj_qpkgs_isstarting_array_[@]}
    echo -n "${_obj_qpkgs_isstarting_array_[((index-1))]}"
    }
QPKGs.IsStarting.Init()
    {
    _obj_qpkgs_isstarting_size_=0
    _obj_qpkgs_isstarting_array_=()
    _obj_qpkgs_isstarting_array_index_=1
    }
QPKGs.IsStarting.IsAny()
    {
    [[ ${#_obj_qpkgs_isstarting_array_[@]} -gt 0 ]]
    }
QPKGs.IsStarting.IsNone()
    {
    [[ ${#_obj_qpkgs_isstarting_array_[@]} -eq 0 ]]
    }
QPKGs.IsStarting.List()
    {
    echo -n "${_obj_qpkgs_isstarting_array_[*]+"${_obj_qpkgs_isstarting_array_[@]}"}"
    }
QPKGs.IsStarting.ListCSV()
    {
    echo -n "${_obj_qpkgs_isstarting_array_[*]+"${_obj_qpkgs_isstarting_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsStarting.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isstarting_array_[@]+"${_obj_qpkgs_isstarting_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isstarting_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isstarting_array_[*]+"${_obj_qpkgs_isstarting_array_[@]}"} ]] && _obj_qpkgs_isstarting_array_=()
    }
QPKGs.IsStarting.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isstarting_size_=$2
    else
        echo -n $_obj_qpkgs_isstarting_size_
    fi
    }
QPKGs.IsStarting.Init

QPKGs.IsNtStarting.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isntstarting_array_[*]+"${_obj_qpkgs_isntstarting_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isntstarting_array_+=("$item")
        fi
    done
    }
QPKGs.IsNtStarting.Array()
    {
    echo -n "${_obj_qpkgs_isntstarting_array_[@]+"${_obj_qpkgs_isntstarting_array_[@]}"}"
    }
QPKGs.IsNtStarting.Count()
    {
    echo "${#_obj_qpkgs_isntstarting_array_[@]}"
    }
QPKGs.IsNtStarting.Exist()
    {
    [[ ${_obj_qpkgs_isntstarting_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsNtStarting.First()
    {
    echo "${_obj_qpkgs_isntstarting_array_[0]}"
    }
QPKGs.IsNtStarting.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isntstarting_array_[@]} ]] && index=${#_obj_qpkgs_isntstarting_array_[@]}
    echo -n "${_obj_qpkgs_isntstarting_array_[((index-1))]}"
    }
QPKGs.IsNtStarting.Init()
    {
    _obj_qpkgs_isntstarting_size_=0
    _obj_qpkgs_isntstarting_array_=()
    _obj_qpkgs_isntstarting_array_index_=1
    }
QPKGs.IsNtStarting.IsAny()
    {
    [[ ${#_obj_qpkgs_isntstarting_array_[@]} -gt 0 ]]
    }
QPKGs.IsNtStarting.IsNone()
    {
    [[ ${#_obj_qpkgs_isntstarting_array_[@]} -eq 0 ]]
    }
QPKGs.IsNtStarting.List()
    {
    echo -n "${_obj_qpkgs_isntstarting_array_[*]+"${_obj_qpkgs_isntstarting_array_[@]}"}"
    }
QPKGs.IsNtStarting.ListCSV()
    {
    echo -n "${_obj_qpkgs_isntstarting_array_[*]+"${_obj_qpkgs_isntstarting_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsNtStarting.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isntstarting_array_[@]+"${_obj_qpkgs_isntstarting_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isntstarting_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isntstarting_array_[*]+"${_obj_qpkgs_isntstarting_array_[@]}"} ]] && _obj_qpkgs_isntstarting_array_=()
    }
QPKGs.IsNtStarting.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isntstarting_size_=$2
    else
        echo -n $_obj_qpkgs_isntstarting_size_
    fi
    }
QPKGs.IsNtStarting.Init

QPKGs.IsStarted.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isstarted_array_[*]+"${_obj_qpkgs_isstarted_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isstarted_array_+=("$item")
        fi
    done
    }
QPKGs.IsStarted.Array()
    {
    echo -n "${_obj_qpkgs_isstarted_array_[@]+"${_obj_qpkgs_isstarted_array_[@]}"}"
    }
QPKGs.IsStarted.Count()
    {
    echo "${#_obj_qpkgs_isstarted_array_[@]}"
    }
QPKGs.IsStarted.Exist()
    {
    [[ ${_obj_qpkgs_isstarted_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsStarted.First()
    {
    echo "${_obj_qpkgs_isstarted_array_[0]}"
    }
QPKGs.IsStarted.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isstarted_array_[@]} ]] && index=${#_obj_qpkgs_isstarted_array_[@]}
    echo -n "${_obj_qpkgs_isstarted_array_[((index-1))]}"
    }
QPKGs.IsStarted.Init()
    {
    _obj_qpkgs_isstarted_size_=0
    _obj_qpkgs_isstarted_array_=()
    _obj_qpkgs_isstarted_array_index_=1
    }
QPKGs.IsStarted.IsAny()
    {
    [[ ${#_obj_qpkgs_isstarted_array_[@]} -gt 0 ]]
    }
QPKGs.IsStarted.IsNone()
    {
    [[ ${#_obj_qpkgs_isstarted_array_[@]} -eq 0 ]]
    }
QPKGs.IsStarted.List()
    {
    echo -n "${_obj_qpkgs_isstarted_array_[*]+"${_obj_qpkgs_isstarted_array_[@]}"}"
    }
QPKGs.IsStarted.ListCSV()
    {
    echo -n "${_obj_qpkgs_isstarted_array_[*]+"${_obj_qpkgs_isstarted_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsStarted.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isstarted_array_[@]+"${_obj_qpkgs_isstarted_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isstarted_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isstarted_array_[*]+"${_obj_qpkgs_isstarted_array_[@]}"} ]] && _obj_qpkgs_isstarted_array_=()
    }
QPKGs.IsStarted.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isstarted_size_=$2
    else
        echo -n $_obj_qpkgs_isstarted_size_
    fi
    }
QPKGs.IsStarted.Init

QPKGs.IsNtStarted.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isntstarted_array_[*]+"${_obj_qpkgs_isntstarted_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isntstarted_array_+=("$item")
        fi
    done
    }
QPKGs.IsNtStarted.Array()
    {
    echo -n "${_obj_qpkgs_isntstarted_array_[@]+"${_obj_qpkgs_isntstarted_array_[@]}"}"
    }
QPKGs.IsNtStarted.Count()
    {
    echo "${#_obj_qpkgs_isntstarted_array_[@]}"
    }
QPKGs.IsNtStarted.Exist()
    {
    [[ ${_obj_qpkgs_isntstarted_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsNtStarted.First()
    {
    echo "${_obj_qpkgs_isntstarted_array_[0]}"
    }
QPKGs.IsNtStarted.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isntstarted_array_[@]} ]] && index=${#_obj_qpkgs_isntstarted_array_[@]}
    echo -n "${_obj_qpkgs_isntstarted_array_[((index-1))]}"
    }
QPKGs.IsNtStarted.Init()
    {
    _obj_qpkgs_isntstarted_size_=0
    _obj_qpkgs_isntstarted_array_=()
    _obj_qpkgs_isntstarted_array_index_=1
    }
QPKGs.IsNtStarted.IsAny()
    {
    [[ ${#_obj_qpkgs_isntstarted_array_[@]} -gt 0 ]]
    }
QPKGs.IsNtStarted.IsNone()
    {
    [[ ${#_obj_qpkgs_isntstarted_array_[@]} -eq 0 ]]
    }
QPKGs.IsNtStarted.List()
    {
    echo -n "${_obj_qpkgs_isntstarted_array_[*]+"${_obj_qpkgs_isntstarted_array_[@]}"}"
    }
QPKGs.IsNtStarted.ListCSV()
    {
    echo -n "${_obj_qpkgs_isntstarted_array_[*]+"${_obj_qpkgs_isntstarted_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsNtStarted.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isntstarted_array_[@]+"${_obj_qpkgs_isntstarted_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isntstarted_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isntstarted_array_[*]+"${_obj_qpkgs_isntstarted_array_[@]}"} ]] && _obj_qpkgs_isntstarted_array_=()
    }
QPKGs.IsNtStarted.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isntstarted_size_=$2
    else
        echo -n $_obj_qpkgs_isntstarted_size_
    fi
    }
QPKGs.IsNtStarted.Init

QPKGs.IsStopping.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isstopping_array_[*]+"${_obj_qpkgs_isstopping_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isstopping_array_+=("$item")
        fi
    done
    }
QPKGs.IsStopping.Array()
    {
    echo -n "${_obj_qpkgs_isstopping_array_[@]+"${_obj_qpkgs_isstopping_array_[@]}"}"
    }
QPKGs.IsStopping.Count()
    {
    echo "${#_obj_qpkgs_isstopping_array_[@]}"
    }
QPKGs.IsStopping.Exist()
    {
    [[ ${_obj_qpkgs_isstopping_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsStopping.First()
    {
    echo "${_obj_qpkgs_isstopping_array_[0]}"
    }
QPKGs.IsStopping.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isstopping_array_[@]} ]] && index=${#_obj_qpkgs_isstopping_array_[@]}
    echo -n "${_obj_qpkgs_isstopping_array_[((index-1))]}"
    }
QPKGs.IsStopping.Init()
    {
    _obj_qpkgs_isstopping_size_=0
    _obj_qpkgs_isstopping_array_=()
    _obj_qpkgs_isstopping_array_index_=1
    }
QPKGs.IsStopping.IsAny()
    {
    [[ ${#_obj_qpkgs_isstopping_array_[@]} -gt 0 ]]
    }
QPKGs.IsStopping.IsNone()
    {
    [[ ${#_obj_qpkgs_isstopping_array_[@]} -eq 0 ]]
    }
QPKGs.IsStopping.List()
    {
    echo -n "${_obj_qpkgs_isstopping_array_[*]+"${_obj_qpkgs_isstopping_array_[@]}"}"
    }
QPKGs.IsStopping.ListCSV()
    {
    echo -n "${_obj_qpkgs_isstopping_array_[*]+"${_obj_qpkgs_isstopping_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsStopping.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isstopping_array_[@]+"${_obj_qpkgs_isstopping_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isstopping_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isstopping_array_[*]+"${_obj_qpkgs_isstopping_array_[@]}"} ]] && _obj_qpkgs_isstopping_array_=()
    }
QPKGs.IsStopping.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isstopping_size_=$2
    else
        echo -n $_obj_qpkgs_isstopping_size_
    fi
    }
QPKGs.IsStopping.Init

QPKGs.IsNtStopping.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isntstopping_array_[*]+"${_obj_qpkgs_isntstopping_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isntstopping_array_+=("$item")
        fi
    done
    }
QPKGs.IsNtStopping.Array()
    {
    echo -n "${_obj_qpkgs_isntstopping_array_[@]+"${_obj_qpkgs_isntstopping_array_[@]}"}"
    }
QPKGs.IsNtStopping.Count()
    {
    echo "${#_obj_qpkgs_isntstopping_array_[@]}"
    }
QPKGs.IsNtStopping.Exist()
    {
    [[ ${_obj_qpkgs_isntstopping_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsNtStopping.First()
    {
    echo "${_obj_qpkgs_isntstopping_array_[0]}"
    }
QPKGs.IsNtStopping.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isntstopping_array_[@]} ]] && index=${#_obj_qpkgs_isntstopping_array_[@]}
    echo -n "${_obj_qpkgs_isntstopping_array_[((index-1))]}"
    }
QPKGs.IsNtStopping.Init()
    {
    _obj_qpkgs_isntstopping_size_=0
    _obj_qpkgs_isntstopping_array_=()
    _obj_qpkgs_isntstopping_array_index_=1
    }
QPKGs.IsNtStopping.IsAny()
    {
    [[ ${#_obj_qpkgs_isntstopping_array_[@]} -gt 0 ]]
    }
QPKGs.IsNtStopping.IsNone()
    {
    [[ ${#_obj_qpkgs_isntstopping_array_[@]} -eq 0 ]]
    }
QPKGs.IsNtStopping.List()
    {
    echo -n "${_obj_qpkgs_isntstopping_array_[*]+"${_obj_qpkgs_isntstopping_array_[@]}"}"
    }
QPKGs.IsNtStopping.ListCSV()
    {
    echo -n "${_obj_qpkgs_isntstopping_array_[*]+"${_obj_qpkgs_isntstopping_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsNtStopping.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isntstopping_array_[@]+"${_obj_qpkgs_isntstopping_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isntstopping_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isntstopping_array_[*]+"${_obj_qpkgs_isntstopping_array_[@]}"} ]] && _obj_qpkgs_isntstopping_array_=()
    }
QPKGs.IsNtStopping.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isntstopping_size_=$2
    else
        echo -n $_obj_qpkgs_isntstopping_size_
    fi
    }
QPKGs.IsNtStopping.Init

QPKGs.IsStopped.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isstopped_array_[*]+"${_obj_qpkgs_isstopped_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isstopped_array_+=("$item")
        fi
    done
    }
QPKGs.IsStopped.Array()
    {
    echo -n "${_obj_qpkgs_isstopped_array_[@]+"${_obj_qpkgs_isstopped_array_[@]}"}"
    }
QPKGs.IsStopped.Count()
    {
    echo "${#_obj_qpkgs_isstopped_array_[@]}"
    }
QPKGs.IsStopped.Exist()
    {
    [[ ${_obj_qpkgs_isstopped_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsStopped.First()
    {
    echo "${_obj_qpkgs_isstopped_array_[0]}"
    }
QPKGs.IsStopped.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isstopped_array_[@]} ]] && index=${#_obj_qpkgs_isstopped_array_[@]}
    echo -n "${_obj_qpkgs_isstopped_array_[((index-1))]}"
    }
QPKGs.IsStopped.Init()
    {
    _obj_qpkgs_isstopped_size_=0
    _obj_qpkgs_isstopped_array_=()
    _obj_qpkgs_isstopped_array_index_=1
    }
QPKGs.IsStopped.IsAny()
    {
    [[ ${#_obj_qpkgs_isstopped_array_[@]} -gt 0 ]]
    }
QPKGs.IsStopped.IsNone()
    {
    [[ ${#_obj_qpkgs_isstopped_array_[@]} -eq 0 ]]
    }
QPKGs.IsStopped.List()
    {
    echo -n "${_obj_qpkgs_isstopped_array_[*]+"${_obj_qpkgs_isstopped_array_[@]}"}"
    }
QPKGs.IsStopped.ListCSV()
    {
    echo -n "${_obj_qpkgs_isstopped_array_[*]+"${_obj_qpkgs_isstopped_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsStopped.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isstopped_array_[@]+"${_obj_qpkgs_isstopped_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isstopped_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isstopped_array_[*]+"${_obj_qpkgs_isstopped_array_[@]}"} ]] && _obj_qpkgs_isstopped_array_=()
    }
QPKGs.IsStopped.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isstopped_size_=$2
    else
        echo -n $_obj_qpkgs_isstopped_size_
    fi
    }
QPKGs.IsStopped.Init

QPKGs.IsNtStopped.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isntstopped_array_[*]+"${_obj_qpkgs_isntstopped_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isntstopped_array_+=("$item")
        fi
    done
    }
QPKGs.IsNtStopped.Array()
    {
    echo -n "${_obj_qpkgs_isntstopped_array_[@]+"${_obj_qpkgs_isntstopped_array_[@]}"}"
    }
QPKGs.IsNtStopped.Count()
    {
    echo "${#_obj_qpkgs_isntstopped_array_[@]}"
    }
QPKGs.IsNtStopped.Exist()
    {
    [[ ${_obj_qpkgs_isntstopped_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsNtStopped.First()
    {
    echo "${_obj_qpkgs_isntstopped_array_[0]}"
    }
QPKGs.IsNtStopped.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isntstopped_array_[@]} ]] && index=${#_obj_qpkgs_isntstopped_array_[@]}
    echo -n "${_obj_qpkgs_isntstopped_array_[((index-1))]}"
    }
QPKGs.IsNtStopped.Init()
    {
    _obj_qpkgs_isntstopped_size_=0
    _obj_qpkgs_isntstopped_array_=()
    _obj_qpkgs_isntstopped_array_index_=1
    }
QPKGs.IsNtStopped.IsAny()
    {
    [[ ${#_obj_qpkgs_isntstopped_array_[@]} -gt 0 ]]
    }
QPKGs.IsNtStopped.IsNone()
    {
    [[ ${#_obj_qpkgs_isntstopped_array_[@]} -eq 0 ]]
    }
QPKGs.IsNtStopped.List()
    {
    echo -n "${_obj_qpkgs_isntstopped_array_[*]+"${_obj_qpkgs_isntstopped_array_[@]}"}"
    }
QPKGs.IsNtStopped.ListCSV()
    {
    echo -n "${_obj_qpkgs_isntstopped_array_[*]+"${_obj_qpkgs_isntstopped_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsNtStopped.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isntstopped_array_[@]+"${_obj_qpkgs_isntstopped_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isntstopped_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isntstopped_array_[*]+"${_obj_qpkgs_isntstopped_array_[@]}"} ]] && _obj_qpkgs_isntstopped_array_=()
    }
QPKGs.IsNtStopped.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isntstopped_size_=$2
    else
        echo -n $_obj_qpkgs_isntstopped_size_
    fi
    }
QPKGs.IsNtStopped.Init

QPKGs.IsRestarting.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isrestarting_array_[*]+"${_obj_qpkgs_isrestarting_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isrestarting_array_+=("$item")
        fi
    done
    }
QPKGs.IsRestarting.Array()
    {
    echo -n "${_obj_qpkgs_isrestarting_array_[@]+"${_obj_qpkgs_isrestarting_array_[@]}"}"
    }
QPKGs.IsRestarting.Count()
    {
    echo "${#_obj_qpkgs_isrestarting_array_[@]}"
    }
QPKGs.IsRestarting.Exist()
    {
    [[ ${_obj_qpkgs_isrestarting_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsRestarting.First()
    {
    echo "${_obj_qpkgs_isrestarting_array_[0]}"
    }
QPKGs.IsRestarting.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isrestarting_array_[@]} ]] && index=${#_obj_qpkgs_isrestarting_array_[@]}
    echo -n "${_obj_qpkgs_isrestarting_array_[((index-1))]}"
    }
QPKGs.IsRestarting.Init()
    {
    _obj_qpkgs_isrestarting_size_=0
    _obj_qpkgs_isrestarting_array_=()
    _obj_qpkgs_isrestarting_array_index_=1
    }
QPKGs.IsRestarting.IsAny()
    {
    [[ ${#_obj_qpkgs_isrestarting_array_[@]} -gt 0 ]]
    }
QPKGs.IsRestarting.IsNone()
    {
    [[ ${#_obj_qpkgs_isrestarting_array_[@]} -eq 0 ]]
    }
QPKGs.IsRestarting.List()
    {
    echo -n "${_obj_qpkgs_isrestarting_array_[*]+"${_obj_qpkgs_isrestarting_array_[@]}"}"
    }
QPKGs.IsRestarting.ListCSV()
    {
    echo -n "${_obj_qpkgs_isrestarting_array_[*]+"${_obj_qpkgs_isrestarting_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsRestarting.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isrestarting_array_[@]+"${_obj_qpkgs_isrestarting_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isrestarting_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isrestarting_array_[*]+"${_obj_qpkgs_isrestarting_array_[@]}"} ]] && _obj_qpkgs_isrestarting_array_=()
    }
QPKGs.IsRestarting.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isrestarting_size_=$2
    else
        echo -n $_obj_qpkgs_isrestarting_size_
    fi
    }
QPKGs.IsRestarting.Init

QPKGs.IsNtRestarting.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_isntrestarting_array_[*]+"${_obj_qpkgs_isntrestarting_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_isntrestarting_array_+=("$item")
        fi
    done
    }
QPKGs.IsNtRestarting.Array()
    {
    echo -n "${_obj_qpkgs_isntrestarting_array_[@]+"${_obj_qpkgs_isntrestarting_array_[@]}"}"
    }
QPKGs.IsNtRestarting.Count()
    {
    echo "${#_obj_qpkgs_isntrestarting_array_[@]}"
    }
QPKGs.IsNtRestarting.Exist()
    {
    [[ ${_obj_qpkgs_isntrestarting_array_[*]:-} == *"$1"* ]]
    }
QPKGs.IsNtRestarting.First()
    {
    echo "${_obj_qpkgs_isntrestarting_array_[0]}"
    }
QPKGs.IsNtRestarting.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_isntrestarting_array_[@]} ]] && index=${#_obj_qpkgs_isntrestarting_array_[@]}
    echo -n "${_obj_qpkgs_isntrestarting_array_[((index-1))]}"
    }
QPKGs.IsNtRestarting.Init()
    {
    _obj_qpkgs_isntrestarting_size_=0
    _obj_qpkgs_isntrestarting_array_=()
    _obj_qpkgs_isntrestarting_array_index_=1
    }
QPKGs.IsNtRestarting.IsAny()
    {
    [[ ${#_obj_qpkgs_isntrestarting_array_[@]} -gt 0 ]]
    }
QPKGs.IsNtRestarting.IsNone()
    {
    [[ ${#_obj_qpkgs_isntrestarting_array_[@]} -eq 0 ]]
    }
QPKGs.IsNtRestarting.List()
    {
    echo -n "${_obj_qpkgs_isntrestarting_array_[*]+"${_obj_qpkgs_isntrestarting_array_[@]}"}"
    }
QPKGs.IsNtRestarting.ListCSV()
    {
    echo -n "${_obj_qpkgs_isntrestarting_array_[*]+"${_obj_qpkgs_isntrestarting_array_[@]}"}" | tr ' ' ','
    }
QPKGs.IsNtRestarting.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_isntrestarting_array_[@]+"${_obj_qpkgs_isntrestarting_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_isntrestarting_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_isntrestarting_array_[*]+"${_obj_qpkgs_isntrestarting_array_[@]}"} ]] && _obj_qpkgs_isntrestarting_array_=()
    }
QPKGs.IsNtRestarting.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_isntrestarting_size_=$2
    else
        echo -n $_obj_qpkgs_isntrestarting_size_
    fi
    }
QPKGs.IsNtRestarting.Init

QPKGs.OpToBackup.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_optobackup_array_[*]+"${_obj_qpkgs_optobackup_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_optobackup_array_+=("$item")
        fi
    done
    }
QPKGs.OpToBackup.Array()
    {
    echo -n "${_obj_qpkgs_optobackup_array_[@]+"${_obj_qpkgs_optobackup_array_[@]}"}"
    }
QPKGs.OpToBackup.Count()
    {
    echo "${#_obj_qpkgs_optobackup_array_[@]}"
    }
QPKGs.OpToBackup.Exist()
    {
    [[ ${_obj_qpkgs_optobackup_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpToBackup.First()
    {
    echo "${_obj_qpkgs_optobackup_array_[0]}"
    }
QPKGs.OpToBackup.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_optobackup_array_[@]} ]] && index=${#_obj_qpkgs_optobackup_array_[@]}
    echo -n "${_obj_qpkgs_optobackup_array_[((index-1))]}"
    }
QPKGs.OpToBackup.Init()
    {
    _obj_qpkgs_optobackup_size_=0
    _obj_qpkgs_optobackup_array_=()
    _obj_qpkgs_optobackup_array_index_=1
    }
QPKGs.OpToBackup.IsAny()
    {
    [[ ${#_obj_qpkgs_optobackup_array_[@]} -gt 0 ]]
    }
QPKGs.OpToBackup.IsNone()
    {
    [[ ${#_obj_qpkgs_optobackup_array_[@]} -eq 0 ]]
    }
QPKGs.OpToBackup.List()
    {
    echo -n "${_obj_qpkgs_optobackup_array_[*]+"${_obj_qpkgs_optobackup_array_[@]}"}"
    }
QPKGs.OpToBackup.ListCSV()
    {
    echo -n "${_obj_qpkgs_optobackup_array_[*]+"${_obj_qpkgs_optobackup_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpToBackup.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_optobackup_array_[@]+"${_obj_qpkgs_optobackup_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_optobackup_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_optobackup_array_[*]+"${_obj_qpkgs_optobackup_array_[@]}"} ]] && _obj_qpkgs_optobackup_array_=()
    }
QPKGs.OpToBackup.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_optobackup_size_=$2
    else
        echo -n $_obj_qpkgs_optobackup_size_
    fi
    }
QPKGs.OpToBackup.Init

QPKGs.OpOkBackup.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opokbackup_array_[*]+"${_obj_qpkgs_opokbackup_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opokbackup_array_+=("$item")
        fi
    done
    }
QPKGs.OpOkBackup.Array()
    {
    echo -n "${_obj_qpkgs_opokbackup_array_[@]+"${_obj_qpkgs_opokbackup_array_[@]}"}"
    }
QPKGs.OpOkBackup.Count()
    {
    echo "${#_obj_qpkgs_opokbackup_array_[@]}"
    }
QPKGs.OpOkBackup.Exist()
    {
    [[ ${_obj_qpkgs_opokbackup_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpOkBackup.First()
    {
    echo "${_obj_qpkgs_opokbackup_array_[0]}"
    }
QPKGs.OpOkBackup.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opokbackup_array_[@]} ]] && index=${#_obj_qpkgs_opokbackup_array_[@]}
    echo -n "${_obj_qpkgs_opokbackup_array_[((index-1))]}"
    }
QPKGs.OpOkBackup.Init()
    {
    _obj_qpkgs_opokbackup_size_=0
    _obj_qpkgs_opokbackup_array_=()
    _obj_qpkgs_opokbackup_array_index_=1
    }
QPKGs.OpOkBackup.IsAny()
    {
    [[ ${#_obj_qpkgs_opokbackup_array_[@]} -gt 0 ]]
    }
QPKGs.OpOkBackup.IsNone()
    {
    [[ ${#_obj_qpkgs_opokbackup_array_[@]} -eq 0 ]]
    }
QPKGs.OpOkBackup.List()
    {
    echo -n "${_obj_qpkgs_opokbackup_array_[*]+"${_obj_qpkgs_opokbackup_array_[@]}"}"
    }
QPKGs.OpOkBackup.ListCSV()
    {
    echo -n "${_obj_qpkgs_opokbackup_array_[*]+"${_obj_qpkgs_opokbackup_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpOkBackup.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opokbackup_array_[@]+"${_obj_qpkgs_opokbackup_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opokbackup_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opokbackup_array_[*]+"${_obj_qpkgs_opokbackup_array_[@]}"} ]] && _obj_qpkgs_opokbackup_array_=()
    }
QPKGs.OpOkBackup.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opokbackup_size_=$2
    else
        echo -n $_obj_qpkgs_opokbackup_size_
    fi
    }
QPKGs.OpOkBackup.Init

QPKGs.OpErBackup.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_operbackup_array_[*]+"${_obj_qpkgs_operbackup_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_operbackup_array_+=("$item")
        fi
    done
    }
QPKGs.OpErBackup.Array()
    {
    echo -n "${_obj_qpkgs_operbackup_array_[@]+"${_obj_qpkgs_operbackup_array_[@]}"}"
    }
QPKGs.OpErBackup.Count()
    {
    echo "${#_obj_qpkgs_operbackup_array_[@]}"
    }
QPKGs.OpErBackup.Exist()
    {
    [[ ${_obj_qpkgs_operbackup_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpErBackup.First()
    {
    echo "${_obj_qpkgs_operbackup_array_[0]}"
    }
QPKGs.OpErBackup.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_operbackup_array_[@]} ]] && index=${#_obj_qpkgs_operbackup_array_[@]}
    echo -n "${_obj_qpkgs_operbackup_array_[((index-1))]}"
    }
QPKGs.OpErBackup.Init()
    {
    _obj_qpkgs_operbackup_size_=0
    _obj_qpkgs_operbackup_array_=()
    _obj_qpkgs_operbackup_array_index_=1
    }
QPKGs.OpErBackup.IsAny()
    {
    [[ ${#_obj_qpkgs_operbackup_array_[@]} -gt 0 ]]
    }
QPKGs.OpErBackup.IsNone()
    {
    [[ ${#_obj_qpkgs_operbackup_array_[@]} -eq 0 ]]
    }
QPKGs.OpErBackup.List()
    {
    echo -n "${_obj_qpkgs_operbackup_array_[*]+"${_obj_qpkgs_operbackup_array_[@]}"}"
    }
QPKGs.OpErBackup.ListCSV()
    {
    echo -n "${_obj_qpkgs_operbackup_array_[*]+"${_obj_qpkgs_operbackup_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpErBackup.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_operbackup_array_[@]+"${_obj_qpkgs_operbackup_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_operbackup_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_operbackup_array_[*]+"${_obj_qpkgs_operbackup_array_[@]}"} ]] && _obj_qpkgs_operbackup_array_=()
    }
QPKGs.OpErBackup.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_operbackup_size_=$2
    else
        echo -n $_obj_qpkgs_operbackup_size_
    fi
    }
QPKGs.OpErBackup.Init

QPKGs.OpSkBackup.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opskbackup_array_[*]+"${_obj_qpkgs_opskbackup_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opskbackup_array_+=("$item")
        fi
    done
    }
QPKGs.OpSkBackup.Array()
    {
    echo -n "${_obj_qpkgs_opskbackup_array_[@]+"${_obj_qpkgs_opskbackup_array_[@]}"}"
    }
QPKGs.OpSkBackup.Count()
    {
    echo "${#_obj_qpkgs_opskbackup_array_[@]}"
    }
QPKGs.OpSkBackup.Exist()
    {
    [[ ${_obj_qpkgs_opskbackup_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpSkBackup.First()
    {
    echo "${_obj_qpkgs_opskbackup_array_[0]}"
    }
QPKGs.OpSkBackup.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opskbackup_array_[@]} ]] && index=${#_obj_qpkgs_opskbackup_array_[@]}
    echo -n "${_obj_qpkgs_opskbackup_array_[((index-1))]}"
    }
QPKGs.OpSkBackup.Init()
    {
    _obj_qpkgs_opskbackup_size_=0
    _obj_qpkgs_opskbackup_array_=()
    _obj_qpkgs_opskbackup_array_index_=1
    }
QPKGs.OpSkBackup.IsAny()
    {
    [[ ${#_obj_qpkgs_opskbackup_array_[@]} -gt 0 ]]
    }
QPKGs.OpSkBackup.IsNone()
    {
    [[ ${#_obj_qpkgs_opskbackup_array_[@]} -eq 0 ]]
    }
QPKGs.OpSkBackup.List()
    {
    echo -n "${_obj_qpkgs_opskbackup_array_[*]+"${_obj_qpkgs_opskbackup_array_[@]}"}"
    }
QPKGs.OpSkBackup.ListCSV()
    {
    echo -n "${_obj_qpkgs_opskbackup_array_[*]+"${_obj_qpkgs_opskbackup_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpSkBackup.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opskbackup_array_[@]+"${_obj_qpkgs_opskbackup_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opskbackup_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opskbackup_array_[*]+"${_obj_qpkgs_opskbackup_array_[@]}"} ]] && _obj_qpkgs_opskbackup_array_=()
    }
QPKGs.OpSkBackup.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opskbackup_size_=$2
    else
        echo -n $_obj_qpkgs_opskbackup_size_
    fi
    }
QPKGs.OpSkBackup.Init

QPKGs.OpToDownload.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_optodownload_array_[*]+"${_obj_qpkgs_optodownload_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_optodownload_array_+=("$item")
        fi
    done
    }
QPKGs.OpToDownload.Array()
    {
    echo -n "${_obj_qpkgs_optodownload_array_[@]+"${_obj_qpkgs_optodownload_array_[@]}"}"
    }
QPKGs.OpToDownload.Count()
    {
    echo "${#_obj_qpkgs_optodownload_array_[@]}"
    }
QPKGs.OpToDownload.Exist()
    {
    [[ ${_obj_qpkgs_optodownload_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpToDownload.First()
    {
    echo "${_obj_qpkgs_optodownload_array_[0]}"
    }
QPKGs.OpToDownload.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_optodownload_array_[@]} ]] && index=${#_obj_qpkgs_optodownload_array_[@]}
    echo -n "${_obj_qpkgs_optodownload_array_[((index-1))]}"
    }
QPKGs.OpToDownload.Init()
    {
    _obj_qpkgs_optodownload_size_=0
    _obj_qpkgs_optodownload_array_=()
    _obj_qpkgs_optodownload_array_index_=1
    }
QPKGs.OpToDownload.IsAny()
    {
    [[ ${#_obj_qpkgs_optodownload_array_[@]} -gt 0 ]]
    }
QPKGs.OpToDownload.IsNone()
    {
    [[ ${#_obj_qpkgs_optodownload_array_[@]} -eq 0 ]]
    }
QPKGs.OpToDownload.List()
    {
    echo -n "${_obj_qpkgs_optodownload_array_[*]+"${_obj_qpkgs_optodownload_array_[@]}"}"
    }
QPKGs.OpToDownload.ListCSV()
    {
    echo -n "${_obj_qpkgs_optodownload_array_[*]+"${_obj_qpkgs_optodownload_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpToDownload.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_optodownload_array_[@]+"${_obj_qpkgs_optodownload_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_optodownload_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_optodownload_array_[*]+"${_obj_qpkgs_optodownload_array_[@]}"} ]] && _obj_qpkgs_optodownload_array_=()
    }
QPKGs.OpToDownload.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_optodownload_size_=$2
    else
        echo -n $_obj_qpkgs_optodownload_size_
    fi
    }
QPKGs.OpToDownload.Init

QPKGs.OpOkDownload.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opokdownload_array_[*]+"${_obj_qpkgs_opokdownload_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opokdownload_array_+=("$item")
        fi
    done
    }
QPKGs.OpOkDownload.Array()
    {
    echo -n "${_obj_qpkgs_opokdownload_array_[@]+"${_obj_qpkgs_opokdownload_array_[@]}"}"
    }
QPKGs.OpOkDownload.Count()
    {
    echo "${#_obj_qpkgs_opokdownload_array_[@]}"
    }
QPKGs.OpOkDownload.Exist()
    {
    [[ ${_obj_qpkgs_opokdownload_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpOkDownload.First()
    {
    echo "${_obj_qpkgs_opokdownload_array_[0]}"
    }
QPKGs.OpOkDownload.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opokdownload_array_[@]} ]] && index=${#_obj_qpkgs_opokdownload_array_[@]}
    echo -n "${_obj_qpkgs_opokdownload_array_[((index-1))]}"
    }
QPKGs.OpOkDownload.Init()
    {
    _obj_qpkgs_opokdownload_size_=0
    _obj_qpkgs_opokdownload_array_=()
    _obj_qpkgs_opokdownload_array_index_=1
    }
QPKGs.OpOkDownload.IsAny()
    {
    [[ ${#_obj_qpkgs_opokdownload_array_[@]} -gt 0 ]]
    }
QPKGs.OpOkDownload.IsNone()
    {
    [[ ${#_obj_qpkgs_opokdownload_array_[@]} -eq 0 ]]
    }
QPKGs.OpOkDownload.List()
    {
    echo -n "${_obj_qpkgs_opokdownload_array_[*]+"${_obj_qpkgs_opokdownload_array_[@]}"}"
    }
QPKGs.OpOkDownload.ListCSV()
    {
    echo -n "${_obj_qpkgs_opokdownload_array_[*]+"${_obj_qpkgs_opokdownload_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpOkDownload.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opokdownload_array_[@]+"${_obj_qpkgs_opokdownload_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opokdownload_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opokdownload_array_[*]+"${_obj_qpkgs_opokdownload_array_[@]}"} ]] && _obj_qpkgs_opokdownload_array_=()
    }
QPKGs.OpOkDownload.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opokdownload_size_=$2
    else
        echo -n $_obj_qpkgs_opokdownload_size_
    fi
    }
QPKGs.OpOkDownload.Init

QPKGs.OpErDownload.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_operdownload_array_[*]+"${_obj_qpkgs_operdownload_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_operdownload_array_+=("$item")
        fi
    done
    }
QPKGs.OpErDownload.Array()
    {
    echo -n "${_obj_qpkgs_operdownload_array_[@]+"${_obj_qpkgs_operdownload_array_[@]}"}"
    }
QPKGs.OpErDownload.Count()
    {
    echo "${#_obj_qpkgs_operdownload_array_[@]}"
    }
QPKGs.OpErDownload.Exist()
    {
    [[ ${_obj_qpkgs_operdownload_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpErDownload.First()
    {
    echo "${_obj_qpkgs_operdownload_array_[0]}"
    }
QPKGs.OpErDownload.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_operdownload_array_[@]} ]] && index=${#_obj_qpkgs_operdownload_array_[@]}
    echo -n "${_obj_qpkgs_operdownload_array_[((index-1))]}"
    }
QPKGs.OpErDownload.Init()
    {
    _obj_qpkgs_operdownload_size_=0
    _obj_qpkgs_operdownload_array_=()
    _obj_qpkgs_operdownload_array_index_=1
    }
QPKGs.OpErDownload.IsAny()
    {
    [[ ${#_obj_qpkgs_operdownload_array_[@]} -gt 0 ]]
    }
QPKGs.OpErDownload.IsNone()
    {
    [[ ${#_obj_qpkgs_operdownload_array_[@]} -eq 0 ]]
    }
QPKGs.OpErDownload.List()
    {
    echo -n "${_obj_qpkgs_operdownload_array_[*]+"${_obj_qpkgs_operdownload_array_[@]}"}"
    }
QPKGs.OpErDownload.ListCSV()
    {
    echo -n "${_obj_qpkgs_operdownload_array_[*]+"${_obj_qpkgs_operdownload_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpErDownload.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_operdownload_array_[@]+"${_obj_qpkgs_operdownload_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_operdownload_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_operdownload_array_[*]+"${_obj_qpkgs_operdownload_array_[@]}"} ]] && _obj_qpkgs_operdownload_array_=()
    }
QPKGs.OpErDownload.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_operdownload_size_=$2
    else
        echo -n $_obj_qpkgs_operdownload_size_
    fi
    }
QPKGs.OpErDownload.Init

QPKGs.OpSkDownload.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opskdownload_array_[*]+"${_obj_qpkgs_opskdownload_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opskdownload_array_+=("$item")
        fi
    done
    }
QPKGs.OpSkDownload.Array()
    {
    echo -n "${_obj_qpkgs_opskdownload_array_[@]+"${_obj_qpkgs_opskdownload_array_[@]}"}"
    }
QPKGs.OpSkDownload.Count()
    {
    echo "${#_obj_qpkgs_opskdownload_array_[@]}"
    }
QPKGs.OpSkDownload.Exist()
    {
    [[ ${_obj_qpkgs_opskdownload_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpSkDownload.First()
    {
    echo "${_obj_qpkgs_opskdownload_array_[0]}"
    }
QPKGs.OpSkDownload.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opskdownload_array_[@]} ]] && index=${#_obj_qpkgs_opskdownload_array_[@]}
    echo -n "${_obj_qpkgs_opskdownload_array_[((index-1))]}"
    }
QPKGs.OpSkDownload.Init()
    {
    _obj_qpkgs_opskdownload_size_=0
    _obj_qpkgs_opskdownload_array_=()
    _obj_qpkgs_opskdownload_array_index_=1
    }
QPKGs.OpSkDownload.IsAny()
    {
    [[ ${#_obj_qpkgs_opskdownload_array_[@]} -gt 0 ]]
    }
QPKGs.OpSkDownload.IsNone()
    {
    [[ ${#_obj_qpkgs_opskdownload_array_[@]} -eq 0 ]]
    }
QPKGs.OpSkDownload.List()
    {
    echo -n "${_obj_qpkgs_opskdownload_array_[*]+"${_obj_qpkgs_opskdownload_array_[@]}"}"
    }
QPKGs.OpSkDownload.ListCSV()
    {
    echo -n "${_obj_qpkgs_opskdownload_array_[*]+"${_obj_qpkgs_opskdownload_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpSkDownload.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opskdownload_array_[@]+"${_obj_qpkgs_opskdownload_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opskdownload_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opskdownload_array_[*]+"${_obj_qpkgs_opskdownload_array_[@]}"} ]] && _obj_qpkgs_opskdownload_array_=()
    }
QPKGs.OpSkDownload.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opskdownload_size_=$2
    else
        echo -n $_obj_qpkgs_opskdownload_size_
    fi
    }
QPKGs.OpSkDownload.Init

QPKGs.OpToInstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_optoinstall_array_[*]+"${_obj_qpkgs_optoinstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_optoinstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpToInstall.Array()
    {
    echo -n "${_obj_qpkgs_optoinstall_array_[@]+"${_obj_qpkgs_optoinstall_array_[@]}"}"
    }
QPKGs.OpToInstall.Count()
    {
    echo "${#_obj_qpkgs_optoinstall_array_[@]}"
    }
QPKGs.OpToInstall.Exist()
    {
    [[ ${_obj_qpkgs_optoinstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpToInstall.First()
    {
    echo "${_obj_qpkgs_optoinstall_array_[0]}"
    }
QPKGs.OpToInstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_optoinstall_array_[@]} ]] && index=${#_obj_qpkgs_optoinstall_array_[@]}
    echo -n "${_obj_qpkgs_optoinstall_array_[((index-1))]}"
    }
QPKGs.OpToInstall.Init()
    {
    _obj_qpkgs_optoinstall_size_=0
    _obj_qpkgs_optoinstall_array_=()
    _obj_qpkgs_optoinstall_array_index_=1
    }
QPKGs.OpToInstall.IsAny()
    {
    [[ ${#_obj_qpkgs_optoinstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpToInstall.IsNone()
    {
    [[ ${#_obj_qpkgs_optoinstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpToInstall.List()
    {
    echo -n "${_obj_qpkgs_optoinstall_array_[*]+"${_obj_qpkgs_optoinstall_array_[@]}"}"
    }
QPKGs.OpToInstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_optoinstall_array_[*]+"${_obj_qpkgs_optoinstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpToInstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_optoinstall_array_[@]+"${_obj_qpkgs_optoinstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_optoinstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_optoinstall_array_[*]+"${_obj_qpkgs_optoinstall_array_[@]}"} ]] && _obj_qpkgs_optoinstall_array_=()
    }
QPKGs.OpToInstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_optoinstall_size_=$2
    else
        echo -n $_obj_qpkgs_optoinstall_size_
    fi
    }
QPKGs.OpToInstall.Init

QPKGs.OpOkInstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opokinstall_array_[*]+"${_obj_qpkgs_opokinstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opokinstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpOkInstall.Array()
    {
    echo -n "${_obj_qpkgs_opokinstall_array_[@]+"${_obj_qpkgs_opokinstall_array_[@]}"}"
    }
QPKGs.OpOkInstall.Count()
    {
    echo "${#_obj_qpkgs_opokinstall_array_[@]}"
    }
QPKGs.OpOkInstall.Exist()
    {
    [[ ${_obj_qpkgs_opokinstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpOkInstall.First()
    {
    echo "${_obj_qpkgs_opokinstall_array_[0]}"
    }
QPKGs.OpOkInstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opokinstall_array_[@]} ]] && index=${#_obj_qpkgs_opokinstall_array_[@]}
    echo -n "${_obj_qpkgs_opokinstall_array_[((index-1))]}"
    }
QPKGs.OpOkInstall.Init()
    {
    _obj_qpkgs_opokinstall_size_=0
    _obj_qpkgs_opokinstall_array_=()
    _obj_qpkgs_opokinstall_array_index_=1
    }
QPKGs.OpOkInstall.IsAny()
    {
    [[ ${#_obj_qpkgs_opokinstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpOkInstall.IsNone()
    {
    [[ ${#_obj_qpkgs_opokinstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpOkInstall.List()
    {
    echo -n "${_obj_qpkgs_opokinstall_array_[*]+"${_obj_qpkgs_opokinstall_array_[@]}"}"
    }
QPKGs.OpOkInstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_opokinstall_array_[*]+"${_obj_qpkgs_opokinstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpOkInstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opokinstall_array_[@]+"${_obj_qpkgs_opokinstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opokinstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opokinstall_array_[*]+"${_obj_qpkgs_opokinstall_array_[@]}"} ]] && _obj_qpkgs_opokinstall_array_=()
    }
QPKGs.OpOkInstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opokinstall_size_=$2
    else
        echo -n $_obj_qpkgs_opokinstall_size_
    fi
    }
QPKGs.OpOkInstall.Init

QPKGs.OpErInstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_operinstall_array_[*]+"${_obj_qpkgs_operinstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_operinstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpErInstall.Array()
    {
    echo -n "${_obj_qpkgs_operinstall_array_[@]+"${_obj_qpkgs_operinstall_array_[@]}"}"
    }
QPKGs.OpErInstall.Count()
    {
    echo "${#_obj_qpkgs_operinstall_array_[@]}"
    }
QPKGs.OpErInstall.Exist()
    {
    [[ ${_obj_qpkgs_operinstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpErInstall.First()
    {
    echo "${_obj_qpkgs_operinstall_array_[0]}"
    }
QPKGs.OpErInstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_operinstall_array_[@]} ]] && index=${#_obj_qpkgs_operinstall_array_[@]}
    echo -n "${_obj_qpkgs_operinstall_array_[((index-1))]}"
    }
QPKGs.OpErInstall.Init()
    {
    _obj_qpkgs_operinstall_size_=0
    _obj_qpkgs_operinstall_array_=()
    _obj_qpkgs_operinstall_array_index_=1
    }
QPKGs.OpErInstall.IsAny()
    {
    [[ ${#_obj_qpkgs_operinstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpErInstall.IsNone()
    {
    [[ ${#_obj_qpkgs_operinstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpErInstall.List()
    {
    echo -n "${_obj_qpkgs_operinstall_array_[*]+"${_obj_qpkgs_operinstall_array_[@]}"}"
    }
QPKGs.OpErInstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_operinstall_array_[*]+"${_obj_qpkgs_operinstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpErInstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_operinstall_array_[@]+"${_obj_qpkgs_operinstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_operinstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_operinstall_array_[*]+"${_obj_qpkgs_operinstall_array_[@]}"} ]] && _obj_qpkgs_operinstall_array_=()
    }
QPKGs.OpErInstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_operinstall_size_=$2
    else
        echo -n $_obj_qpkgs_operinstall_size_
    fi
    }
QPKGs.OpErInstall.Init

QPKGs.OpSkInstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opskinstall_array_[*]+"${_obj_qpkgs_opskinstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opskinstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpSkInstall.Array()
    {
    echo -n "${_obj_qpkgs_opskinstall_array_[@]+"${_obj_qpkgs_opskinstall_array_[@]}"}"
    }
QPKGs.OpSkInstall.Count()
    {
    echo "${#_obj_qpkgs_opskinstall_array_[@]}"
    }
QPKGs.OpSkInstall.Exist()
    {
    [[ ${_obj_qpkgs_opskinstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpSkInstall.First()
    {
    echo "${_obj_qpkgs_opskinstall_array_[0]}"
    }
QPKGs.OpSkInstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opskinstall_array_[@]} ]] && index=${#_obj_qpkgs_opskinstall_array_[@]}
    echo -n "${_obj_qpkgs_opskinstall_array_[((index-1))]}"
    }
QPKGs.OpSkInstall.Init()
    {
    _obj_qpkgs_opskinstall_size_=0
    _obj_qpkgs_opskinstall_array_=()
    _obj_qpkgs_opskinstall_array_index_=1
    }
QPKGs.OpSkInstall.IsAny()
    {
    [[ ${#_obj_qpkgs_opskinstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpSkInstall.IsNone()
    {
    [[ ${#_obj_qpkgs_opskinstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpSkInstall.List()
    {
    echo -n "${_obj_qpkgs_opskinstall_array_[*]+"${_obj_qpkgs_opskinstall_array_[@]}"}"
    }
QPKGs.OpSkInstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_opskinstall_array_[*]+"${_obj_qpkgs_opskinstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpSkInstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opskinstall_array_[@]+"${_obj_qpkgs_opskinstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opskinstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opskinstall_array_[*]+"${_obj_qpkgs_opskinstall_array_[@]}"} ]] && _obj_qpkgs_opskinstall_array_=()
    }
QPKGs.OpSkInstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opskinstall_size_=$2
    else
        echo -n $_obj_qpkgs_opskinstall_size_
    fi
    }
QPKGs.OpSkInstall.Init

QPKGs.OpToRebuild.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_optorebuild_array_[*]+"${_obj_qpkgs_optorebuild_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_optorebuild_array_+=("$item")
        fi
    done
    }
QPKGs.OpToRebuild.Array()
    {
    echo -n "${_obj_qpkgs_optorebuild_array_[@]+"${_obj_qpkgs_optorebuild_array_[@]}"}"
    }
QPKGs.OpToRebuild.Count()
    {
    echo "${#_obj_qpkgs_optorebuild_array_[@]}"
    }
QPKGs.OpToRebuild.Exist()
    {
    [[ ${_obj_qpkgs_optorebuild_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpToRebuild.First()
    {
    echo "${_obj_qpkgs_optorebuild_array_[0]}"
    }
QPKGs.OpToRebuild.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_optorebuild_array_[@]} ]] && index=${#_obj_qpkgs_optorebuild_array_[@]}
    echo -n "${_obj_qpkgs_optorebuild_array_[((index-1))]}"
    }
QPKGs.OpToRebuild.Init()
    {
    _obj_qpkgs_optorebuild_size_=0
    _obj_qpkgs_optorebuild_array_=()
    _obj_qpkgs_optorebuild_array_index_=1
    }
QPKGs.OpToRebuild.IsAny()
    {
    [[ ${#_obj_qpkgs_optorebuild_array_[@]} -gt 0 ]]
    }
QPKGs.OpToRebuild.IsNone()
    {
    [[ ${#_obj_qpkgs_optorebuild_array_[@]} -eq 0 ]]
    }
QPKGs.OpToRebuild.List()
    {
    echo -n "${_obj_qpkgs_optorebuild_array_[*]+"${_obj_qpkgs_optorebuild_array_[@]}"}"
    }
QPKGs.OpToRebuild.ListCSV()
    {
    echo -n "${_obj_qpkgs_optorebuild_array_[*]+"${_obj_qpkgs_optorebuild_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpToRebuild.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_optorebuild_array_[@]+"${_obj_qpkgs_optorebuild_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_optorebuild_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_optorebuild_array_[*]+"${_obj_qpkgs_optorebuild_array_[@]}"} ]] && _obj_qpkgs_optorebuild_array_=()
    }
QPKGs.OpToRebuild.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_optorebuild_size_=$2
    else
        echo -n $_obj_qpkgs_optorebuild_size_
    fi
    }
QPKGs.OpToRebuild.Init

QPKGs.OpOkRebuild.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opokrebuild_array_[*]+"${_obj_qpkgs_opokrebuild_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opokrebuild_array_+=("$item")
        fi
    done
    }
QPKGs.OpOkRebuild.Array()
    {
    echo -n "${_obj_qpkgs_opokrebuild_array_[@]+"${_obj_qpkgs_opokrebuild_array_[@]}"}"
    }
QPKGs.OpOkRebuild.Count()
    {
    echo "${#_obj_qpkgs_opokrebuild_array_[@]}"
    }
QPKGs.OpOkRebuild.Exist()
    {
    [[ ${_obj_qpkgs_opokrebuild_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpOkRebuild.First()
    {
    echo "${_obj_qpkgs_opokrebuild_array_[0]}"
    }
QPKGs.OpOkRebuild.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opokrebuild_array_[@]} ]] && index=${#_obj_qpkgs_opokrebuild_array_[@]}
    echo -n "${_obj_qpkgs_opokrebuild_array_[((index-1))]}"
    }
QPKGs.OpOkRebuild.Init()
    {
    _obj_qpkgs_opokrebuild_size_=0
    _obj_qpkgs_opokrebuild_array_=()
    _obj_qpkgs_opokrebuild_array_index_=1
    }
QPKGs.OpOkRebuild.IsAny()
    {
    [[ ${#_obj_qpkgs_opokrebuild_array_[@]} -gt 0 ]]
    }
QPKGs.OpOkRebuild.IsNone()
    {
    [[ ${#_obj_qpkgs_opokrebuild_array_[@]} -eq 0 ]]
    }
QPKGs.OpOkRebuild.List()
    {
    echo -n "${_obj_qpkgs_opokrebuild_array_[*]+"${_obj_qpkgs_opokrebuild_array_[@]}"}"
    }
QPKGs.OpOkRebuild.ListCSV()
    {
    echo -n "${_obj_qpkgs_opokrebuild_array_[*]+"${_obj_qpkgs_opokrebuild_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpOkRebuild.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opokrebuild_array_[@]+"${_obj_qpkgs_opokrebuild_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opokrebuild_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opokrebuild_array_[*]+"${_obj_qpkgs_opokrebuild_array_[@]}"} ]] && _obj_qpkgs_opokrebuild_array_=()
    }
QPKGs.OpOkRebuild.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opokrebuild_size_=$2
    else
        echo -n $_obj_qpkgs_opokrebuild_size_
    fi
    }
QPKGs.OpOkRebuild.Init

QPKGs.OpErRebuild.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_operrebuild_array_[*]+"${_obj_qpkgs_operrebuild_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_operrebuild_array_+=("$item")
        fi
    done
    }
QPKGs.OpErRebuild.Array()
    {
    echo -n "${_obj_qpkgs_operrebuild_array_[@]+"${_obj_qpkgs_operrebuild_array_[@]}"}"
    }
QPKGs.OpErRebuild.Count()
    {
    echo "${#_obj_qpkgs_operrebuild_array_[@]}"
    }
QPKGs.OpErRebuild.Exist()
    {
    [[ ${_obj_qpkgs_operrebuild_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpErRebuild.First()
    {
    echo "${_obj_qpkgs_operrebuild_array_[0]}"
    }
QPKGs.OpErRebuild.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_operrebuild_array_[@]} ]] && index=${#_obj_qpkgs_operrebuild_array_[@]}
    echo -n "${_obj_qpkgs_operrebuild_array_[((index-1))]}"
    }
QPKGs.OpErRebuild.Init()
    {
    _obj_qpkgs_operrebuild_size_=0
    _obj_qpkgs_operrebuild_array_=()
    _obj_qpkgs_operrebuild_array_index_=1
    }
QPKGs.OpErRebuild.IsAny()
    {
    [[ ${#_obj_qpkgs_operrebuild_array_[@]} -gt 0 ]]
    }
QPKGs.OpErRebuild.IsNone()
    {
    [[ ${#_obj_qpkgs_operrebuild_array_[@]} -eq 0 ]]
    }
QPKGs.OpErRebuild.List()
    {
    echo -n "${_obj_qpkgs_operrebuild_array_[*]+"${_obj_qpkgs_operrebuild_array_[@]}"}"
    }
QPKGs.OpErRebuild.ListCSV()
    {
    echo -n "${_obj_qpkgs_operrebuild_array_[*]+"${_obj_qpkgs_operrebuild_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpErRebuild.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_operrebuild_array_[@]+"${_obj_qpkgs_operrebuild_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_operrebuild_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_operrebuild_array_[*]+"${_obj_qpkgs_operrebuild_array_[@]}"} ]] && _obj_qpkgs_operrebuild_array_=()
    }
QPKGs.OpErRebuild.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_operrebuild_size_=$2
    else
        echo -n $_obj_qpkgs_operrebuild_size_
    fi
    }
QPKGs.OpErRebuild.Init

QPKGs.OpSkRebuild.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opskrebuild_array_[*]+"${_obj_qpkgs_opskrebuild_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opskrebuild_array_+=("$item")
        fi
    done
    }
QPKGs.OpSkRebuild.Array()
    {
    echo -n "${_obj_qpkgs_opskrebuild_array_[@]+"${_obj_qpkgs_opskrebuild_array_[@]}"}"
    }
QPKGs.OpSkRebuild.Count()
    {
    echo "${#_obj_qpkgs_opskrebuild_array_[@]}"
    }
QPKGs.OpSkRebuild.Exist()
    {
    [[ ${_obj_qpkgs_opskrebuild_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpSkRebuild.First()
    {
    echo "${_obj_qpkgs_opskrebuild_array_[0]}"
    }
QPKGs.OpSkRebuild.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opskrebuild_array_[@]} ]] && index=${#_obj_qpkgs_opskrebuild_array_[@]}
    echo -n "${_obj_qpkgs_opskrebuild_array_[((index-1))]}"
    }
QPKGs.OpSkRebuild.Init()
    {
    _obj_qpkgs_opskrebuild_size_=0
    _obj_qpkgs_opskrebuild_array_=()
    _obj_qpkgs_opskrebuild_array_index_=1
    }
QPKGs.OpSkRebuild.IsAny()
    {
    [[ ${#_obj_qpkgs_opskrebuild_array_[@]} -gt 0 ]]
    }
QPKGs.OpSkRebuild.IsNone()
    {
    [[ ${#_obj_qpkgs_opskrebuild_array_[@]} -eq 0 ]]
    }
QPKGs.OpSkRebuild.List()
    {
    echo -n "${_obj_qpkgs_opskrebuild_array_[*]+"${_obj_qpkgs_opskrebuild_array_[@]}"}"
    }
QPKGs.OpSkRebuild.ListCSV()
    {
    echo -n "${_obj_qpkgs_opskrebuild_array_[*]+"${_obj_qpkgs_opskrebuild_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpSkRebuild.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opskrebuild_array_[@]+"${_obj_qpkgs_opskrebuild_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opskrebuild_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opskrebuild_array_[*]+"${_obj_qpkgs_opskrebuild_array_[@]}"} ]] && _obj_qpkgs_opskrebuild_array_=()
    }
QPKGs.OpSkRebuild.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opskrebuild_size_=$2
    else
        echo -n $_obj_qpkgs_opskrebuild_size_
    fi
    }
QPKGs.OpSkRebuild.Init

QPKGs.OpToReinstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_optoreinstall_array_[*]+"${_obj_qpkgs_optoreinstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_optoreinstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpToReinstall.Array()
    {
    echo -n "${_obj_qpkgs_optoreinstall_array_[@]+"${_obj_qpkgs_optoreinstall_array_[@]}"}"
    }
QPKGs.OpToReinstall.Count()
    {
    echo "${#_obj_qpkgs_optoreinstall_array_[@]}"
    }
QPKGs.OpToReinstall.Exist()
    {
    [[ ${_obj_qpkgs_optoreinstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpToReinstall.First()
    {
    echo "${_obj_qpkgs_optoreinstall_array_[0]}"
    }
QPKGs.OpToReinstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_optoreinstall_array_[@]} ]] && index=${#_obj_qpkgs_optoreinstall_array_[@]}
    echo -n "${_obj_qpkgs_optoreinstall_array_[((index-1))]}"
    }
QPKGs.OpToReinstall.Init()
    {
    _obj_qpkgs_optoreinstall_size_=0
    _obj_qpkgs_optoreinstall_array_=()
    _obj_qpkgs_optoreinstall_array_index_=1
    }
QPKGs.OpToReinstall.IsAny()
    {
    [[ ${#_obj_qpkgs_optoreinstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpToReinstall.IsNone()
    {
    [[ ${#_obj_qpkgs_optoreinstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpToReinstall.List()
    {
    echo -n "${_obj_qpkgs_optoreinstall_array_[*]+"${_obj_qpkgs_optoreinstall_array_[@]}"}"
    }
QPKGs.OpToReinstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_optoreinstall_array_[*]+"${_obj_qpkgs_optoreinstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpToReinstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_optoreinstall_array_[@]+"${_obj_qpkgs_optoreinstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_optoreinstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_optoreinstall_array_[*]+"${_obj_qpkgs_optoreinstall_array_[@]}"} ]] && _obj_qpkgs_optoreinstall_array_=()
    }
QPKGs.OpToReinstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_optoreinstall_size_=$2
    else
        echo -n $_obj_qpkgs_optoreinstall_size_
    fi
    }
QPKGs.OpToReinstall.Init

QPKGs.OpOkReinstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opokreinstall_array_[*]+"${_obj_qpkgs_opokreinstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opokreinstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpOkReinstall.Array()
    {
    echo -n "${_obj_qpkgs_opokreinstall_array_[@]+"${_obj_qpkgs_opokreinstall_array_[@]}"}"
    }
QPKGs.OpOkReinstall.Count()
    {
    echo "${#_obj_qpkgs_opokreinstall_array_[@]}"
    }
QPKGs.OpOkReinstall.Exist()
    {
    [[ ${_obj_qpkgs_opokreinstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpOkReinstall.First()
    {
    echo "${_obj_qpkgs_opokreinstall_array_[0]}"
    }
QPKGs.OpOkReinstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opokreinstall_array_[@]} ]] && index=${#_obj_qpkgs_opokreinstall_array_[@]}
    echo -n "${_obj_qpkgs_opokreinstall_array_[((index-1))]}"
    }
QPKGs.OpOkReinstall.Init()
    {
    _obj_qpkgs_opokreinstall_size_=0
    _obj_qpkgs_opokreinstall_array_=()
    _obj_qpkgs_opokreinstall_array_index_=1
    }
QPKGs.OpOkReinstall.IsAny()
    {
    [[ ${#_obj_qpkgs_opokreinstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpOkReinstall.IsNone()
    {
    [[ ${#_obj_qpkgs_opokreinstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpOkReinstall.List()
    {
    echo -n "${_obj_qpkgs_opokreinstall_array_[*]+"${_obj_qpkgs_opokreinstall_array_[@]}"}"
    }
QPKGs.OpOkReinstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_opokreinstall_array_[*]+"${_obj_qpkgs_opokreinstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpOkReinstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opokreinstall_array_[@]+"${_obj_qpkgs_opokreinstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opokreinstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opokreinstall_array_[*]+"${_obj_qpkgs_opokreinstall_array_[@]}"} ]] && _obj_qpkgs_opokreinstall_array_=()
    }
QPKGs.OpOkReinstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opokreinstall_size_=$2
    else
        echo -n $_obj_qpkgs_opokreinstall_size_
    fi
    }
QPKGs.OpOkReinstall.Init

QPKGs.OpErReinstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_operreinstall_array_[*]+"${_obj_qpkgs_operreinstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_operreinstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpErReinstall.Array()
    {
    echo -n "${_obj_qpkgs_operreinstall_array_[@]+"${_obj_qpkgs_operreinstall_array_[@]}"}"
    }
QPKGs.OpErReinstall.Count()
    {
    echo "${#_obj_qpkgs_operreinstall_array_[@]}"
    }
QPKGs.OpErReinstall.Exist()
    {
    [[ ${_obj_qpkgs_operreinstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpErReinstall.First()
    {
    echo "${_obj_qpkgs_operreinstall_array_[0]}"
    }
QPKGs.OpErReinstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_operreinstall_array_[@]} ]] && index=${#_obj_qpkgs_operreinstall_array_[@]}
    echo -n "${_obj_qpkgs_operreinstall_array_[((index-1))]}"
    }
QPKGs.OpErReinstall.Init()
    {
    _obj_qpkgs_operreinstall_size_=0
    _obj_qpkgs_operreinstall_array_=()
    _obj_qpkgs_operreinstall_array_index_=1
    }
QPKGs.OpErReinstall.IsAny()
    {
    [[ ${#_obj_qpkgs_operreinstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpErReinstall.IsNone()
    {
    [[ ${#_obj_qpkgs_operreinstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpErReinstall.List()
    {
    echo -n "${_obj_qpkgs_operreinstall_array_[*]+"${_obj_qpkgs_operreinstall_array_[@]}"}"
    }
QPKGs.OpErReinstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_operreinstall_array_[*]+"${_obj_qpkgs_operreinstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpErReinstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_operreinstall_array_[@]+"${_obj_qpkgs_operreinstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_operreinstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_operreinstall_array_[*]+"${_obj_qpkgs_operreinstall_array_[@]}"} ]] && _obj_qpkgs_operreinstall_array_=()
    }
QPKGs.OpErReinstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_operreinstall_size_=$2
    else
        echo -n $_obj_qpkgs_operreinstall_size_
    fi
    }
QPKGs.OpErReinstall.Init

QPKGs.OpSkReinstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opskreinstall_array_[*]+"${_obj_qpkgs_opskreinstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opskreinstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpSkReinstall.Array()
    {
    echo -n "${_obj_qpkgs_opskreinstall_array_[@]+"${_obj_qpkgs_opskreinstall_array_[@]}"}"
    }
QPKGs.OpSkReinstall.Count()
    {
    echo "${#_obj_qpkgs_opskreinstall_array_[@]}"
    }
QPKGs.OpSkReinstall.Exist()
    {
    [[ ${_obj_qpkgs_opskreinstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpSkReinstall.First()
    {
    echo "${_obj_qpkgs_opskreinstall_array_[0]}"
    }
QPKGs.OpSkReinstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opskreinstall_array_[@]} ]] && index=${#_obj_qpkgs_opskreinstall_array_[@]}
    echo -n "${_obj_qpkgs_opskreinstall_array_[((index-1))]}"
    }
QPKGs.OpSkReinstall.Init()
    {
    _obj_qpkgs_opskreinstall_size_=0
    _obj_qpkgs_opskreinstall_array_=()
    _obj_qpkgs_opskreinstall_array_index_=1
    }
QPKGs.OpSkReinstall.IsAny()
    {
    [[ ${#_obj_qpkgs_opskreinstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpSkReinstall.IsNone()
    {
    [[ ${#_obj_qpkgs_opskreinstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpSkReinstall.List()
    {
    echo -n "${_obj_qpkgs_opskreinstall_array_[*]+"${_obj_qpkgs_opskreinstall_array_[@]}"}"
    }
QPKGs.OpSkReinstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_opskreinstall_array_[*]+"${_obj_qpkgs_opskreinstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpSkReinstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opskreinstall_array_[@]+"${_obj_qpkgs_opskreinstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opskreinstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opskreinstall_array_[*]+"${_obj_qpkgs_opskreinstall_array_[@]}"} ]] && _obj_qpkgs_opskreinstall_array_=()
    }
QPKGs.OpSkReinstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opskreinstall_size_=$2
    else
        echo -n $_obj_qpkgs_opskreinstall_size_
    fi
    }
QPKGs.OpSkReinstall.Init

QPKGs.OpToRestart.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_optorestart_array_[*]+"${_obj_qpkgs_optorestart_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_optorestart_array_+=("$item")
        fi
    done
    }
QPKGs.OpToRestart.Array()
    {
    echo -n "${_obj_qpkgs_optorestart_array_[@]+"${_obj_qpkgs_optorestart_array_[@]}"}"
    }
QPKGs.OpToRestart.Count()
    {
    echo "${#_obj_qpkgs_optorestart_array_[@]}"
    }
QPKGs.OpToRestart.Exist()
    {
    [[ ${_obj_qpkgs_optorestart_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpToRestart.First()
    {
    echo "${_obj_qpkgs_optorestart_array_[0]}"
    }
QPKGs.OpToRestart.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_optorestart_array_[@]} ]] && index=${#_obj_qpkgs_optorestart_array_[@]}
    echo -n "${_obj_qpkgs_optorestart_array_[((index-1))]}"
    }
QPKGs.OpToRestart.Init()
    {
    _obj_qpkgs_optorestart_size_=0
    _obj_qpkgs_optorestart_array_=()
    _obj_qpkgs_optorestart_array_index_=1
    }
QPKGs.OpToRestart.IsAny()
    {
    [[ ${#_obj_qpkgs_optorestart_array_[@]} -gt 0 ]]
    }
QPKGs.OpToRestart.IsNone()
    {
    [[ ${#_obj_qpkgs_optorestart_array_[@]} -eq 0 ]]
    }
QPKGs.OpToRestart.List()
    {
    echo -n "${_obj_qpkgs_optorestart_array_[*]+"${_obj_qpkgs_optorestart_array_[@]}"}"
    }
QPKGs.OpToRestart.ListCSV()
    {
    echo -n "${_obj_qpkgs_optorestart_array_[*]+"${_obj_qpkgs_optorestart_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpToRestart.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_optorestart_array_[@]+"${_obj_qpkgs_optorestart_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_optorestart_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_optorestart_array_[*]+"${_obj_qpkgs_optorestart_array_[@]}"} ]] && _obj_qpkgs_optorestart_array_=()
    }
QPKGs.OpToRestart.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_optorestart_size_=$2
    else
        echo -n $_obj_qpkgs_optorestart_size_
    fi
    }
QPKGs.OpToRestart.Init

QPKGs.OpOkRestart.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opokrestart_array_[*]+"${_obj_qpkgs_opokrestart_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opokrestart_array_+=("$item")
        fi
    done
    }
QPKGs.OpOkRestart.Array()
    {
    echo -n "${_obj_qpkgs_opokrestart_array_[@]+"${_obj_qpkgs_opokrestart_array_[@]}"}"
    }
QPKGs.OpOkRestart.Count()
    {
    echo "${#_obj_qpkgs_opokrestart_array_[@]}"
    }
QPKGs.OpOkRestart.Exist()
    {
    [[ ${_obj_qpkgs_opokrestart_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpOkRestart.First()
    {
    echo "${_obj_qpkgs_opokrestart_array_[0]}"
    }
QPKGs.OpOkRestart.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opokrestart_array_[@]} ]] && index=${#_obj_qpkgs_opokrestart_array_[@]}
    echo -n "${_obj_qpkgs_opokrestart_array_[((index-1))]}"
    }
QPKGs.OpOkRestart.Init()
    {
    _obj_qpkgs_opokrestart_size_=0
    _obj_qpkgs_opokrestart_array_=()
    _obj_qpkgs_opokrestart_array_index_=1
    }
QPKGs.OpOkRestart.IsAny()
    {
    [[ ${#_obj_qpkgs_opokrestart_array_[@]} -gt 0 ]]
    }
QPKGs.OpOkRestart.IsNone()
    {
    [[ ${#_obj_qpkgs_opokrestart_array_[@]} -eq 0 ]]
    }
QPKGs.OpOkRestart.List()
    {
    echo -n "${_obj_qpkgs_opokrestart_array_[*]+"${_obj_qpkgs_opokrestart_array_[@]}"}"
    }
QPKGs.OpOkRestart.ListCSV()
    {
    echo -n "${_obj_qpkgs_opokrestart_array_[*]+"${_obj_qpkgs_opokrestart_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpOkRestart.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opokrestart_array_[@]+"${_obj_qpkgs_opokrestart_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opokrestart_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opokrestart_array_[*]+"${_obj_qpkgs_opokrestart_array_[@]}"} ]] && _obj_qpkgs_opokrestart_array_=()
    }
QPKGs.OpOkRestart.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opokrestart_size_=$2
    else
        echo -n $_obj_qpkgs_opokrestart_size_
    fi
    }
QPKGs.OpOkRestart.Init

QPKGs.OpErRestart.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_operrestart_array_[*]+"${_obj_qpkgs_operrestart_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_operrestart_array_+=("$item")
        fi
    done
    }
QPKGs.OpErRestart.Array()
    {
    echo -n "${_obj_qpkgs_operrestart_array_[@]+"${_obj_qpkgs_operrestart_array_[@]}"}"
    }
QPKGs.OpErRestart.Count()
    {
    echo "${#_obj_qpkgs_operrestart_array_[@]}"
    }
QPKGs.OpErRestart.Exist()
    {
    [[ ${_obj_qpkgs_operrestart_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpErRestart.First()
    {
    echo "${_obj_qpkgs_operrestart_array_[0]}"
    }
QPKGs.OpErRestart.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_operrestart_array_[@]} ]] && index=${#_obj_qpkgs_operrestart_array_[@]}
    echo -n "${_obj_qpkgs_operrestart_array_[((index-1))]}"
    }
QPKGs.OpErRestart.Init()
    {
    _obj_qpkgs_operrestart_size_=0
    _obj_qpkgs_operrestart_array_=()
    _obj_qpkgs_operrestart_array_index_=1
    }
QPKGs.OpErRestart.IsAny()
    {
    [[ ${#_obj_qpkgs_operrestart_array_[@]} -gt 0 ]]
    }
QPKGs.OpErRestart.IsNone()
    {
    [[ ${#_obj_qpkgs_operrestart_array_[@]} -eq 0 ]]
    }
QPKGs.OpErRestart.List()
    {
    echo -n "${_obj_qpkgs_operrestart_array_[*]+"${_obj_qpkgs_operrestart_array_[@]}"}"
    }
QPKGs.OpErRestart.ListCSV()
    {
    echo -n "${_obj_qpkgs_operrestart_array_[*]+"${_obj_qpkgs_operrestart_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpErRestart.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_operrestart_array_[@]+"${_obj_qpkgs_operrestart_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_operrestart_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_operrestart_array_[*]+"${_obj_qpkgs_operrestart_array_[@]}"} ]] && _obj_qpkgs_operrestart_array_=()
    }
QPKGs.OpErRestart.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_operrestart_size_=$2
    else
        echo -n $_obj_qpkgs_operrestart_size_
    fi
    }
QPKGs.OpErRestart.Init

QPKGs.OpSkRestart.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opskrestart_array_[*]+"${_obj_qpkgs_opskrestart_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opskrestart_array_+=("$item")
        fi
    done
    }
QPKGs.OpSkRestart.Array()
    {
    echo -n "${_obj_qpkgs_opskrestart_array_[@]+"${_obj_qpkgs_opskrestart_array_[@]}"}"
    }
QPKGs.OpSkRestart.Count()
    {
    echo "${#_obj_qpkgs_opskrestart_array_[@]}"
    }
QPKGs.OpSkRestart.Exist()
    {
    [[ ${_obj_qpkgs_opskrestart_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpSkRestart.First()
    {
    echo "${_obj_qpkgs_opskrestart_array_[0]}"
    }
QPKGs.OpSkRestart.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opskrestart_array_[@]} ]] && index=${#_obj_qpkgs_opskrestart_array_[@]}
    echo -n "${_obj_qpkgs_opskrestart_array_[((index-1))]}"
    }
QPKGs.OpSkRestart.Init()
    {
    _obj_qpkgs_opskrestart_size_=0
    _obj_qpkgs_opskrestart_array_=()
    _obj_qpkgs_opskrestart_array_index_=1
    }
QPKGs.OpSkRestart.IsAny()
    {
    [[ ${#_obj_qpkgs_opskrestart_array_[@]} -gt 0 ]]
    }
QPKGs.OpSkRestart.IsNone()
    {
    [[ ${#_obj_qpkgs_opskrestart_array_[@]} -eq 0 ]]
    }
QPKGs.OpSkRestart.List()
    {
    echo -n "${_obj_qpkgs_opskrestart_array_[*]+"${_obj_qpkgs_opskrestart_array_[@]}"}"
    }
QPKGs.OpSkRestart.ListCSV()
    {
    echo -n "${_obj_qpkgs_opskrestart_array_[*]+"${_obj_qpkgs_opskrestart_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpSkRestart.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opskrestart_array_[@]+"${_obj_qpkgs_opskrestart_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opskrestart_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opskrestart_array_[*]+"${_obj_qpkgs_opskrestart_array_[@]}"} ]] && _obj_qpkgs_opskrestart_array_=()
    }
QPKGs.OpSkRestart.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opskrestart_size_=$2
    else
        echo -n $_obj_qpkgs_opskrestart_size_
    fi
    }
QPKGs.OpSkRestart.Init

QPKGs.OpToRestore.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_optorestore_array_[*]+"${_obj_qpkgs_optorestore_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_optorestore_array_+=("$item")
        fi
    done
    }
QPKGs.OpToRestore.Array()
    {
    echo -n "${_obj_qpkgs_optorestore_array_[@]+"${_obj_qpkgs_optorestore_array_[@]}"}"
    }
QPKGs.OpToRestore.Count()
    {
    echo "${#_obj_qpkgs_optorestore_array_[@]}"
    }
QPKGs.OpToRestore.Exist()
    {
    [[ ${_obj_qpkgs_optorestore_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpToRestore.First()
    {
    echo "${_obj_qpkgs_optorestore_array_[0]}"
    }
QPKGs.OpToRestore.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_optorestore_array_[@]} ]] && index=${#_obj_qpkgs_optorestore_array_[@]}
    echo -n "${_obj_qpkgs_optorestore_array_[((index-1))]}"
    }
QPKGs.OpToRestore.Init()
    {
    _obj_qpkgs_optorestore_size_=0
    _obj_qpkgs_optorestore_array_=()
    _obj_qpkgs_optorestore_array_index_=1
    }
QPKGs.OpToRestore.IsAny()
    {
    [[ ${#_obj_qpkgs_optorestore_array_[@]} -gt 0 ]]
    }
QPKGs.OpToRestore.IsNone()
    {
    [[ ${#_obj_qpkgs_optorestore_array_[@]} -eq 0 ]]
    }
QPKGs.OpToRestore.List()
    {
    echo -n "${_obj_qpkgs_optorestore_array_[*]+"${_obj_qpkgs_optorestore_array_[@]}"}"
    }
QPKGs.OpToRestore.ListCSV()
    {
    echo -n "${_obj_qpkgs_optorestore_array_[*]+"${_obj_qpkgs_optorestore_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpToRestore.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_optorestore_array_[@]+"${_obj_qpkgs_optorestore_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_optorestore_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_optorestore_array_[*]+"${_obj_qpkgs_optorestore_array_[@]}"} ]] && _obj_qpkgs_optorestore_array_=()
    }
QPKGs.OpToRestore.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_optorestore_size_=$2
    else
        echo -n $_obj_qpkgs_optorestore_size_
    fi
    }
QPKGs.OpToRestore.Init

QPKGs.OpOkRestore.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opokrestore_array_[*]+"${_obj_qpkgs_opokrestore_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opokrestore_array_+=("$item")
        fi
    done
    }
QPKGs.OpOkRestore.Array()
    {
    echo -n "${_obj_qpkgs_opokrestore_array_[@]+"${_obj_qpkgs_opokrestore_array_[@]}"}"
    }
QPKGs.OpOkRestore.Count()
    {
    echo "${#_obj_qpkgs_opokrestore_array_[@]}"
    }
QPKGs.OpOkRestore.Exist()
    {
    [[ ${_obj_qpkgs_opokrestore_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpOkRestore.First()
    {
    echo "${_obj_qpkgs_opokrestore_array_[0]}"
    }
QPKGs.OpOkRestore.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opokrestore_array_[@]} ]] && index=${#_obj_qpkgs_opokrestore_array_[@]}
    echo -n "${_obj_qpkgs_opokrestore_array_[((index-1))]}"
    }
QPKGs.OpOkRestore.Init()
    {
    _obj_qpkgs_opokrestore_size_=0
    _obj_qpkgs_opokrestore_array_=()
    _obj_qpkgs_opokrestore_array_index_=1
    }
QPKGs.OpOkRestore.IsAny()
    {
    [[ ${#_obj_qpkgs_opokrestore_array_[@]} -gt 0 ]]
    }
QPKGs.OpOkRestore.IsNone()
    {
    [[ ${#_obj_qpkgs_opokrestore_array_[@]} -eq 0 ]]
    }
QPKGs.OpOkRestore.List()
    {
    echo -n "${_obj_qpkgs_opokrestore_array_[*]+"${_obj_qpkgs_opokrestore_array_[@]}"}"
    }
QPKGs.OpOkRestore.ListCSV()
    {
    echo -n "${_obj_qpkgs_opokrestore_array_[*]+"${_obj_qpkgs_opokrestore_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpOkRestore.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opokrestore_array_[@]+"${_obj_qpkgs_opokrestore_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opokrestore_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opokrestore_array_[*]+"${_obj_qpkgs_opokrestore_array_[@]}"} ]] && _obj_qpkgs_opokrestore_array_=()
    }
QPKGs.OpOkRestore.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opokrestore_size_=$2
    else
        echo -n $_obj_qpkgs_opokrestore_size_
    fi
    }
QPKGs.OpOkRestore.Init

QPKGs.OpErRestore.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_operrestore_array_[*]+"${_obj_qpkgs_operrestore_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_operrestore_array_+=("$item")
        fi
    done
    }
QPKGs.OpErRestore.Array()
    {
    echo -n "${_obj_qpkgs_operrestore_array_[@]+"${_obj_qpkgs_operrestore_array_[@]}"}"
    }
QPKGs.OpErRestore.Count()
    {
    echo "${#_obj_qpkgs_operrestore_array_[@]}"
    }
QPKGs.OpErRestore.Exist()
    {
    [[ ${_obj_qpkgs_operrestore_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpErRestore.First()
    {
    echo "${_obj_qpkgs_operrestore_array_[0]}"
    }
QPKGs.OpErRestore.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_operrestore_array_[@]} ]] && index=${#_obj_qpkgs_operrestore_array_[@]}
    echo -n "${_obj_qpkgs_operrestore_array_[((index-1))]}"
    }
QPKGs.OpErRestore.Init()
    {
    _obj_qpkgs_operrestore_size_=0
    _obj_qpkgs_operrestore_array_=()
    _obj_qpkgs_operrestore_array_index_=1
    }
QPKGs.OpErRestore.IsAny()
    {
    [[ ${#_obj_qpkgs_operrestore_array_[@]} -gt 0 ]]
    }
QPKGs.OpErRestore.IsNone()
    {
    [[ ${#_obj_qpkgs_operrestore_array_[@]} -eq 0 ]]
    }
QPKGs.OpErRestore.List()
    {
    echo -n "${_obj_qpkgs_operrestore_array_[*]+"${_obj_qpkgs_operrestore_array_[@]}"}"
    }
QPKGs.OpErRestore.ListCSV()
    {
    echo -n "${_obj_qpkgs_operrestore_array_[*]+"${_obj_qpkgs_operrestore_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpErRestore.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_operrestore_array_[@]+"${_obj_qpkgs_operrestore_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_operrestore_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_operrestore_array_[*]+"${_obj_qpkgs_operrestore_array_[@]}"} ]] && _obj_qpkgs_operrestore_array_=()
    }
QPKGs.OpErRestore.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_operrestore_size_=$2
    else
        echo -n $_obj_qpkgs_operrestore_size_
    fi
    }
QPKGs.OpErRestore.Init

QPKGs.OpSkRestore.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opskrestore_array_[*]+"${_obj_qpkgs_opskrestore_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opskrestore_array_+=("$item")
        fi
    done
    }
QPKGs.OpSkRestore.Array()
    {
    echo -n "${_obj_qpkgs_opskrestore_array_[@]+"${_obj_qpkgs_opskrestore_array_[@]}"}"
    }
QPKGs.OpSkRestore.Count()
    {
    echo "${#_obj_qpkgs_opskrestore_array_[@]}"
    }
QPKGs.OpSkRestore.Exist()
    {
    [[ ${_obj_qpkgs_opskrestore_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpSkRestore.First()
    {
    echo "${_obj_qpkgs_opskrestore_array_[0]}"
    }
QPKGs.OpSkRestore.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opskrestore_array_[@]} ]] && index=${#_obj_qpkgs_opskrestore_array_[@]}
    echo -n "${_obj_qpkgs_opskrestore_array_[((index-1))]}"
    }
QPKGs.OpSkRestore.Init()
    {
    _obj_qpkgs_opskrestore_size_=0
    _obj_qpkgs_opskrestore_array_=()
    _obj_qpkgs_opskrestore_array_index_=1
    }
QPKGs.OpSkRestore.IsAny()
    {
    [[ ${#_obj_qpkgs_opskrestore_array_[@]} -gt 0 ]]
    }
QPKGs.OpSkRestore.IsNone()
    {
    [[ ${#_obj_qpkgs_opskrestore_array_[@]} -eq 0 ]]
    }
QPKGs.OpSkRestore.List()
    {
    echo -n "${_obj_qpkgs_opskrestore_array_[*]+"${_obj_qpkgs_opskrestore_array_[@]}"}"
    }
QPKGs.OpSkRestore.ListCSV()
    {
    echo -n "${_obj_qpkgs_opskrestore_array_[*]+"${_obj_qpkgs_opskrestore_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpSkRestore.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opskrestore_array_[@]+"${_obj_qpkgs_opskrestore_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opskrestore_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opskrestore_array_[*]+"${_obj_qpkgs_opskrestore_array_[@]}"} ]] && _obj_qpkgs_opskrestore_array_=()
    }
QPKGs.OpSkRestore.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opskrestore_size_=$2
    else
        echo -n $_obj_qpkgs_opskrestore_size_
    fi
    }
QPKGs.OpSkRestore.Init

QPKGs.OpToStart.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_optostart_array_[*]+"${_obj_qpkgs_optostart_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_optostart_array_+=("$item")
        fi
    done
    }
QPKGs.OpToStart.Array()
    {
    echo -n "${_obj_qpkgs_optostart_array_[@]+"${_obj_qpkgs_optostart_array_[@]}"}"
    }
QPKGs.OpToStart.Count()
    {
    echo "${#_obj_qpkgs_optostart_array_[@]}"
    }
QPKGs.OpToStart.Exist()
    {
    [[ ${_obj_qpkgs_optostart_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpToStart.First()
    {
    echo "${_obj_qpkgs_optostart_array_[0]}"
    }
QPKGs.OpToStart.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_optostart_array_[@]} ]] && index=${#_obj_qpkgs_optostart_array_[@]}
    echo -n "${_obj_qpkgs_optostart_array_[((index-1))]}"
    }
QPKGs.OpToStart.Init()
    {
    _obj_qpkgs_optostart_size_=0
    _obj_qpkgs_optostart_array_=()
    _obj_qpkgs_optostart_array_index_=1
    }
QPKGs.OpToStart.IsAny()
    {
    [[ ${#_obj_qpkgs_optostart_array_[@]} -gt 0 ]]
    }
QPKGs.OpToStart.IsNone()
    {
    [[ ${#_obj_qpkgs_optostart_array_[@]} -eq 0 ]]
    }
QPKGs.OpToStart.List()
    {
    echo -n "${_obj_qpkgs_optostart_array_[*]+"${_obj_qpkgs_optostart_array_[@]}"}"
    }
QPKGs.OpToStart.ListCSV()
    {
    echo -n "${_obj_qpkgs_optostart_array_[*]+"${_obj_qpkgs_optostart_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpToStart.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_optostart_array_[@]+"${_obj_qpkgs_optostart_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_optostart_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_optostart_array_[*]+"${_obj_qpkgs_optostart_array_[@]}"} ]] && _obj_qpkgs_optostart_array_=()
    }
QPKGs.OpToStart.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_optostart_size_=$2
    else
        echo -n $_obj_qpkgs_optostart_size_
    fi
    }
QPKGs.OpToStart.Init

QPKGs.OpOkStart.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opokstart_array_[*]+"${_obj_qpkgs_opokstart_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opokstart_array_+=("$item")
        fi
    done
    }
QPKGs.OpOkStart.Array()
    {
    echo -n "${_obj_qpkgs_opokstart_array_[@]+"${_obj_qpkgs_opokstart_array_[@]}"}"
    }
QPKGs.OpOkStart.Count()
    {
    echo "${#_obj_qpkgs_opokstart_array_[@]}"
    }
QPKGs.OpOkStart.Exist()
    {
    [[ ${_obj_qpkgs_opokstart_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpOkStart.First()
    {
    echo "${_obj_qpkgs_opokstart_array_[0]}"
    }
QPKGs.OpOkStart.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opokstart_array_[@]} ]] && index=${#_obj_qpkgs_opokstart_array_[@]}
    echo -n "${_obj_qpkgs_opokstart_array_[((index-1))]}"
    }
QPKGs.OpOkStart.Init()
    {
    _obj_qpkgs_opokstart_size_=0
    _obj_qpkgs_opokstart_array_=()
    _obj_qpkgs_opokstart_array_index_=1
    }
QPKGs.OpOkStart.IsAny()
    {
    [[ ${#_obj_qpkgs_opokstart_array_[@]} -gt 0 ]]
    }
QPKGs.OpOkStart.IsNone()
    {
    [[ ${#_obj_qpkgs_opokstart_array_[@]} -eq 0 ]]
    }
QPKGs.OpOkStart.List()
    {
    echo -n "${_obj_qpkgs_opokstart_array_[*]+"${_obj_qpkgs_opokstart_array_[@]}"}"
    }
QPKGs.OpOkStart.ListCSV()
    {
    echo -n "${_obj_qpkgs_opokstart_array_[*]+"${_obj_qpkgs_opokstart_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpOkStart.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opokstart_array_[@]+"${_obj_qpkgs_opokstart_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opokstart_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opokstart_array_[*]+"${_obj_qpkgs_opokstart_array_[@]}"} ]] && _obj_qpkgs_opokstart_array_=()
    }
QPKGs.OpOkStart.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opokstart_size_=$2
    else
        echo -n $_obj_qpkgs_opokstart_size_
    fi
    }
QPKGs.OpOkStart.Init

QPKGs.OpErStart.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_operstart_array_[*]+"${_obj_qpkgs_operstart_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_operstart_array_+=("$item")
        fi
    done
    }
QPKGs.OpErStart.Array()
    {
    echo -n "${_obj_qpkgs_operstart_array_[@]+"${_obj_qpkgs_operstart_array_[@]}"}"
    }
QPKGs.OpErStart.Count()
    {
    echo "${#_obj_qpkgs_operstart_array_[@]}"
    }
QPKGs.OpErStart.Exist()
    {
    [[ ${_obj_qpkgs_operstart_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpErStart.First()
    {
    echo "${_obj_qpkgs_operstart_array_[0]}"
    }
QPKGs.OpErStart.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_operstart_array_[@]} ]] && index=${#_obj_qpkgs_operstart_array_[@]}
    echo -n "${_obj_qpkgs_operstart_array_[((index-1))]}"
    }
QPKGs.OpErStart.Init()
    {
    _obj_qpkgs_operstart_size_=0
    _obj_qpkgs_operstart_array_=()
    _obj_qpkgs_operstart_array_index_=1
    }
QPKGs.OpErStart.IsAny()
    {
    [[ ${#_obj_qpkgs_operstart_array_[@]} -gt 0 ]]
    }
QPKGs.OpErStart.IsNone()
    {
    [[ ${#_obj_qpkgs_operstart_array_[@]} -eq 0 ]]
    }
QPKGs.OpErStart.List()
    {
    echo -n "${_obj_qpkgs_operstart_array_[*]+"${_obj_qpkgs_operstart_array_[@]}"}"
    }
QPKGs.OpErStart.ListCSV()
    {
    echo -n "${_obj_qpkgs_operstart_array_[*]+"${_obj_qpkgs_operstart_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpErStart.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_operstart_array_[@]+"${_obj_qpkgs_operstart_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_operstart_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_operstart_array_[*]+"${_obj_qpkgs_operstart_array_[@]}"} ]] && _obj_qpkgs_operstart_array_=()
    }
QPKGs.OpErStart.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_operstart_size_=$2
    else
        echo -n $_obj_qpkgs_operstart_size_
    fi
    }
QPKGs.OpErStart.Init

QPKGs.OpSkStart.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opskstart_array_[*]+"${_obj_qpkgs_opskstart_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opskstart_array_+=("$item")
        fi
    done
    }
QPKGs.OpSkStart.Array()
    {
    echo -n "${_obj_qpkgs_opskstart_array_[@]+"${_obj_qpkgs_opskstart_array_[@]}"}"
    }
QPKGs.OpSkStart.Count()
    {
    echo "${#_obj_qpkgs_opskstart_array_[@]}"
    }
QPKGs.OpSkStart.Exist()
    {
    [[ ${_obj_qpkgs_opskstart_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpSkStart.First()
    {
    echo "${_obj_qpkgs_opskstart_array_[0]}"
    }
QPKGs.OpSkStart.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opskstart_array_[@]} ]] && index=${#_obj_qpkgs_opskstart_array_[@]}
    echo -n "${_obj_qpkgs_opskstart_array_[((index-1))]}"
    }
QPKGs.OpSkStart.Init()
    {
    _obj_qpkgs_opskstart_size_=0
    _obj_qpkgs_opskstart_array_=()
    _obj_qpkgs_opskstart_array_index_=1
    }
QPKGs.OpSkStart.IsAny()
    {
    [[ ${#_obj_qpkgs_opskstart_array_[@]} -gt 0 ]]
    }
QPKGs.OpSkStart.IsNone()
    {
    [[ ${#_obj_qpkgs_opskstart_array_[@]} -eq 0 ]]
    }
QPKGs.OpSkStart.List()
    {
    echo -n "${_obj_qpkgs_opskstart_array_[*]+"${_obj_qpkgs_opskstart_array_[@]}"}"
    }
QPKGs.OpSkStart.ListCSV()
    {
    echo -n "${_obj_qpkgs_opskstart_array_[*]+"${_obj_qpkgs_opskstart_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpSkStart.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opskstart_array_[@]+"${_obj_qpkgs_opskstart_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opskstart_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opskstart_array_[*]+"${_obj_qpkgs_opskstart_array_[@]}"} ]] && _obj_qpkgs_opskstart_array_=()
    }
QPKGs.OpSkStart.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opskstart_size_=$2
    else
        echo -n $_obj_qpkgs_opskstart_size_
    fi
    }
QPKGs.OpSkStart.Init

QPKGs.OpToStop.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_optostop_array_[*]+"${_obj_qpkgs_optostop_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_optostop_array_+=("$item")
        fi
    done
    }
QPKGs.OpToStop.Array()
    {
    echo -n "${_obj_qpkgs_optostop_array_[@]+"${_obj_qpkgs_optostop_array_[@]}"}"
    }
QPKGs.OpToStop.Count()
    {
    echo "${#_obj_qpkgs_optostop_array_[@]}"
    }
QPKGs.OpToStop.Exist()
    {
    [[ ${_obj_qpkgs_optostop_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpToStop.First()
    {
    echo "${_obj_qpkgs_optostop_array_[0]}"
    }
QPKGs.OpToStop.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_optostop_array_[@]} ]] && index=${#_obj_qpkgs_optostop_array_[@]}
    echo -n "${_obj_qpkgs_optostop_array_[((index-1))]}"
    }
QPKGs.OpToStop.Init()
    {
    _obj_qpkgs_optostop_size_=0
    _obj_qpkgs_optostop_array_=()
    _obj_qpkgs_optostop_array_index_=1
    }
QPKGs.OpToStop.IsAny()
    {
    [[ ${#_obj_qpkgs_optostop_array_[@]} -gt 0 ]]
    }
QPKGs.OpToStop.IsNone()
    {
    [[ ${#_obj_qpkgs_optostop_array_[@]} -eq 0 ]]
    }
QPKGs.OpToStop.List()
    {
    echo -n "${_obj_qpkgs_optostop_array_[*]+"${_obj_qpkgs_optostop_array_[@]}"}"
    }
QPKGs.OpToStop.ListCSV()
    {
    echo -n "${_obj_qpkgs_optostop_array_[*]+"${_obj_qpkgs_optostop_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpToStop.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_optostop_array_[@]+"${_obj_qpkgs_optostop_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_optostop_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_optostop_array_[*]+"${_obj_qpkgs_optostop_array_[@]}"} ]] && _obj_qpkgs_optostop_array_=()
    }
QPKGs.OpToStop.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_optostop_size_=$2
    else
        echo -n $_obj_qpkgs_optostop_size_
    fi
    }
QPKGs.OpToStop.Init

QPKGs.OpOkStop.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opokstop_array_[*]+"${_obj_qpkgs_opokstop_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opokstop_array_+=("$item")
        fi
    done
    }
QPKGs.OpOkStop.Array()
    {
    echo -n "${_obj_qpkgs_opokstop_array_[@]+"${_obj_qpkgs_opokstop_array_[@]}"}"
    }
QPKGs.OpOkStop.Count()
    {
    echo "${#_obj_qpkgs_opokstop_array_[@]}"
    }
QPKGs.OpOkStop.Exist()
    {
    [[ ${_obj_qpkgs_opokstop_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpOkStop.First()
    {
    echo "${_obj_qpkgs_opokstop_array_[0]}"
    }
QPKGs.OpOkStop.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opokstop_array_[@]} ]] && index=${#_obj_qpkgs_opokstop_array_[@]}
    echo -n "${_obj_qpkgs_opokstop_array_[((index-1))]}"
    }
QPKGs.OpOkStop.Init()
    {
    _obj_qpkgs_opokstop_size_=0
    _obj_qpkgs_opokstop_array_=()
    _obj_qpkgs_opokstop_array_index_=1
    }
QPKGs.OpOkStop.IsAny()
    {
    [[ ${#_obj_qpkgs_opokstop_array_[@]} -gt 0 ]]
    }
QPKGs.OpOkStop.IsNone()
    {
    [[ ${#_obj_qpkgs_opokstop_array_[@]} -eq 0 ]]
    }
QPKGs.OpOkStop.List()
    {
    echo -n "${_obj_qpkgs_opokstop_array_[*]+"${_obj_qpkgs_opokstop_array_[@]}"}"
    }
QPKGs.OpOkStop.ListCSV()
    {
    echo -n "${_obj_qpkgs_opokstop_array_[*]+"${_obj_qpkgs_opokstop_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpOkStop.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opokstop_array_[@]+"${_obj_qpkgs_opokstop_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opokstop_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opokstop_array_[*]+"${_obj_qpkgs_opokstop_array_[@]}"} ]] && _obj_qpkgs_opokstop_array_=()
    }
QPKGs.OpOkStop.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opokstop_size_=$2
    else
        echo -n $_obj_qpkgs_opokstop_size_
    fi
    }
QPKGs.OpOkStop.Init

QPKGs.OpErStop.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_operstop_array_[*]+"${_obj_qpkgs_operstop_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_operstop_array_+=("$item")
        fi
    done
    }
QPKGs.OpErStop.Array()
    {
    echo -n "${_obj_qpkgs_operstop_array_[@]+"${_obj_qpkgs_operstop_array_[@]}"}"
    }
QPKGs.OpErStop.Count()
    {
    echo "${#_obj_qpkgs_operstop_array_[@]}"
    }
QPKGs.OpErStop.Exist()
    {
    [[ ${_obj_qpkgs_operstop_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpErStop.First()
    {
    echo "${_obj_qpkgs_operstop_array_[0]}"
    }
QPKGs.OpErStop.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_operstop_array_[@]} ]] && index=${#_obj_qpkgs_operstop_array_[@]}
    echo -n "${_obj_qpkgs_operstop_array_[((index-1))]}"
    }
QPKGs.OpErStop.Init()
    {
    _obj_qpkgs_operstop_size_=0
    _obj_qpkgs_operstop_array_=()
    _obj_qpkgs_operstop_array_index_=1
    }
QPKGs.OpErStop.IsAny()
    {
    [[ ${#_obj_qpkgs_operstop_array_[@]} -gt 0 ]]
    }
QPKGs.OpErStop.IsNone()
    {
    [[ ${#_obj_qpkgs_operstop_array_[@]} -eq 0 ]]
    }
QPKGs.OpErStop.List()
    {
    echo -n "${_obj_qpkgs_operstop_array_[*]+"${_obj_qpkgs_operstop_array_[@]}"}"
    }
QPKGs.OpErStop.ListCSV()
    {
    echo -n "${_obj_qpkgs_operstop_array_[*]+"${_obj_qpkgs_operstop_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpErStop.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_operstop_array_[@]+"${_obj_qpkgs_operstop_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_operstop_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_operstop_array_[*]+"${_obj_qpkgs_operstop_array_[@]}"} ]] && _obj_qpkgs_operstop_array_=()
    }
QPKGs.OpErStop.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_operstop_size_=$2
    else
        echo -n $_obj_qpkgs_operstop_size_
    fi
    }
QPKGs.OpErStop.Init

QPKGs.OpSkStop.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opskstop_array_[*]+"${_obj_qpkgs_opskstop_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opskstop_array_+=("$item")
        fi
    done
    }
QPKGs.OpSkStop.Array()
    {
    echo -n "${_obj_qpkgs_opskstop_array_[@]+"${_obj_qpkgs_opskstop_array_[@]}"}"
    }
QPKGs.OpSkStop.Count()
    {
    echo "${#_obj_qpkgs_opskstop_array_[@]}"
    }
QPKGs.OpSkStop.Exist()
    {
    [[ ${_obj_qpkgs_opskstop_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpSkStop.First()
    {
    echo "${_obj_qpkgs_opskstop_array_[0]}"
    }
QPKGs.OpSkStop.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opskstop_array_[@]} ]] && index=${#_obj_qpkgs_opskstop_array_[@]}
    echo -n "${_obj_qpkgs_opskstop_array_[((index-1))]}"
    }
QPKGs.OpSkStop.Init()
    {
    _obj_qpkgs_opskstop_size_=0
    _obj_qpkgs_opskstop_array_=()
    _obj_qpkgs_opskstop_array_index_=1
    }
QPKGs.OpSkStop.IsAny()
    {
    [[ ${#_obj_qpkgs_opskstop_array_[@]} -gt 0 ]]
    }
QPKGs.OpSkStop.IsNone()
    {
    [[ ${#_obj_qpkgs_opskstop_array_[@]} -eq 0 ]]
    }
QPKGs.OpSkStop.List()
    {
    echo -n "${_obj_qpkgs_opskstop_array_[*]+"${_obj_qpkgs_opskstop_array_[@]}"}"
    }
QPKGs.OpSkStop.ListCSV()
    {
    echo -n "${_obj_qpkgs_opskstop_array_[*]+"${_obj_qpkgs_opskstop_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpSkStop.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opskstop_array_[@]+"${_obj_qpkgs_opskstop_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opskstop_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opskstop_array_[*]+"${_obj_qpkgs_opskstop_array_[@]}"} ]] && _obj_qpkgs_opskstop_array_=()
    }
QPKGs.OpSkStop.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opskstop_size_=$2
    else
        echo -n $_obj_qpkgs_opskstop_size_
    fi
    }
QPKGs.OpSkStop.Init

QPKGs.OpToUninstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_optouninstall_array_[*]+"${_obj_qpkgs_optouninstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_optouninstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpToUninstall.Array()
    {
    echo -n "${_obj_qpkgs_optouninstall_array_[@]+"${_obj_qpkgs_optouninstall_array_[@]}"}"
    }
QPKGs.OpToUninstall.Count()
    {
    echo "${#_obj_qpkgs_optouninstall_array_[@]}"
    }
QPKGs.OpToUninstall.Exist()
    {
    [[ ${_obj_qpkgs_optouninstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpToUninstall.First()
    {
    echo "${_obj_qpkgs_optouninstall_array_[0]}"
    }
QPKGs.OpToUninstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_optouninstall_array_[@]} ]] && index=${#_obj_qpkgs_optouninstall_array_[@]}
    echo -n "${_obj_qpkgs_optouninstall_array_[((index-1))]}"
    }
QPKGs.OpToUninstall.Init()
    {
    _obj_qpkgs_optouninstall_size_=0
    _obj_qpkgs_optouninstall_array_=()
    _obj_qpkgs_optouninstall_array_index_=1
    }
QPKGs.OpToUninstall.IsAny()
    {
    [[ ${#_obj_qpkgs_optouninstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpToUninstall.IsNone()
    {
    [[ ${#_obj_qpkgs_optouninstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpToUninstall.List()
    {
    echo -n "${_obj_qpkgs_optouninstall_array_[*]+"${_obj_qpkgs_optouninstall_array_[@]}"}"
    }
QPKGs.OpToUninstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_optouninstall_array_[*]+"${_obj_qpkgs_optouninstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpToUninstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_optouninstall_array_[@]+"${_obj_qpkgs_optouninstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_optouninstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_optouninstall_array_[*]+"${_obj_qpkgs_optouninstall_array_[@]}"} ]] && _obj_qpkgs_optouninstall_array_=()
    }
QPKGs.OpToUninstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_optouninstall_size_=$2
    else
        echo -n $_obj_qpkgs_optouninstall_size_
    fi
    }
QPKGs.OpToUninstall.Init

QPKGs.OpOkUninstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opokuninstall_array_[*]+"${_obj_qpkgs_opokuninstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opokuninstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpOkUninstall.Array()
    {
    echo -n "${_obj_qpkgs_opokuninstall_array_[@]+"${_obj_qpkgs_opokuninstall_array_[@]}"}"
    }
QPKGs.OpOkUninstall.Count()
    {
    echo "${#_obj_qpkgs_opokuninstall_array_[@]}"
    }
QPKGs.OpOkUninstall.Exist()
    {
    [[ ${_obj_qpkgs_opokuninstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpOkUninstall.First()
    {
    echo "${_obj_qpkgs_opokuninstall_array_[0]}"
    }
QPKGs.OpOkUninstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opokuninstall_array_[@]} ]] && index=${#_obj_qpkgs_opokuninstall_array_[@]}
    echo -n "${_obj_qpkgs_opokuninstall_array_[((index-1))]}"
    }
QPKGs.OpOkUninstall.Init()
    {
    _obj_qpkgs_opokuninstall_size_=0
    _obj_qpkgs_opokuninstall_array_=()
    _obj_qpkgs_opokuninstall_array_index_=1
    }
QPKGs.OpOkUninstall.IsAny()
    {
    [[ ${#_obj_qpkgs_opokuninstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpOkUninstall.IsNone()
    {
    [[ ${#_obj_qpkgs_opokuninstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpOkUninstall.List()
    {
    echo -n "${_obj_qpkgs_opokuninstall_array_[*]+"${_obj_qpkgs_opokuninstall_array_[@]}"}"
    }
QPKGs.OpOkUninstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_opokuninstall_array_[*]+"${_obj_qpkgs_opokuninstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpOkUninstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opokuninstall_array_[@]+"${_obj_qpkgs_opokuninstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opokuninstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opokuninstall_array_[*]+"${_obj_qpkgs_opokuninstall_array_[@]}"} ]] && _obj_qpkgs_opokuninstall_array_=()
    }
QPKGs.OpOkUninstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opokuninstall_size_=$2
    else
        echo -n $_obj_qpkgs_opokuninstall_size_
    fi
    }
QPKGs.OpOkUninstall.Init

QPKGs.OpErUninstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_operuninstall_array_[*]+"${_obj_qpkgs_operuninstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_operuninstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpErUninstall.Array()
    {
    echo -n "${_obj_qpkgs_operuninstall_array_[@]+"${_obj_qpkgs_operuninstall_array_[@]}"}"
    }
QPKGs.OpErUninstall.Count()
    {
    echo "${#_obj_qpkgs_operuninstall_array_[@]}"
    }
QPKGs.OpErUninstall.Exist()
    {
    [[ ${_obj_qpkgs_operuninstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpErUninstall.First()
    {
    echo "${_obj_qpkgs_operuninstall_array_[0]}"
    }
QPKGs.OpErUninstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_operuninstall_array_[@]} ]] && index=${#_obj_qpkgs_operuninstall_array_[@]}
    echo -n "${_obj_qpkgs_operuninstall_array_[((index-1))]}"
    }
QPKGs.OpErUninstall.Init()
    {
    _obj_qpkgs_operuninstall_size_=0
    _obj_qpkgs_operuninstall_array_=()
    _obj_qpkgs_operuninstall_array_index_=1
    }
QPKGs.OpErUninstall.IsAny()
    {
    [[ ${#_obj_qpkgs_operuninstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpErUninstall.IsNone()
    {
    [[ ${#_obj_qpkgs_operuninstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpErUninstall.List()
    {
    echo -n "${_obj_qpkgs_operuninstall_array_[*]+"${_obj_qpkgs_operuninstall_array_[@]}"}"
    }
QPKGs.OpErUninstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_operuninstall_array_[*]+"${_obj_qpkgs_operuninstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpErUninstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_operuninstall_array_[@]+"${_obj_qpkgs_operuninstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_operuninstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_operuninstall_array_[*]+"${_obj_qpkgs_operuninstall_array_[@]}"} ]] && _obj_qpkgs_operuninstall_array_=()
    }
QPKGs.OpErUninstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_operuninstall_size_=$2
    else
        echo -n $_obj_qpkgs_operuninstall_size_
    fi
    }
QPKGs.OpErUninstall.Init

QPKGs.OpSkUninstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opskuninstall_array_[*]+"${_obj_qpkgs_opskuninstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opskuninstall_array_+=("$item")
        fi
    done
    }
QPKGs.OpSkUninstall.Array()
    {
    echo -n "${_obj_qpkgs_opskuninstall_array_[@]+"${_obj_qpkgs_opskuninstall_array_[@]}"}"
    }
QPKGs.OpSkUninstall.Count()
    {
    echo "${#_obj_qpkgs_opskuninstall_array_[@]}"
    }
QPKGs.OpSkUninstall.Exist()
    {
    [[ ${_obj_qpkgs_opskuninstall_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpSkUninstall.First()
    {
    echo "${_obj_qpkgs_opskuninstall_array_[0]}"
    }
QPKGs.OpSkUninstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opskuninstall_array_[@]} ]] && index=${#_obj_qpkgs_opskuninstall_array_[@]}
    echo -n "${_obj_qpkgs_opskuninstall_array_[((index-1))]}"
    }
QPKGs.OpSkUninstall.Init()
    {
    _obj_qpkgs_opskuninstall_size_=0
    _obj_qpkgs_opskuninstall_array_=()
    _obj_qpkgs_opskuninstall_array_index_=1
    }
QPKGs.OpSkUninstall.IsAny()
    {
    [[ ${#_obj_qpkgs_opskuninstall_array_[@]} -gt 0 ]]
    }
QPKGs.OpSkUninstall.IsNone()
    {
    [[ ${#_obj_qpkgs_opskuninstall_array_[@]} -eq 0 ]]
    }
QPKGs.OpSkUninstall.List()
    {
    echo -n "${_obj_qpkgs_opskuninstall_array_[*]+"${_obj_qpkgs_opskuninstall_array_[@]}"}"
    }
QPKGs.OpSkUninstall.ListCSV()
    {
    echo -n "${_obj_qpkgs_opskuninstall_array_[*]+"${_obj_qpkgs_opskuninstall_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpSkUninstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opskuninstall_array_[@]+"${_obj_qpkgs_opskuninstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opskuninstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opskuninstall_array_[*]+"${_obj_qpkgs_opskuninstall_array_[@]}"} ]] && _obj_qpkgs_opskuninstall_array_=()
    }
QPKGs.OpSkUninstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opskuninstall_size_=$2
    else
        echo -n $_obj_qpkgs_opskuninstall_size_
    fi
    }
QPKGs.OpSkUninstall.Init

QPKGs.OpToUpgrade.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_optoupgrade_array_[*]+"${_obj_qpkgs_optoupgrade_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_optoupgrade_array_+=("$item")
        fi
    done
    }
QPKGs.OpToUpgrade.Array()
    {
    echo -n "${_obj_qpkgs_optoupgrade_array_[@]+"${_obj_qpkgs_optoupgrade_array_[@]}"}"
    }
QPKGs.OpToUpgrade.Count()
    {
    echo "${#_obj_qpkgs_optoupgrade_array_[@]}"
    }
QPKGs.OpToUpgrade.Exist()
    {
    [[ ${_obj_qpkgs_optoupgrade_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpToUpgrade.First()
    {
    echo "${_obj_qpkgs_optoupgrade_array_[0]}"
    }
QPKGs.OpToUpgrade.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_optoupgrade_array_[@]} ]] && index=${#_obj_qpkgs_optoupgrade_array_[@]}
    echo -n "${_obj_qpkgs_optoupgrade_array_[((index-1))]}"
    }
QPKGs.OpToUpgrade.Init()
    {
    _obj_qpkgs_optoupgrade_size_=0
    _obj_qpkgs_optoupgrade_array_=()
    _obj_qpkgs_optoupgrade_array_index_=1
    }
QPKGs.OpToUpgrade.IsAny()
    {
    [[ ${#_obj_qpkgs_optoupgrade_array_[@]} -gt 0 ]]
    }
QPKGs.OpToUpgrade.IsNone()
    {
    [[ ${#_obj_qpkgs_optoupgrade_array_[@]} -eq 0 ]]
    }
QPKGs.OpToUpgrade.List()
    {
    echo -n "${_obj_qpkgs_optoupgrade_array_[*]+"${_obj_qpkgs_optoupgrade_array_[@]}"}"
    }
QPKGs.OpToUpgrade.ListCSV()
    {
    echo -n "${_obj_qpkgs_optoupgrade_array_[*]+"${_obj_qpkgs_optoupgrade_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpToUpgrade.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_optoupgrade_array_[@]+"${_obj_qpkgs_optoupgrade_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_optoupgrade_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_optoupgrade_array_[*]+"${_obj_qpkgs_optoupgrade_array_[@]}"} ]] && _obj_qpkgs_optoupgrade_array_=()
    }
QPKGs.OpToUpgrade.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_optoupgrade_size_=$2
    else
        echo -n $_obj_qpkgs_optoupgrade_size_
    fi
    }
QPKGs.OpToUpgrade.Init

QPKGs.OpOkUpgrade.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opokupgrade_array_[*]+"${_obj_qpkgs_opokupgrade_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opokupgrade_array_+=("$item")
        fi
    done
    }
QPKGs.OpOkUpgrade.Array()
    {
    echo -n "${_obj_qpkgs_opokupgrade_array_[@]+"${_obj_qpkgs_opokupgrade_array_[@]}"}"
    }
QPKGs.OpOkUpgrade.Count()
    {
    echo "${#_obj_qpkgs_opokupgrade_array_[@]}"
    }
QPKGs.OpOkUpgrade.Exist()
    {
    [[ ${_obj_qpkgs_opokupgrade_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpOkUpgrade.First()
    {
    echo "${_obj_qpkgs_opokupgrade_array_[0]}"
    }
QPKGs.OpOkUpgrade.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opokupgrade_array_[@]} ]] && index=${#_obj_qpkgs_opokupgrade_array_[@]}
    echo -n "${_obj_qpkgs_opokupgrade_array_[((index-1))]}"
    }
QPKGs.OpOkUpgrade.Init()
    {
    _obj_qpkgs_opokupgrade_size_=0
    _obj_qpkgs_opokupgrade_array_=()
    _obj_qpkgs_opokupgrade_array_index_=1
    }
QPKGs.OpOkUpgrade.IsAny()
    {
    [[ ${#_obj_qpkgs_opokupgrade_array_[@]} -gt 0 ]]
    }
QPKGs.OpOkUpgrade.IsNone()
    {
    [[ ${#_obj_qpkgs_opokupgrade_array_[@]} -eq 0 ]]
    }
QPKGs.OpOkUpgrade.List()
    {
    echo -n "${_obj_qpkgs_opokupgrade_array_[*]+"${_obj_qpkgs_opokupgrade_array_[@]}"}"
    }
QPKGs.OpOkUpgrade.ListCSV()
    {
    echo -n "${_obj_qpkgs_opokupgrade_array_[*]+"${_obj_qpkgs_opokupgrade_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpOkUpgrade.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opokupgrade_array_[@]+"${_obj_qpkgs_opokupgrade_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opokupgrade_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opokupgrade_array_[*]+"${_obj_qpkgs_opokupgrade_array_[@]}"} ]] && _obj_qpkgs_opokupgrade_array_=()
    }
QPKGs.OpOkUpgrade.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opokupgrade_size_=$2
    else
        echo -n $_obj_qpkgs_opokupgrade_size_
    fi
    }
QPKGs.OpOkUpgrade.Init

QPKGs.OpErUpgrade.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_operupgrade_array_[*]+"${_obj_qpkgs_operupgrade_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_operupgrade_array_+=("$item")
        fi
    done
    }
QPKGs.OpErUpgrade.Array()
    {
    echo -n "${_obj_qpkgs_operupgrade_array_[@]+"${_obj_qpkgs_operupgrade_array_[@]}"}"
    }
QPKGs.OpErUpgrade.Count()
    {
    echo "${#_obj_qpkgs_operupgrade_array_[@]}"
    }
QPKGs.OpErUpgrade.Exist()
    {
    [[ ${_obj_qpkgs_operupgrade_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpErUpgrade.First()
    {
    echo "${_obj_qpkgs_operupgrade_array_[0]}"
    }
QPKGs.OpErUpgrade.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_operupgrade_array_[@]} ]] && index=${#_obj_qpkgs_operupgrade_array_[@]}
    echo -n "${_obj_qpkgs_operupgrade_array_[((index-1))]}"
    }
QPKGs.OpErUpgrade.Init()
    {
    _obj_qpkgs_operupgrade_size_=0
    _obj_qpkgs_operupgrade_array_=()
    _obj_qpkgs_operupgrade_array_index_=1
    }
QPKGs.OpErUpgrade.IsAny()
    {
    [[ ${#_obj_qpkgs_operupgrade_array_[@]} -gt 0 ]]
    }
QPKGs.OpErUpgrade.IsNone()
    {
    [[ ${#_obj_qpkgs_operupgrade_array_[@]} -eq 0 ]]
    }
QPKGs.OpErUpgrade.List()
    {
    echo -n "${_obj_qpkgs_operupgrade_array_[*]+"${_obj_qpkgs_operupgrade_array_[@]}"}"
    }
QPKGs.OpErUpgrade.ListCSV()
    {
    echo -n "${_obj_qpkgs_operupgrade_array_[*]+"${_obj_qpkgs_operupgrade_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpErUpgrade.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_operupgrade_array_[@]+"${_obj_qpkgs_operupgrade_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_operupgrade_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_operupgrade_array_[*]+"${_obj_qpkgs_operupgrade_array_[@]}"} ]] && _obj_qpkgs_operupgrade_array_=()
    }
QPKGs.OpErUpgrade.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_operupgrade_size_=$2
    else
        echo -n $_obj_qpkgs_operupgrade_size_
    fi
    }
QPKGs.OpErUpgrade.Init

QPKGs.OpSkUpgrade.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_qpkgs_opskupgrade_array_[*]+"${_obj_qpkgs_opskupgrade_array_[@]}"} " != *"$item"* ]]; then
            _obj_qpkgs_opskupgrade_array_+=("$item")
        fi
    done
    }
QPKGs.OpSkUpgrade.Array()
    {
    echo -n "${_obj_qpkgs_opskupgrade_array_[@]+"${_obj_qpkgs_opskupgrade_array_[@]}"}"
    }
QPKGs.OpSkUpgrade.Count()
    {
    echo "${#_obj_qpkgs_opskupgrade_array_[@]}"
    }
QPKGs.OpSkUpgrade.Exist()
    {
    [[ ${_obj_qpkgs_opskupgrade_array_[*]:-} == *"$1"* ]]
    }
QPKGs.OpSkUpgrade.First()
    {
    echo "${_obj_qpkgs_opskupgrade_array_[0]}"
    }
QPKGs.OpSkUpgrade.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_qpkgs_opskupgrade_array_[@]} ]] && index=${#_obj_qpkgs_opskupgrade_array_[@]}
    echo -n "${_obj_qpkgs_opskupgrade_array_[((index-1))]}"
    }
QPKGs.OpSkUpgrade.Init()
    {
    _obj_qpkgs_opskupgrade_size_=0
    _obj_qpkgs_opskupgrade_array_=()
    _obj_qpkgs_opskupgrade_array_index_=1
    }
QPKGs.OpSkUpgrade.IsAny()
    {
    [[ ${#_obj_qpkgs_opskupgrade_array_[@]} -gt 0 ]]
    }
QPKGs.OpSkUpgrade.IsNone()
    {
    [[ ${#_obj_qpkgs_opskupgrade_array_[@]} -eq 0 ]]
    }
QPKGs.OpSkUpgrade.List()
    {
    echo -n "${_obj_qpkgs_opskupgrade_array_[*]+"${_obj_qpkgs_opskupgrade_array_[@]}"}"
    }
QPKGs.OpSkUpgrade.ListCSV()
    {
    echo -n "${_obj_qpkgs_opskupgrade_array_[*]+"${_obj_qpkgs_opskupgrade_array_[@]}"}" | tr ' ' ','
    }
QPKGs.OpSkUpgrade.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_qpkgs_opskupgrade_array_[@]+"${_obj_qpkgs_opskupgrade_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_qpkgs_opskupgrade_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_qpkgs_opskupgrade_array_[*]+"${_obj_qpkgs_opskupgrade_array_[@]}"} ]] && _obj_qpkgs_opskupgrade_array_=()
    }
QPKGs.OpSkUpgrade.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_qpkgs_opskupgrade_size_=$2
    else
        echo -n $_obj_qpkgs_opskupgrade_size_
    fi
    }
QPKGs.OpSkUpgrade.Init

IPKGs.OpToDownload.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_ipkgs_optodownload_array_[*]+"${_obj_ipkgs_optodownload_array_[@]}"} " != *"$item"* ]]; then
            _obj_ipkgs_optodownload_array_+=("$item")
        fi
    done
    }
IPKGs.OpToDownload.Array()
    {
    echo -n "${_obj_ipkgs_optodownload_array_[@]+"${_obj_ipkgs_optodownload_array_[@]}"}"
    }
IPKGs.OpToDownload.Count()
    {
    echo "${#_obj_ipkgs_optodownload_array_[@]}"
    }
IPKGs.OpToDownload.Exist()
    {
    [[ ${_obj_ipkgs_optodownload_array_[*]:-} == *"$1"* ]]
    }
IPKGs.OpToDownload.First()
    {
    echo "${_obj_ipkgs_optodownload_array_[0]}"
    }
IPKGs.OpToDownload.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_ipkgs_optodownload_array_[@]} ]] && index=${#_obj_ipkgs_optodownload_array_[@]}
    echo -n "${_obj_ipkgs_optodownload_array_[((index-1))]}"
    }
IPKGs.OpToDownload.Init()
    {
    _obj_ipkgs_optodownload_size_=0
    _obj_ipkgs_optodownload_array_=()
    _obj_ipkgs_optodownload_array_index_=1
    }
IPKGs.OpToDownload.IsAny()
    {
    [[ ${#_obj_ipkgs_optodownload_array_[@]} -gt 0 ]]
    }
IPKGs.OpToDownload.IsNone()
    {
    [[ ${#_obj_ipkgs_optodownload_array_[@]} -eq 0 ]]
    }
IPKGs.OpToDownload.List()
    {
    echo -n "${_obj_ipkgs_optodownload_array_[*]+"${_obj_ipkgs_optodownload_array_[@]}"}"
    }
IPKGs.OpToDownload.ListCSV()
    {
    echo -n "${_obj_ipkgs_optodownload_array_[*]+"${_obj_ipkgs_optodownload_array_[@]}"}" | tr ' ' ','
    }
IPKGs.OpToDownload.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_ipkgs_optodownload_array_[@]+"${_obj_ipkgs_optodownload_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_ipkgs_optodownload_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_ipkgs_optodownload_array_[*]+"${_obj_ipkgs_optodownload_array_[@]}"} ]] && _obj_ipkgs_optodownload_array_=()
    }
IPKGs.OpToDownload.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_ipkgs_optodownload_size_=$2
    else
        echo -n $_obj_ipkgs_optodownload_size_
    fi
    }
IPKGs.OpToDownload.Init

IPKGs.OpToInstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_ipkgs_optoinstall_array_[*]+"${_obj_ipkgs_optoinstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_ipkgs_optoinstall_array_+=("$item")
        fi
    done
    }
IPKGs.OpToInstall.Array()
    {
    echo -n "${_obj_ipkgs_optoinstall_array_[@]+"${_obj_ipkgs_optoinstall_array_[@]}"}"
    }
IPKGs.OpToInstall.Count()
    {
    echo "${#_obj_ipkgs_optoinstall_array_[@]}"
    }
IPKGs.OpToInstall.Exist()
    {
    [[ ${_obj_ipkgs_optoinstall_array_[*]:-} == *"$1"* ]]
    }
IPKGs.OpToInstall.First()
    {
    echo "${_obj_ipkgs_optoinstall_array_[0]}"
    }
IPKGs.OpToInstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_ipkgs_optoinstall_array_[@]} ]] && index=${#_obj_ipkgs_optoinstall_array_[@]}
    echo -n "${_obj_ipkgs_optoinstall_array_[((index-1))]}"
    }
IPKGs.OpToInstall.Init()
    {
    _obj_ipkgs_optoinstall_size_=0
    _obj_ipkgs_optoinstall_array_=()
    _obj_ipkgs_optoinstall_array_index_=1
    }
IPKGs.OpToInstall.IsAny()
    {
    [[ ${#_obj_ipkgs_optoinstall_array_[@]} -gt 0 ]]
    }
IPKGs.OpToInstall.IsNone()
    {
    [[ ${#_obj_ipkgs_optoinstall_array_[@]} -eq 0 ]]
    }
IPKGs.OpToInstall.List()
    {
    echo -n "${_obj_ipkgs_optoinstall_array_[*]+"${_obj_ipkgs_optoinstall_array_[@]}"}"
    }
IPKGs.OpToInstall.ListCSV()
    {
    echo -n "${_obj_ipkgs_optoinstall_array_[*]+"${_obj_ipkgs_optoinstall_array_[@]}"}" | tr ' ' ','
    }
IPKGs.OpToInstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_ipkgs_optoinstall_array_[@]+"${_obj_ipkgs_optoinstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_ipkgs_optoinstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_ipkgs_optoinstall_array_[*]+"${_obj_ipkgs_optoinstall_array_[@]}"} ]] && _obj_ipkgs_optoinstall_array_=()
    }
IPKGs.OpToInstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_ipkgs_optoinstall_size_=$2
    else
        echo -n $_obj_ipkgs_optoinstall_size_
    fi
    }
IPKGs.OpToInstall.Init

IPKGs.OpToUninstall.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_ipkgs_optouninstall_array_[*]+"${_obj_ipkgs_optouninstall_array_[@]}"} " != *"$item"* ]]; then
            _obj_ipkgs_optouninstall_array_+=("$item")
        fi
    done
    }
IPKGs.OpToUninstall.Array()
    {
    echo -n "${_obj_ipkgs_optouninstall_array_[@]+"${_obj_ipkgs_optouninstall_array_[@]}"}"
    }
IPKGs.OpToUninstall.Count()
    {
    echo "${#_obj_ipkgs_optouninstall_array_[@]}"
    }
IPKGs.OpToUninstall.Exist()
    {
    [[ ${_obj_ipkgs_optouninstall_array_[*]:-} == *"$1"* ]]
    }
IPKGs.OpToUninstall.First()
    {
    echo "${_obj_ipkgs_optouninstall_array_[0]}"
    }
IPKGs.OpToUninstall.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_ipkgs_optouninstall_array_[@]} ]] && index=${#_obj_ipkgs_optouninstall_array_[@]}
    echo -n "${_obj_ipkgs_optouninstall_array_[((index-1))]}"
    }
IPKGs.OpToUninstall.Init()
    {
    _obj_ipkgs_optouninstall_size_=0
    _obj_ipkgs_optouninstall_array_=()
    _obj_ipkgs_optouninstall_array_index_=1
    }
IPKGs.OpToUninstall.IsAny()
    {
    [[ ${#_obj_ipkgs_optouninstall_array_[@]} -gt 0 ]]
    }
IPKGs.OpToUninstall.IsNone()
    {
    [[ ${#_obj_ipkgs_optouninstall_array_[@]} -eq 0 ]]
    }
IPKGs.OpToUninstall.List()
    {
    echo -n "${_obj_ipkgs_optouninstall_array_[*]+"${_obj_ipkgs_optouninstall_array_[@]}"}"
    }
IPKGs.OpToUninstall.ListCSV()
    {
    echo -n "${_obj_ipkgs_optouninstall_array_[*]+"${_obj_ipkgs_optouninstall_array_[@]}"}" | tr ' ' ','
    }
IPKGs.OpToUninstall.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_ipkgs_optouninstall_array_[@]+"${_obj_ipkgs_optouninstall_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_ipkgs_optouninstall_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_ipkgs_optouninstall_array_[*]+"${_obj_ipkgs_optouninstall_array_[@]}"} ]] && _obj_ipkgs_optouninstall_array_=()
    }
IPKGs.OpToUninstall.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_ipkgs_optouninstall_size_=$2
    else
        echo -n $_obj_ipkgs_optouninstall_size_
    fi
    }
IPKGs.OpToUninstall.Init

IPKGs.OpToUpgrade.Add()
    {
    local array=(${1})
    [[ ${#array[@]} -eq 0 ]] && return
    local item=''
    for item in "${array[@]:-}"; do
        if [[ " ${_obj_ipkgs_optoupgrade_array_[*]+"${_obj_ipkgs_optoupgrade_array_[@]}"} " != *"$item"* ]]; then
            _obj_ipkgs_optoupgrade_array_+=("$item")
        fi
    done
    }
IPKGs.OpToUpgrade.Array()
    {
    echo -n "${_obj_ipkgs_optoupgrade_array_[@]+"${_obj_ipkgs_optoupgrade_array_[@]}"}"
    }
IPKGs.OpToUpgrade.Count()
    {
    echo "${#_obj_ipkgs_optoupgrade_array_[@]}"
    }
IPKGs.OpToUpgrade.Exist()
    {
    [[ ${_obj_ipkgs_optoupgrade_array_[*]:-} == *"$1"* ]]
    }
IPKGs.OpToUpgrade.First()
    {
    echo "${_obj_ipkgs_optoupgrade_array_[0]}"
    }
IPKGs.OpToUpgrade.GetItem()
    {
    local -i index="$1"
    [[ $index -lt 1 ]] && index=1
    [[ $index -gt ${#_obj_ipkgs_optoupgrade_array_[@]} ]] && index=${#_obj_ipkgs_optoupgrade_array_[@]}
    echo -n "${_obj_ipkgs_optoupgrade_array_[((index-1))]}"
    }
IPKGs.OpToUpgrade.Init()
    {
    _obj_ipkgs_optoupgrade_size_=0
    _obj_ipkgs_optoupgrade_array_=()
    _obj_ipkgs_optoupgrade_array_index_=1
    }
IPKGs.OpToUpgrade.IsAny()
    {
    [[ ${#_obj_ipkgs_optoupgrade_array_[@]} -gt 0 ]]
    }
IPKGs.OpToUpgrade.IsNone()
    {
    [[ ${#_obj_ipkgs_optoupgrade_array_[@]} -eq 0 ]]
    }
IPKGs.OpToUpgrade.List()
    {
    echo -n "${_obj_ipkgs_optoupgrade_array_[*]+"${_obj_ipkgs_optoupgrade_array_[@]}"}"
    }
IPKGs.OpToUpgrade.ListCSV()
    {
    echo -n "${_obj_ipkgs_optoupgrade_array_[*]+"${_obj_ipkgs_optoupgrade_array_[@]}"}" | tr ' ' ','
    }
IPKGs.OpToUpgrade.Remove()
    {
    local argument_array=(${1})
    local temp_array=()
    local argument=''
    local item=''
    local matched=false
    for item in "${_obj_ipkgs_optoupgrade_array_[@]+"${_obj_ipkgs_optoupgrade_array_[@]}"}"; do
        matched=false
        for argument in "${argument_array[@]+"${argument_array[@]}"}"; do
            if [[ $argument = $item ]]; then
                matched=true; break
            fi
        done
        [[ $matched = false ]] && temp_array+=("$item")
    done
    _obj_ipkgs_optoupgrade_array_=("${temp_array[@]+"${temp_array[@]}"}")
    [[ -z ${_obj_ipkgs_optoupgrade_array_[*]+"${_obj_ipkgs_optoupgrade_array_[@]}"} ]] && _obj_ipkgs_optoupgrade_array_=()
    }
IPKGs.OpToUpgrade.Size()
    {
    if [[ -n ${1:-} && ${1:-} = "=" ]]; then
        _obj_ipkgs_optoupgrade_size_=$2
    else
        echo -n $_obj_ipkgs_optoupgrade_size_
    fi
    }
IPKGs.OpToUpgrade.Init

