Observed issues:

	* When attempting to view file versions with-and-without correct syntax fails in several ways:
		-------------------------------------------------------------------------------------------------------------------------
		[~] # sherpa list versions
		proc: env ...
		proc: args ...
		-------------------------------------------------------------------------------------------------------------------------
		[~] # sherpa versions
		proc: env ...
		proc: args ...
		proc: objects ...
		proc: QPKGs ...
		sherpa v240529-unstable

		derp: unknown argument "versions". Please check the arguments again.

		-------------------------------------------------------------------------------------------------------------------------
		[~] # sherpa show versions
		proc: env ...
		proc: args ...
		proc: objects ...
		proc: QPKGs ...
		/share/CACHEDEV1_DATA/.qpkg/sherpa/cache/sherpa-manager.sh: line 1882: QPKGs-ACshow-to:Add: command not found
		sherpa v240529-unstable

		â€¢ Please provide a valid source after 'show' like:
			# sherpa show abs
			# sherpa show log
			# sherpa show packages
			# sherpa show results
		-------------------------------------------------------------------------------------------------------------------------

	* Ensure Glances v3 is shown as-such on armv5 and armv7 status report.

	* When running 'sherpa rebuild sab', SAB is installed and auto-updates as usual. Then when 'restore' action runs, auto-update runs again.
		- Disable auto-update after installation if 'restore' is to be run, then enable it again after 'restore' completes.

	* Takes 3.5 to 6 seconds to build QPKG states on Laura.
		- Should be able to do this quicker.
		- Calculate QPKG features separate to states and cache/load these from file next time?

	* Applications sourced online are not updating (e.g. Tautulli).
		- Had to 'clean' it to get latest version pulled.
		- Forgot to check: was auto-update disabled? Retest.

	* Default dependency report should only show installed QPKGs.
		- ... but should allow 'sherpa d all' to see all QPKGs.
		- Do the same for repository report.
		- Add new $QPKG_ACTIONS element: 'report'

	* Disable same-line display updates when not in a user terminal.
		- No-need to record every progress message change in logs.

	* Only install IPKs for QPKGs that download successfully (or are already downloaded).
		- ... and the installed ones, as-happens now.

	* Results report wording should account for single QPKG actions.
		- Don't pluralise "package actions" when there was only one.

	* 'sherpa' and 'opkg' were not available after installing Entware.
		- Entware installation may be corrupt.
		- But this shouldn't affect the sherpa command `/usr/sbin/sherpa`.
		- Restarting sherpa got this going again.

	* FIXED: When a QPKG couldn't be signed (due to no 'sqlite3'), it's not shown by QPKGs.Actions:List() at-all.
		- QPKG was skipped-abort, and is shown as a skipped QPKG in results.
		- TODO: Other QPKGs to be signed were not shown in either list.

	* ARMv5 (Helga) is cutting-off debug log early when running 'sherpa s olive verbose' due to SIGINT.

	* When aborting sherpa, must also ensure backgrounded procs abort.
		- UPDATE: working fine, possibly won't need BG_PROCS_PATH anymore. Test to confirm.

	* 'sherpa show status' displays status report correctly, and then displays 'show' usage examples.

	* 'sherpa help show' is only showing basic help, not the 'show' help list.

	* Function durations can become incorrect when functions with the same name are called recursively.
		- Need to make vars holding start-times unique. Maybe measure nest depth?

	* Removing OMedusa QPKG via sherpa didn't update App Center 'live' (icon remained until App Center was manually refreshed).

	* Upgrading QPKGs via sherpa didn't update App Center icons 'live'.

	* Near the end of installing IPKs, monitored download path can remain at non-zero size while packages complete installation.
		- Include a separate progress message when dir size shrinks? Maybe force increase to "100%" and stop monitoring?

	* QPKG version sort is not correctly sorting version numbers followed by an alpha as later than non-alpha.

Reported issues:

	* none.

Hypothetical issues:

	* If a forked action hangs, it might not be killed by its caller.
		- Need to test this.
