Observed issues:

	* Old NZBGet QPKG was 'stop'ped, then a 'backup' was run.
		- This was then followed by a 'start', which is incorrect.
		- This QPKG is using library functions, so other QPKGs will behave this way too.

	* Need to make a cleaner exit during SIGINT when in 'proc: env ...' stage.
		- Must set traps earlier.

	* armv5 (Helga) is cutting-off debug log early when running 'sherpa s olive verbose' due to SIGINT.

	* Allow Kapowarr to follow source git branch, release or tag.

	* When aborting sherpa, must also ensure backgrounded child procs abort.
		- Presently, if a child proc is waiting to check PID again, it doesn't abort.
		- Keep track of every launched background proc $! (save each to path with a unique ID generated before calling proc), then ensure these are killed on exit/sigint/sigkill. A simple accumulator will do for ID.
		- Each background proc will rm its pidfile named as unique ID and provided as $1.
		- On SIGINT from sherpa, loop through remaining files in $BG_PROCS_PATH and kill the pid contained in each one.

	* 'sherpa show status' displays status report correctly, and then displays 'show' usage examples.

	* 'sherpa help show' is only showing basic help, not the 'show' help list.

	* Function durations can become incorrect when functions with the same name are called recursively.
		- Need to make vars holding start-times unique. Maybe measure nest depth?

	* Removing OMedusa QPKG via sherpa didn't update App Center 'live' (icon remained until App Center was manually refreshed).

	* Upgrading QPKGs via sherpa didn't update App Center icons 'live'.

	* Near the end of installing IPKs, monitored download path can remain at non-zero size while packages complete installation.
		- Include a separate progress message when dir size shrinks?

	* QPKG version sort is not correctly sorting version numbers followed by an alpha as later than non-alpha.

Reported issues:

	* none.

Hypothetical issues:

	* If a forked action hangs, it might not be killed by its caller.
		- Need to test this.
