Observed issues:

	* Fresh install of Entware was unable to sign itself. But a dependent QPKGs was signed OK.
		- Need to move signing for independents ProcAction() later in ProcActions().

	* 'sherpa' and 'opkg' were not available after installing Entware.
		- Entware installation may be corrupt.
		- But this shouldn't affect the sherpa command `/usr/sbin/sherpa`.
		- Restarting sherpa got this going again.

	* FIXED: When a QPKG couldn't be signed (due to no 'sqlite3'), it's not shown by QPKGs.Actions:List() at-all.
		- QPKG was skipped-abort, and is shown as a skipped QPKG in results.
		- TODO: Other QPKGs to be signed were not shown in either list.

	* armv5 (Helga) is cutting-off debug log early when running 'sherpa s olive verbose' due to SIGINT.

	* When aborting sherpa, must also ensure backgrounded procs abort.
		- Presently, if a child proc is waiting (example: to check PID of application daemon again), it doesn't abort.
		- Keep track of every launched background proc $! (save each to path with a unique ID generated before calling proc), then ensure these are killed on exit/sigint/sigkill.
		- Each background proc will rm its pidfile named as unique ID.
		- On SIGINT from sherpa, loop through all files remaining in $BG_PROCS_PATH and kill the PID contained in each one.

	* 'sherpa show status' displays status report correctly, and then displays 'show' usage examples.

	* 'sherpa help show' is only showing basic help, not the 'show' help list.

	* Function durations can become incorrect when functions with the same name are called recursively.
		- Need to make vars holding start-times unique. Maybe measure nest depth?

	* Removing OMedusa QPKG via sherpa didn't update App Center 'live' (icon remained until App Center was manually refreshed).

	* Upgrading QPKGs via sherpa didn't update App Center icons 'live'.

	* Near the end of installing IPKs, monitored download path can remain at non-zero size while packages complete installation.
		- Include a separate progress message when dir size shrinks?

	* QPKG version sort is not correctly sorting version numbers followed by an alpha as later than non-alpha.

Reported issues:

	* none.

Hypothetical issues:

	* If a forked action hangs, it might not be killed by its caller.
		- Need to test this.
